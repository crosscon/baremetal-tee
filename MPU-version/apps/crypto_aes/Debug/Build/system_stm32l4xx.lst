ARM GAS  Build/system_stm32l4xx.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"system_stm32l4xx.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "../Core/Src/system_stm32l4xx.c"
  18              		.section	.text.SystemInit,"ax",%progbits
  19              		.align	1
  20              		.global	SystemInit
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	SystemInit:
  26              	.LFB74:
   1:../Core/Src/system_stm32l4xx.c **** /**
   2:../Core/Src/system_stm32l4xx.c ****   ******************************************************************************
   3:../Core/Src/system_stm32l4xx.c ****   * @file    system_stm32l4xx.c
   4:../Core/Src/system_stm32l4xx.c ****   * @author  MCD Application Team
   5:../Core/Src/system_stm32l4xx.c ****   * @brief   CMSIS Cortex-M4 Device Peripheral Access Layer System Source File
   6:../Core/Src/system_stm32l4xx.c ****   *
   7:../Core/Src/system_stm32l4xx.c ****   *   This file provides two functions and one global variable to be called from
   8:../Core/Src/system_stm32l4xx.c ****   *   user application:
   9:../Core/Src/system_stm32l4xx.c ****   *      - SystemInit(): This function is called at startup just after reset and
  10:../Core/Src/system_stm32l4xx.c ****   *                      before branch to main program. This call is made inside
  11:../Core/Src/system_stm32l4xx.c ****   *                      the "startup_stm32l4xx.s" file.
  12:../Core/Src/system_stm32l4xx.c ****   *
  13:../Core/Src/system_stm32l4xx.c ****   *      - SystemCoreClock variable: Contains the core clock (HCLK), it can be used
  14:../Core/Src/system_stm32l4xx.c ****   *                                  by the user application to setup the SysTick
  15:../Core/Src/system_stm32l4xx.c ****   *                                  timer or configure other parameters.
  16:../Core/Src/system_stm32l4xx.c ****   *
  17:../Core/Src/system_stm32l4xx.c ****   *      - SystemCoreClockUpdate(): Updates the variable SystemCoreClock and must
  18:../Core/Src/system_stm32l4xx.c ****   *                                 be called whenever the core clock is changed
  19:../Core/Src/system_stm32l4xx.c ****   *                                 during program execution.
  20:../Core/Src/system_stm32l4xx.c ****   *
  21:../Core/Src/system_stm32l4xx.c ****   *   After each device reset the MSI (4 MHz) is used as system clock source.
  22:../Core/Src/system_stm32l4xx.c ****   *   Then SystemInit() function is called, in "startup_stm32l4xx.s" file, to
  23:../Core/Src/system_stm32l4xx.c ****   *   configure the system clock before to branch to main program.
  24:../Core/Src/system_stm32l4xx.c ****   *
  25:../Core/Src/system_stm32l4xx.c ****   *   This file configures the system clock as follows:
  26:../Core/Src/system_stm32l4xx.c ****   *=============================================================================
  27:../Core/Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  28:../Core/Src/system_stm32l4xx.c ****   *        System Clock source                    | MSI
  29:../Core/Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  30:../Core/Src/system_stm32l4xx.c ****   *        SYSCLK(Hz)                             | 4000000
  31:../Core/Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  32:../Core/Src/system_stm32l4xx.c ****   *        HCLK(Hz)                               | 4000000
ARM GAS  Build/system_stm32l4xx.s 			page 2


  33:../Core/Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  34:../Core/Src/system_stm32l4xx.c ****   *        AHB Prescaler                          | 1
  35:../Core/Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  36:../Core/Src/system_stm32l4xx.c ****   *        APB1 Prescaler                         | 1
  37:../Core/Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  38:../Core/Src/system_stm32l4xx.c ****   *        APB2 Prescaler                         | 1
  39:../Core/Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  40:../Core/Src/system_stm32l4xx.c ****   *        PLL_M                                  | 1
  41:../Core/Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  42:../Core/Src/system_stm32l4xx.c ****   *        PLL_N                                  | 8
  43:../Core/Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  44:../Core/Src/system_stm32l4xx.c ****   *        PLL_P                                  | 7
  45:../Core/Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  46:../Core/Src/system_stm32l4xx.c ****   *        PLL_Q                                  | 2
  47:../Core/Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  48:../Core/Src/system_stm32l4xx.c ****   *        PLL_R                                  | 2
  49:../Core/Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  50:../Core/Src/system_stm32l4xx.c ****   *        PLLSAI1_P                              | NA
  51:../Core/Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  52:../Core/Src/system_stm32l4xx.c ****   *        PLLSAI1_Q                              | NA
  53:../Core/Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  54:../Core/Src/system_stm32l4xx.c ****   *        PLLSAI1_R                              | NA
  55:../Core/Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  56:../Core/Src/system_stm32l4xx.c ****   *        PLLSAI2_P                              | NA
  57:../Core/Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  58:../Core/Src/system_stm32l4xx.c ****   *        PLLSAI2_Q                              | NA
  59:../Core/Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  60:../Core/Src/system_stm32l4xx.c ****   *        PLLSAI2_R                              | NA
  61:../Core/Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  62:../Core/Src/system_stm32l4xx.c ****   *        Require 48MHz for USB OTG FS,          | Disabled
  63:../Core/Src/system_stm32l4xx.c ****   *        SDIO and RNG clock                     |
  64:../Core/Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  65:../Core/Src/system_stm32l4xx.c ****   *=============================================================================
  66:../Core/Src/system_stm32l4xx.c ****   ******************************************************************************
  67:../Core/Src/system_stm32l4xx.c ****   * @attention
  68:../Core/Src/system_stm32l4xx.c ****   *
  69:../Core/Src/system_stm32l4xx.c ****   * Copyright (c) 2017 STMicroelectronics.
  70:../Core/Src/system_stm32l4xx.c ****   * All rights reserved.
  71:../Core/Src/system_stm32l4xx.c ****   *
  72:../Core/Src/system_stm32l4xx.c ****   * This software is licensed under terms that can be found in the LICENSE file
  73:../Core/Src/system_stm32l4xx.c ****   * in the root directory of this software component.
  74:../Core/Src/system_stm32l4xx.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  75:../Core/Src/system_stm32l4xx.c ****   *
  76:../Core/Src/system_stm32l4xx.c ****   ******************************************************************************
  77:../Core/Src/system_stm32l4xx.c ****   */
  78:../Core/Src/system_stm32l4xx.c **** 
  79:../Core/Src/system_stm32l4xx.c **** /** @addtogroup CMSIS
  80:../Core/Src/system_stm32l4xx.c ****   * @{
  81:../Core/Src/system_stm32l4xx.c ****   */
  82:../Core/Src/system_stm32l4xx.c **** 
  83:../Core/Src/system_stm32l4xx.c **** /** @addtogroup stm32l4xx_system
  84:../Core/Src/system_stm32l4xx.c ****   * @{
  85:../Core/Src/system_stm32l4xx.c ****   */
  86:../Core/Src/system_stm32l4xx.c **** 
  87:../Core/Src/system_stm32l4xx.c **** /** @addtogroup STM32L4xx_System_Private_Includes
  88:../Core/Src/system_stm32l4xx.c ****   * @{
  89:../Core/Src/system_stm32l4xx.c ****   */
ARM GAS  Build/system_stm32l4xx.s 			page 3


  90:../Core/Src/system_stm32l4xx.c **** 
  91:../Core/Src/system_stm32l4xx.c **** #include "stm32l4xx.h"
  92:../Core/Src/system_stm32l4xx.c **** 
  93:../Core/Src/system_stm32l4xx.c **** /**
  94:../Core/Src/system_stm32l4xx.c ****   * @}
  95:../Core/Src/system_stm32l4xx.c ****   */
  96:../Core/Src/system_stm32l4xx.c **** 
  97:../Core/Src/system_stm32l4xx.c **** /** @addtogroup STM32L4xx_System_Private_TypesDefinitions
  98:../Core/Src/system_stm32l4xx.c ****   * @{
  99:../Core/Src/system_stm32l4xx.c ****   */
 100:../Core/Src/system_stm32l4xx.c **** 
 101:../Core/Src/system_stm32l4xx.c **** /**
 102:../Core/Src/system_stm32l4xx.c ****   * @}
 103:../Core/Src/system_stm32l4xx.c ****   */
 104:../Core/Src/system_stm32l4xx.c **** 
 105:../Core/Src/system_stm32l4xx.c **** /** @addtogroup STM32L4xx_System_Private_Defines
 106:../Core/Src/system_stm32l4xx.c ****   * @{
 107:../Core/Src/system_stm32l4xx.c ****   */
 108:../Core/Src/system_stm32l4xx.c **** 
 109:../Core/Src/system_stm32l4xx.c **** #if !defined  (HSE_VALUE)
 110:../Core/Src/system_stm32l4xx.c ****   #define HSE_VALUE    8000000U  /*!< Value of the External oscillator in Hz */
 111:../Core/Src/system_stm32l4xx.c **** #endif /* HSE_VALUE */
 112:../Core/Src/system_stm32l4xx.c **** 
 113:../Core/Src/system_stm32l4xx.c **** #if !defined  (MSI_VALUE)
 114:../Core/Src/system_stm32l4xx.c ****   #define MSI_VALUE    4000000U  /*!< Value of the Internal oscillator in Hz*/
 115:../Core/Src/system_stm32l4xx.c **** #endif /* MSI_VALUE */
 116:../Core/Src/system_stm32l4xx.c **** 
 117:../Core/Src/system_stm32l4xx.c **** #if !defined  (HSI_VALUE)
 118:../Core/Src/system_stm32l4xx.c ****   #define HSI_VALUE    16000000U /*!< Value of the Internal oscillator in Hz*/
 119:../Core/Src/system_stm32l4xx.c **** #endif /* HSI_VALUE */
 120:../Core/Src/system_stm32l4xx.c **** 
 121:../Core/Src/system_stm32l4xx.c **** /* Note: Following vector table addresses must be defined in line with linker
 122:../Core/Src/system_stm32l4xx.c ****          configuration. */
 123:../Core/Src/system_stm32l4xx.c **** /*!< Uncomment the following line if you need to relocate the vector table
 124:../Core/Src/system_stm32l4xx.c ****      anywhere in Flash or Sram, else the vector table is kept at the automatic
 125:../Core/Src/system_stm32l4xx.c ****      remap of boot address selected */
 126:../Core/Src/system_stm32l4xx.c **** /* #define USER_VECT_TAB_ADDRESS */
 127:../Core/Src/system_stm32l4xx.c **** 
 128:../Core/Src/system_stm32l4xx.c **** #if defined(USER_VECT_TAB_ADDRESS)
 129:../Core/Src/system_stm32l4xx.c **** /*!< Uncomment the following line if you need to relocate your vector Table
 130:../Core/Src/system_stm32l4xx.c ****      in Sram else user remap will be done in Flash. */
 131:../Core/Src/system_stm32l4xx.c **** /* #define VECT_TAB_SRAM */
 132:../Core/Src/system_stm32l4xx.c **** 
 133:../Core/Src/system_stm32l4xx.c **** #if defined(VECT_TAB_SRAM)
 134:../Core/Src/system_stm32l4xx.c **** #define VECT_TAB_BASE_ADDRESS   SRAM1_BASE      /*!< Vector Table base address field.
 135:../Core/Src/system_stm32l4xx.c ****                                                      This value must be a multiple of 0x200. */
 136:../Core/Src/system_stm32l4xx.c **** #define VECT_TAB_OFFSET         0x00000000U     /*!< Vector Table base offset field.
 137:../Core/Src/system_stm32l4xx.c ****                                                      This value must be a multiple of 0x200. */
 138:../Core/Src/system_stm32l4xx.c **** #else
 139:../Core/Src/system_stm32l4xx.c **** #define VECT_TAB_BASE_ADDRESS   FLASH_BASE      /*!< Vector Table base address field.
 140:../Core/Src/system_stm32l4xx.c ****                                                      This value must be a multiple of 0x200. */
 141:../Core/Src/system_stm32l4xx.c **** #define VECT_TAB_OFFSET         0x00000000U     /*!< Vector Table base offset field.
 142:../Core/Src/system_stm32l4xx.c ****                                                      This value must be a multiple of 0x200. */
 143:../Core/Src/system_stm32l4xx.c **** #endif /* VECT_TAB_SRAM */
 144:../Core/Src/system_stm32l4xx.c **** #endif /* USER_VECT_TAB_ADDRESS */
 145:../Core/Src/system_stm32l4xx.c **** 
 146:../Core/Src/system_stm32l4xx.c **** /******************************************************************************/
ARM GAS  Build/system_stm32l4xx.s 			page 4


 147:../Core/Src/system_stm32l4xx.c **** /**
 148:../Core/Src/system_stm32l4xx.c ****   * @}
 149:../Core/Src/system_stm32l4xx.c ****   */
 150:../Core/Src/system_stm32l4xx.c **** 
 151:../Core/Src/system_stm32l4xx.c **** /** @addtogroup STM32L4xx_System_Private_Macros
 152:../Core/Src/system_stm32l4xx.c ****   * @{
 153:../Core/Src/system_stm32l4xx.c ****   */
 154:../Core/Src/system_stm32l4xx.c **** 
 155:../Core/Src/system_stm32l4xx.c **** /**
 156:../Core/Src/system_stm32l4xx.c ****   * @}
 157:../Core/Src/system_stm32l4xx.c ****   */
 158:../Core/Src/system_stm32l4xx.c **** 
 159:../Core/Src/system_stm32l4xx.c **** /** @addtogroup STM32L4xx_System_Private_Variables
 160:../Core/Src/system_stm32l4xx.c ****   * @{
 161:../Core/Src/system_stm32l4xx.c ****   */
 162:../Core/Src/system_stm32l4xx.c ****   /* The SystemCoreClock variable is updated in three ways:
 163:../Core/Src/system_stm32l4xx.c ****       1) by calling CMSIS function SystemCoreClockUpdate()
 164:../Core/Src/system_stm32l4xx.c ****       2) by calling HAL API function HAL_RCC_GetHCLKFreq()
 165:../Core/Src/system_stm32l4xx.c ****       3) each time HAL_RCC_ClockConfig() is called to configure the system clock frequency
 166:../Core/Src/system_stm32l4xx.c ****          Note: If you use this function to configure the system clock; then there
 167:../Core/Src/system_stm32l4xx.c ****                is no need to call the 2 first functions listed above, since SystemCoreClock
 168:../Core/Src/system_stm32l4xx.c ****                variable is updated automatically.
 169:../Core/Src/system_stm32l4xx.c ****   */
 170:../Core/Src/system_stm32l4xx.c ****   uint32_t SystemCoreClock = 4000000U;
 171:../Core/Src/system_stm32l4xx.c **** 
 172:../Core/Src/system_stm32l4xx.c ****   const uint8_t  AHBPrescTable[16] = {0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 1U, 2U, 3U, 4U, 6U, 7U, 8U, 9
 173:../Core/Src/system_stm32l4xx.c ****   const uint8_t  APBPrescTable[8] =  {0U, 0U, 0U, 0U, 1U, 2U, 3U, 4U};
 174:../Core/Src/system_stm32l4xx.c ****   const uint32_t MSIRangeTable[12] = {100000U,   200000U,   400000U,   800000U,  1000000U,  2000000
 175:../Core/Src/system_stm32l4xx.c ****                                       4000000U, 8000000U, 16000000U, 24000000U, 32000000U, 48000000
 176:../Core/Src/system_stm32l4xx.c **** /**
 177:../Core/Src/system_stm32l4xx.c ****   * @}
 178:../Core/Src/system_stm32l4xx.c ****   */
 179:../Core/Src/system_stm32l4xx.c **** 
 180:../Core/Src/system_stm32l4xx.c **** /** @addtogroup STM32L4xx_System_Private_FunctionPrototypes
 181:../Core/Src/system_stm32l4xx.c ****   * @{
 182:../Core/Src/system_stm32l4xx.c ****   */
 183:../Core/Src/system_stm32l4xx.c **** 
 184:../Core/Src/system_stm32l4xx.c **** /**
 185:../Core/Src/system_stm32l4xx.c ****   * @}
 186:../Core/Src/system_stm32l4xx.c ****   */
 187:../Core/Src/system_stm32l4xx.c **** 
 188:../Core/Src/system_stm32l4xx.c **** /** @addtogroup STM32L4xx_System_Private_Functions
 189:../Core/Src/system_stm32l4xx.c ****   * @{
 190:../Core/Src/system_stm32l4xx.c ****   */
 191:../Core/Src/system_stm32l4xx.c **** 
 192:../Core/Src/system_stm32l4xx.c **** /**
 193:../Core/Src/system_stm32l4xx.c ****   * @brief  Setup the microcontroller system.
 194:../Core/Src/system_stm32l4xx.c ****   * @retval None
 195:../Core/Src/system_stm32l4xx.c ****   */
 196:../Core/Src/system_stm32l4xx.c **** 
 197:../Core/Src/system_stm32l4xx.c **** void SystemInit(void)
 198:../Core/Src/system_stm32l4xx.c **** {
  27              		.loc 1 198 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
ARM GAS  Build/system_stm32l4xx.s 			page 5


 199:../Core/Src/system_stm32l4xx.c **** #if defined(USER_VECT_TAB_ADDRESS)
 200:../Core/Src/system_stm32l4xx.c ****   /* Configure the Vector Table location -------------------------------------*/
 201:../Core/Src/system_stm32l4xx.c ****   SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET;
 202:../Core/Src/system_stm32l4xx.c **** #endif
 203:../Core/Src/system_stm32l4xx.c **** 
 204:../Core/Src/system_stm32l4xx.c ****   /* FPU settings ------------------------------------------------------------*/
 205:../Core/Src/system_stm32l4xx.c **** #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
 206:../Core/Src/system_stm32l4xx.c ****   SCB->CPACR |= ((3UL << 20U)|(3UL << 22U));  /* set CP10 and CP11 Full Access */
 207:../Core/Src/system_stm32l4xx.c **** #endif
 208:../Core/Src/system_stm32l4xx.c **** }
  32              		.loc 1 208 1 view .LVU1
  33 0000 7047     		bx	lr
  34              		.cfi_endproc
  35              	.LFE74:
  37              		.section	.text.SystemCoreClockUpdate,"ax",%progbits
  38              		.align	1
  39              		.global	SystemCoreClockUpdate
  40              		.syntax unified
  41              		.thumb
  42              		.thumb_func
  44              	SystemCoreClockUpdate:
  45              	.LFB75:
 209:../Core/Src/system_stm32l4xx.c **** 
 210:../Core/Src/system_stm32l4xx.c **** /**
 211:../Core/Src/system_stm32l4xx.c ****   * @brief  Update SystemCoreClock variable according to Clock Register Values.
 212:../Core/Src/system_stm32l4xx.c ****   *         The SystemCoreClock variable contains the core clock (HCLK), it can
 213:../Core/Src/system_stm32l4xx.c ****   *         be used by the user application to setup the SysTick timer or configure
 214:../Core/Src/system_stm32l4xx.c ****   *         other parameters.
 215:../Core/Src/system_stm32l4xx.c ****   *
 216:../Core/Src/system_stm32l4xx.c ****   * @note   Each time the core clock (HCLK) changes, this function must be called
 217:../Core/Src/system_stm32l4xx.c ****   *         to update SystemCoreClock variable value. Otherwise, any configuration
 218:../Core/Src/system_stm32l4xx.c ****   *         based on this variable will be incorrect.
 219:../Core/Src/system_stm32l4xx.c ****   *
 220:../Core/Src/system_stm32l4xx.c ****   * @note   - The system frequency computed by this function is not the real
 221:../Core/Src/system_stm32l4xx.c ****   *           frequency in the chip. It is calculated based on the predefined
 222:../Core/Src/system_stm32l4xx.c ****   *           constant and the selected clock source:
 223:../Core/Src/system_stm32l4xx.c ****   *
 224:../Core/Src/system_stm32l4xx.c ****   *           - If SYSCLK source is MSI, SystemCoreClock will contain the MSI_VALUE(*)
 225:../Core/Src/system_stm32l4xx.c ****   *
 226:../Core/Src/system_stm32l4xx.c ****   *           - If SYSCLK source is HSI, SystemCoreClock will contain the HSI_VALUE(**)
 227:../Core/Src/system_stm32l4xx.c ****   *
 228:../Core/Src/system_stm32l4xx.c ****   *           - If SYSCLK source is HSE, SystemCoreClock will contain the HSE_VALUE(***)
 229:../Core/Src/system_stm32l4xx.c ****   *
 230:../Core/Src/system_stm32l4xx.c ****   *           - If SYSCLK source is PLL, SystemCoreClock will contain the HSE_VALUE(***)
 231:../Core/Src/system_stm32l4xx.c ****   *             or HSI_VALUE(*) or MSI_VALUE(*) multiplied/divided by the PLL factors.
 232:../Core/Src/system_stm32l4xx.c ****   *
 233:../Core/Src/system_stm32l4xx.c ****   *         (*) MSI_VALUE is a constant defined in stm32l4xx_hal.h file (default value
 234:../Core/Src/system_stm32l4xx.c ****   *             4 MHz) but the real value may vary depending on the variations
 235:../Core/Src/system_stm32l4xx.c ****   *             in voltage and temperature.
 236:../Core/Src/system_stm32l4xx.c ****   *
 237:../Core/Src/system_stm32l4xx.c ****   *         (**) HSI_VALUE is a constant defined in stm32l4xx_hal.h file (default value
 238:../Core/Src/system_stm32l4xx.c ****   *              16 MHz) but the real value may vary depending on the variations
 239:../Core/Src/system_stm32l4xx.c ****   *              in voltage and temperature.
 240:../Core/Src/system_stm32l4xx.c ****   *
 241:../Core/Src/system_stm32l4xx.c ****   *         (***) HSE_VALUE is a constant defined in stm32l4xx_hal.h file (default value
 242:../Core/Src/system_stm32l4xx.c ****   *              8 MHz), user has to ensure that HSE_VALUE is same as the real
 243:../Core/Src/system_stm32l4xx.c ****   *              frequency of the crystal used. Otherwise, this function may
ARM GAS  Build/system_stm32l4xx.s 			page 6


 244:../Core/Src/system_stm32l4xx.c ****   *              have wrong result.
 245:../Core/Src/system_stm32l4xx.c ****   *
 246:../Core/Src/system_stm32l4xx.c ****   *         - The result of this function could be not correct when using fractional
 247:../Core/Src/system_stm32l4xx.c ****   *           value for HSE crystal.
 248:../Core/Src/system_stm32l4xx.c ****   *
 249:../Core/Src/system_stm32l4xx.c ****   * @retval None
 250:../Core/Src/system_stm32l4xx.c ****   */
 251:../Core/Src/system_stm32l4xx.c **** void SystemCoreClockUpdate(void)
 252:../Core/Src/system_stm32l4xx.c **** {
  46              		.loc 1 252 1 view -0
  47              		.cfi_startproc
  48              		@ args = 0, pretend = 0, frame = 0
  49              		@ frame_needed = 0, uses_anonymous_args = 0
  50              		@ link register save eliminated.
 253:../Core/Src/system_stm32l4xx.c ****   uint32_t tmp, msirange, pllvco, pllsource, pllm, pllr;
  51              		.loc 1 253 3 view .LVU3
 254:../Core/Src/system_stm32l4xx.c **** 
 255:../Core/Src/system_stm32l4xx.c ****   /* Get MSI Range frequency--------------------------------------------------*/
 256:../Core/Src/system_stm32l4xx.c ****   if ((RCC->CR & RCC_CR_MSIRGSEL) == 0U)
  52              		.loc 1 256 3 view .LVU4
  53              		.loc 1 256 11 is_stmt 0 view .LVU5
  54 0000 2F4B     		ldr	r3, .L17
  55 0002 1B68     		ldr	r3, [r3]
  56              		.loc 1 256 6 view .LVU6
  57 0004 13F0080F 		tst	r3, #8
  58 0008 16D1     		bne	.L3
 257:../Core/Src/system_stm32l4xx.c ****   { /* MSISRANGE from RCC_CSR applies */
 258:../Core/Src/system_stm32l4xx.c ****     msirange = (RCC->CSR & RCC_CSR_MSISRANGE) >> 8U;
  59              		.loc 1 258 5 is_stmt 1 view .LVU7
  60              		.loc 1 258 20 is_stmt 0 view .LVU8
  61 000a 2D4B     		ldr	r3, .L17
  62 000c D3F89430 		ldr	r3, [r3, #148]
  63              		.loc 1 258 14 view .LVU9
  64 0010 C3F30323 		ubfx	r3, r3, #8, #4
  65              	.LVL0:
  66              	.L4:
 259:../Core/Src/system_stm32l4xx.c ****   }
 260:../Core/Src/system_stm32l4xx.c ****   else
 261:../Core/Src/system_stm32l4xx.c ****   { /* MSIRANGE from RCC_CR applies */
 262:../Core/Src/system_stm32l4xx.c ****     msirange = (RCC->CR & RCC_CR_MSIRANGE) >> 4U;
 263:../Core/Src/system_stm32l4xx.c ****   }
 264:../Core/Src/system_stm32l4xx.c ****   /*MSI frequency range in HZ*/
 265:../Core/Src/system_stm32l4xx.c ****   msirange = MSIRangeTable[msirange];
  67              		.loc 1 265 3 is_stmt 1 view .LVU10
  68              		.loc 1 265 12 is_stmt 0 view .LVU11
  69 0014 2B4A     		ldr	r2, .L17+4
  70 0016 52F82320 		ldr	r2, [r2, r3, lsl #2]
  71              	.LVL1:
 266:../Core/Src/system_stm32l4xx.c **** 
 267:../Core/Src/system_stm32l4xx.c ****   /* Get SYSCLK source -------------------------------------------------------*/
 268:../Core/Src/system_stm32l4xx.c ****   switch (RCC->CFGR & RCC_CFGR_SWS)
  72              		.loc 1 268 3 is_stmt 1 view .LVU12
  73              		.loc 1 268 14 is_stmt 0 view .LVU13
  74 001a 294B     		ldr	r3, .L17
  75 001c 9B68     		ldr	r3, [r3, #8]
  76              		.loc 1 268 21 view .LVU14
  77 001e 03F00C03 		and	r3, r3, #12
ARM GAS  Build/system_stm32l4xx.s 			page 7


  78              		.loc 1 268 3 view .LVU15
  79 0022 0C2B     		cmp	r3, #12
  80 0024 48D8     		bhi	.L5
  81 0026 DFE803F0 		tbb	[pc, r3]
  82              	.L7:
  83 002a 0C       		.byte	(.L10-.L7)/2
  84 002b 47       		.byte	(.L5-.L7)/2
  85 002c 47       		.byte	(.L5-.L7)/2
  86 002d 47       		.byte	(.L5-.L7)/2
  87 002e 0F       		.byte	(.L9-.L7)/2
  88 002f 47       		.byte	(.L5-.L7)/2
  89 0030 47       		.byte	(.L5-.L7)/2
  90 0031 47       		.byte	(.L5-.L7)/2
  91 0032 13       		.byte	(.L8-.L7)/2
  92 0033 47       		.byte	(.L5-.L7)/2
  93 0034 47       		.byte	(.L5-.L7)/2
  94 0035 47       		.byte	(.L5-.L7)/2
  95 0036 17       		.byte	(.L6-.L7)/2
  96              	.LVL2:
  97 0037 00       		.p2align 1
  98              	.L3:
 262:../Core/Src/system_stm32l4xx.c ****   }
  99              		.loc 1 262 5 is_stmt 1 view .LVU16
 262:../Core/Src/system_stm32l4xx.c ****   }
 100              		.loc 1 262 20 is_stmt 0 view .LVU17
 101 0038 214B     		ldr	r3, .L17
 102 003a 1B68     		ldr	r3, [r3]
 262:../Core/Src/system_stm32l4xx.c ****   }
 103              		.loc 1 262 14 view .LVU18
 104 003c C3F30313 		ubfx	r3, r3, #4, #4
 105              	.LVL3:
 262:../Core/Src/system_stm32l4xx.c ****   }
 106              		.loc 1 262 14 view .LVU19
 107 0040 E8E7     		b	.L4
 108              	.LVL4:
 109              	.L10:
 269:../Core/Src/system_stm32l4xx.c ****   {
 270:../Core/Src/system_stm32l4xx.c ****     case 0x00:  /* MSI used as system clock source */
 271:../Core/Src/system_stm32l4xx.c ****       SystemCoreClock = msirange;
 110              		.loc 1 271 7 is_stmt 1 view .LVU20
 111              		.loc 1 271 23 is_stmt 0 view .LVU21
 112 0042 214B     		ldr	r3, .L17+8
 113 0044 1A60     		str	r2, [r3]
 272:../Core/Src/system_stm32l4xx.c ****       break;
 114              		.loc 1 272 7 is_stmt 1 view .LVU22
 115 0046 28E0     		b	.L11
 116              	.L9:
 273:../Core/Src/system_stm32l4xx.c **** 
 274:../Core/Src/system_stm32l4xx.c ****     case 0x04:  /* HSI used as system clock source */
 275:../Core/Src/system_stm32l4xx.c ****       SystemCoreClock = HSI_VALUE;
 117              		.loc 1 275 7 view .LVU23
 118              		.loc 1 275 23 is_stmt 0 view .LVU24
 119 0048 1F4B     		ldr	r3, .L17+8
 120 004a 204A     		ldr	r2, .L17+12
 121              	.LVL5:
 122              		.loc 1 275 23 view .LVU25
 123 004c 1A60     		str	r2, [r3]
ARM GAS  Build/system_stm32l4xx.s 			page 8


 276:../Core/Src/system_stm32l4xx.c ****       break;
 124              		.loc 1 276 7 is_stmt 1 view .LVU26
 125 004e 24E0     		b	.L11
 126              	.LVL6:
 127              	.L8:
 277:../Core/Src/system_stm32l4xx.c **** 
 278:../Core/Src/system_stm32l4xx.c ****     case 0x08:  /* HSE used as system clock source */
 279:../Core/Src/system_stm32l4xx.c ****       SystemCoreClock = HSE_VALUE;
 128              		.loc 1 279 7 view .LVU27
 129              		.loc 1 279 23 is_stmt 0 view .LVU28
 130 0050 1D4B     		ldr	r3, .L17+8
 131 0052 1F4A     		ldr	r2, .L17+16
 132              	.LVL7:
 133              		.loc 1 279 23 view .LVU29
 134 0054 1A60     		str	r2, [r3]
 280:../Core/Src/system_stm32l4xx.c ****       break;
 135              		.loc 1 280 7 is_stmt 1 view .LVU30
 136 0056 20E0     		b	.L11
 137              	.LVL8:
 138              	.L6:
 281:../Core/Src/system_stm32l4xx.c **** 
 282:../Core/Src/system_stm32l4xx.c ****     case 0x0C:  /* PLL used as system clock  source */
 283:../Core/Src/system_stm32l4xx.c ****       /* PLL_VCO = (HSE_VALUE or HSI_VALUE or MSI_VALUE/ PLLM) * PLLN
 284:../Core/Src/system_stm32l4xx.c ****          SYSCLK = PLL_VCO / PLLR
 285:../Core/Src/system_stm32l4xx.c ****          */
 286:../Core/Src/system_stm32l4xx.c ****       pllsource = (RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC);
 139              		.loc 1 286 7 view .LVU31
 140              		.loc 1 286 23 is_stmt 0 view .LVU32
 141 0058 194B     		ldr	r3, .L17
 142 005a D968     		ldr	r1, [r3, #12]
 143              		.loc 1 286 17 view .LVU33
 144 005c 01F00301 		and	r1, r1, #3
 145              	.LVL9:
 287:../Core/Src/system_stm32l4xx.c ****       pllm = ((RCC->PLLCFGR & RCC_PLLCFGR_PLLM) >> 4U) + 1U ;
 146              		.loc 1 287 7 is_stmt 1 view .LVU34
 147              		.loc 1 287 19 is_stmt 0 view .LVU35
 148 0060 DB68     		ldr	r3, [r3, #12]
 149              		.loc 1 287 49 view .LVU36
 150 0062 C3F30213 		ubfx	r3, r3, #4, #3
 151              		.loc 1 287 12 view .LVU37
 152 0066 0133     		adds	r3, r3, #1
 153              	.LVL10:
 288:../Core/Src/system_stm32l4xx.c **** 
 289:../Core/Src/system_stm32l4xx.c ****       switch (pllsource)
 154              		.loc 1 289 7 is_stmt 1 view .LVU38
 155 0068 0229     		cmp	r1, #2
 156 006a 04D0     		beq	.L12
 157 006c 0329     		cmp	r1, #3
 158 006e 1FD0     		beq	.L13
 290:../Core/Src/system_stm32l4xx.c ****       {
 291:../Core/Src/system_stm32l4xx.c ****         case 0x02:  /* HSI used as PLL clock source */
 292:../Core/Src/system_stm32l4xx.c ****           pllvco = (HSI_VALUE / pllm);
 293:../Core/Src/system_stm32l4xx.c ****           break;
 294:../Core/Src/system_stm32l4xx.c **** 
 295:../Core/Src/system_stm32l4xx.c ****         case 0x03:  /* HSE used as PLL clock source */
 296:../Core/Src/system_stm32l4xx.c ****           pllvco = (HSE_VALUE / pllm);
 297:../Core/Src/system_stm32l4xx.c ****           break;
ARM GAS  Build/system_stm32l4xx.s 			page 9


 298:../Core/Src/system_stm32l4xx.c **** 
 299:../Core/Src/system_stm32l4xx.c ****         default:    /* MSI used as PLL clock source */
 300:../Core/Src/system_stm32l4xx.c ****           pllvco = (msirange / pllm);
 159              		.loc 1 300 11 view .LVU39
 160              		.loc 1 300 18 is_stmt 0 view .LVU40
 161 0070 B2FBF3F2 		udiv	r2, r2, r3
 162              	.LVL11:
 301:../Core/Src/system_stm32l4xx.c ****           break;
 163              		.loc 1 301 11 is_stmt 1 view .LVU41
 164 0074 02E0     		b	.L15
 165              	.LVL12:
 166              	.L12:
 292:../Core/Src/system_stm32l4xx.c ****           break;
 167              		.loc 1 292 11 view .LVU42
 292:../Core/Src/system_stm32l4xx.c ****           break;
 168              		.loc 1 292 18 is_stmt 0 view .LVU43
 169 0076 154A     		ldr	r2, .L17+12
 170              	.LVL13:
 292:../Core/Src/system_stm32l4xx.c ****           break;
 171              		.loc 1 292 18 view .LVU44
 172 0078 B2FBF3F2 		udiv	r2, r2, r3
 173              	.LVL14:
 293:../Core/Src/system_stm32l4xx.c **** 
 174              		.loc 1 293 11 is_stmt 1 view .LVU45
 175              	.L15:
 302:../Core/Src/system_stm32l4xx.c ****       }
 303:../Core/Src/system_stm32l4xx.c ****       pllvco = pllvco * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 8U);
 176              		.loc 1 303 7 view .LVU46
 177              		.loc 1 303 30 is_stmt 0 view .LVU47
 178 007c 1049     		ldr	r1, .L17
 179              	.LVL15:
 180              		.loc 1 303 30 view .LVU48
 181 007e CB68     		ldr	r3, [r1, #12]
 182              	.LVL16:
 183              		.loc 1 303 60 view .LVU49
 184 0080 C3F30623 		ubfx	r3, r3, #8, #7
 185              		.loc 1 303 14 view .LVU50
 186 0084 02FB03F3 		mul	r3, r2, r3
 187              	.LVL17:
 304:../Core/Src/system_stm32l4xx.c ****       pllr = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLR) >> 25U) + 1U) * 2U;
 188              		.loc 1 304 7 is_stmt 1 view .LVU51
 189              		.loc 1 304 20 is_stmt 0 view .LVU52
 190 0088 CA68     		ldr	r2, [r1, #12]
 191              		.loc 1 304 50 view .LVU53
 192 008a C2F34162 		ubfx	r2, r2, #25, #2
 193              		.loc 1 304 58 view .LVU54
 194 008e 0132     		adds	r2, r2, #1
 195              		.loc 1 304 12 view .LVU55
 196 0090 5200     		lsls	r2, r2, #1
 197              	.LVL18:
 305:../Core/Src/system_stm32l4xx.c ****       SystemCoreClock = pllvco/pllr;
 198              		.loc 1 305 7 is_stmt 1 view .LVU56
 199              		.loc 1 305 31 is_stmt 0 view .LVU57
 200 0092 B3FBF2F3 		udiv	r3, r3, r2
 201              	.LVL19:
 202              		.loc 1 305 23 view .LVU58
 203 0096 0C4A     		ldr	r2, .L17+8
ARM GAS  Build/system_stm32l4xx.s 			page 10


 204              	.LVL20:
 205              		.loc 1 305 23 view .LVU59
 206 0098 1360     		str	r3, [r2]
 306:../Core/Src/system_stm32l4xx.c ****       break;
 207              		.loc 1 306 7 is_stmt 1 view .LVU60
 208              	.LVL21:
 209              	.L11:
 307:../Core/Src/system_stm32l4xx.c **** 
 308:../Core/Src/system_stm32l4xx.c ****     default:
 309:../Core/Src/system_stm32l4xx.c ****       SystemCoreClock = msirange;
 310:../Core/Src/system_stm32l4xx.c ****       break;
 311:../Core/Src/system_stm32l4xx.c ****   }
 312:../Core/Src/system_stm32l4xx.c ****   /* Compute HCLK clock frequency --------------------------------------------*/
 313:../Core/Src/system_stm32l4xx.c ****   /* Get HCLK prescaler */
 314:../Core/Src/system_stm32l4xx.c ****   tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> 4U)];
 210              		.loc 1 314 3 view .LVU61
 211              		.loc 1 314 28 is_stmt 0 view .LVU62
 212 009a 094B     		ldr	r3, .L17
 213 009c 9B68     		ldr	r3, [r3, #8]
 214              		.loc 1 314 52 view .LVU63
 215 009e C3F30313 		ubfx	r3, r3, #4, #4
 216              		.loc 1 314 22 view .LVU64
 217 00a2 0C4A     		ldr	r2, .L17+20
 218 00a4 D15C     		ldrb	r1, [r2, r3]	@ zero_extendqisi2
 219              	.LVL22:
 315:../Core/Src/system_stm32l4xx.c ****   /* HCLK clock frequency */
 316:../Core/Src/system_stm32l4xx.c ****   SystemCoreClock >>= tmp;
 220              		.loc 1 316 3 is_stmt 1 view .LVU65
 221              		.loc 1 316 19 is_stmt 0 view .LVU66
 222 00a6 084A     		ldr	r2, .L17+8
 223 00a8 1368     		ldr	r3, [r2]
 224 00aa CB40     		lsrs	r3, r3, r1
 225 00ac 1360     		str	r3, [r2]
 317:../Core/Src/system_stm32l4xx.c **** }
 226              		.loc 1 317 1 view .LVU67
 227 00ae 7047     		bx	lr
 228              	.LVL23:
 229              	.L13:
 296:../Core/Src/system_stm32l4xx.c ****           break;
 230              		.loc 1 296 11 is_stmt 1 view .LVU68
 296:../Core/Src/system_stm32l4xx.c ****           break;
 231              		.loc 1 296 18 is_stmt 0 view .LVU69
 232 00b0 074A     		ldr	r2, .L17+16
 233              	.LVL24:
 296:../Core/Src/system_stm32l4xx.c ****           break;
 234              		.loc 1 296 18 view .LVU70
 235 00b2 B2FBF3F2 		udiv	r2, r2, r3
 236              	.LVL25:
 297:../Core/Src/system_stm32l4xx.c **** 
 237              		.loc 1 297 11 is_stmt 1 view .LVU71
 238 00b6 E1E7     		b	.L15
 239              	.LVL26:
 240              	.L5:
 309:../Core/Src/system_stm32l4xx.c ****       break;
 241              		.loc 1 309 7 view .LVU72
 309:../Core/Src/system_stm32l4xx.c ****       break;
 242              		.loc 1 309 23 is_stmt 0 view .LVU73
ARM GAS  Build/system_stm32l4xx.s 			page 11


 243 00b8 034B     		ldr	r3, .L17+8
 244 00ba 1A60     		str	r2, [r3]
 310:../Core/Src/system_stm32l4xx.c ****   }
 245              		.loc 1 310 7 is_stmt 1 view .LVU74
 246 00bc EDE7     		b	.L11
 247              	.L18:
 248 00be 00BF     		.align	2
 249              	.L17:
 250 00c0 00100240 		.word	1073876992
 251 00c4 00000000 		.word	MSIRangeTable
 252 00c8 00000000 		.word	SystemCoreClock
 253 00cc 0024F400 		.word	16000000
 254 00d0 00127A00 		.word	8000000
 255 00d4 00000000 		.word	AHBPrescTable
 256              		.cfi_endproc
 257              	.LFE75:
 259              		.global	MSIRangeTable
 260              		.section	.rodata.MSIRangeTable,"a"
 261              		.align	2
 264              	MSIRangeTable:
 265 0000 A0860100 		.word	100000
 266 0004 400D0300 		.word	200000
 267 0008 801A0600 		.word	400000
 268 000c 00350C00 		.word	800000
 269 0010 40420F00 		.word	1000000
 270 0014 80841E00 		.word	2000000
 271 0018 00093D00 		.word	4000000
 272 001c 00127A00 		.word	8000000
 273 0020 0024F400 		.word	16000000
 274 0024 00366E01 		.word	24000000
 275 0028 0048E801 		.word	32000000
 276 002c 006CDC02 		.word	48000000
 277              		.global	APBPrescTable
 278              		.section	.rodata.APBPrescTable,"a"
 279              		.align	2
 282              	APBPrescTable:
 283 0000 00000000 		.ascii	"\000\000\000\000\001\002\003\004"
 283      01020304 
 284              		.global	AHBPrescTable
 285              		.section	.rodata.AHBPrescTable,"a"
 286              		.align	2
 289              	AHBPrescTable:
 290 0000 00000000 		.ascii	"\000\000\000\000\000\000\000\000\001\002\003\004\006"
 290      00000000 
 290      01020304 
 290      06
 291 000d 070809   		.ascii	"\007\010\011"
 292              		.global	SystemCoreClock
 293              		.section	.data.SystemCoreClock,"aw"
 294              		.align	2
 297              	SystemCoreClock:
 298 0000 00093D00 		.word	4000000
 299              		.text
 300              	.Letext0:
 301              		.file 2 "/home/emanuele/st/stm32cubeide_1.15.0/plugins/com.st.stm32cube.ide.mcu.externaltools.gnu-
 302              		.file 3 "/home/emanuele/st/stm32cubeide_1.15.0/plugins/com.st.stm32cube.ide.mcu.externaltools.gnu-
 303              		.file 4 "../Drivers/CMSIS/Device/ST/STM32L4xx/Include/system_stm32l4xx.h"
ARM GAS  Build/system_stm32l4xx.s 			page 12


 304              		.file 5 "../Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l475xx.h"
ARM GAS  Build/system_stm32l4xx.s 			page 13


DEFINED SYMBOLS
                            *ABS*:00000000 system_stm32l4xx.c
Build/system_stm32l4xx.s:19     .text.SystemInit:00000000 $t
Build/system_stm32l4xx.s:25     .text.SystemInit:00000000 SystemInit
Build/system_stm32l4xx.s:38     .text.SystemCoreClockUpdate:00000000 $t
Build/system_stm32l4xx.s:44     .text.SystemCoreClockUpdate:00000000 SystemCoreClockUpdate
Build/system_stm32l4xx.s:83     .text.SystemCoreClockUpdate:0000002a $d
Build/system_stm32l4xx.s:250    .text.SystemCoreClockUpdate:000000c0 $d
Build/system_stm32l4xx.s:264    .rodata.MSIRangeTable:00000000 MSIRangeTable
Build/system_stm32l4xx.s:297    .data.SystemCoreClock:00000000 SystemCoreClock
Build/system_stm32l4xx.s:289    .rodata.AHBPrescTable:00000000 AHBPrescTable
Build/system_stm32l4xx.s:261    .rodata.MSIRangeTable:00000000 $d
Build/system_stm32l4xx.s:282    .rodata.APBPrescTable:00000000 APBPrescTable
Build/system_stm32l4xx.s:279    .rodata.APBPrescTable:00000000 $d
Build/system_stm32l4xx.s:286    .rodata.AHBPrescTable:00000000 $d
Build/system_stm32l4xx.s:294    .data.SystemCoreClock:00000000 $d
Build/system_stm32l4xx.s:97     .text.SystemCoreClockUpdate:00000037 $d
Build/system_stm32l4xx.s:97     .text.SystemCoreClockUpdate:00000038 $t

NO UNDEFINED SYMBOLS
