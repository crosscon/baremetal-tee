ARM GAS  Build/main.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "../Core/Src/main.c"
  18              		.section	.text.MX_GPIO_Init,"ax",%progbits
  19              		.align	1
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  24              	MX_GPIO_Init:
  25              	.LFB93:
   1:../Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:../Core/Src/main.c **** /**
   3:../Core/Src/main.c ****   ******************************************************************************
   4:../Core/Src/main.c ****   * @file           : main.c
   5:../Core/Src/main.c ****   * @brief          : Main program body
   6:../Core/Src/main.c ****   ******************************************************************************
   7:../Core/Src/main.c ****   * @attention
   8:../Core/Src/main.c ****   *
   9:../Core/Src/main.c ****   * Copyright (c) 2024 STMicroelectronics.
  10:../Core/Src/main.c ****   * All rights reserved.
  11:../Core/Src/main.c ****   *
  12:../Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:../Core/Src/main.c ****   * in the root directory of this software component.
  14:../Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:../Core/Src/main.c ****   *
  16:../Core/Src/main.c ****   ******************************************************************************
  17:../Core/Src/main.c ****   */
  18:../Core/Src/main.c **** /* USER CODE END Header */
  19:../Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:../Core/Src/main.c **** #include "main.h"
  21:../Core/Src/main.c **** 
  22:../Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:../Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:../Core/Src/main.c **** #include <stdlib.h>
  25:../Core/Src/main.c **** #include <stdio.h>
  26:../Core/Src/main.c **** #include <string.h>
  27:../Core/Src/main.c **** 
  28:../Core/Src/main.c **** #include "tee_client_api.h"
  29:../Core/Src/main.c **** #include "tx.h"
  30:../Core/Src/main.c **** /* USER CODE END Includes */
  31:../Core/Src/main.c **** 
  32:../Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  33:../Core/Src/main.c **** /* USER CODE BEGIN PTD */
ARM GAS  Build/main.s 			page 2


  34:../Core/Src/main.c **** 
  35:../Core/Src/main.c **** /* USER CODE END PTD */
  36:../Core/Src/main.c **** 
  37:../Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  38:../Core/Src/main.c **** /* USER CODE BEGIN PD */
  39:../Core/Src/main.c **** 
  40:../Core/Src/main.c **** /* USER CODE END PD */
  41:../Core/Src/main.c **** 
  42:../Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  43:../Core/Src/main.c **** /* USER CODE BEGIN PM */
  44:../Core/Src/main.c **** 
  45:../Core/Src/main.c **** /* USER CODE END PM */
  46:../Core/Src/main.c **** 
  47:../Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  48:../Core/Src/main.c **** RNG_HandleTypeDef hrng;
  49:../Core/Src/main.c **** 
  50:../Core/Src/main.c **** UART_HandleTypeDef huart1;
  51:../Core/Src/main.c **** 
  52:../Core/Src/main.c **** 
  53:../Core/Src/main.c **** /* USER CODE BEGIN PV */
  54:../Core/Src/main.c **** 
  55:../Core/Src/main.c **** /* USER CODE END PV */
  56:../Core/Src/main.c **** 
  57:../Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  58:../Core/Src/main.c **** void SystemClock_Config(void);
  59:../Core/Src/main.c **** void PeriphCommonClock_Config(void);
  60:../Core/Src/main.c **** static void MX_GPIO_Init(void);
  61:../Core/Src/main.c **** static void MX_USART1_UART_Init(void);
  62:../Core/Src/main.c **** static void MX_RNG_Init(void);
  63:../Core/Src/main.c **** /* USER CODE BEGIN PFP */
  64:../Core/Src/main.c **** 
  65:../Core/Src/main.c **** /* USER CODE END PFP */
  66:../Core/Src/main.c **** 
  67:../Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  68:../Core/Src/main.c **** /* USER CODE BEGIN 0 */
  69:../Core/Src/main.c **** int __io_putchar(int ch){
  70:../Core/Src/main.c ****     HAL_UART_Transmit(&huart1, (uint8_t *) &ch, 1, HAL_MAX_DELAY);
  71:../Core/Src/main.c ****     return ch;
  72:../Core/Src/main.c **** }
  73:../Core/Src/main.c **** 
  74:../Core/Src/main.c **** void rng_init(void)
  75:../Core/Src/main.c **** {
  76:../Core/Src/main.c **** 	/* Enable RNG clock source */
  77:../Core/Src/main.c **** 	__HAL_RCC_RNG_CLK_ENABLE();
  78:../Core/Src/main.c **** 
  79:../Core/Src/main.c **** 	/* RNG Peripheral enable */
  80:../Core/Src/main.c **** 	RNG->CR |= RNG_CR_RNGEN;
  81:../Core/Src/main.c **** }
  82:../Core/Src/main.c **** 
  83:../Core/Src/main.c **** void rng_deinit(void)
  84:../Core/Src/main.c **** {
  85:../Core/Src/main.c **** 	/* Disable RNG peripheral */
  86:../Core/Src/main.c **** 	RNG->CR &= ~RNG_CR_RNGEN;
  87:../Core/Src/main.c **** 
  88:../Core/Src/main.c **** 	/* Disable RNG clock source */
  89:../Core/Src/main.c **** 	__HAL_RCC_RNG_CLK_DISABLE();
  90:../Core/Src/main.c **** }
ARM GAS  Build/main.s 			page 3


  91:../Core/Src/main.c **** 
  92:../Core/Src/main.c **** uint32_t rng_get(void)
  93:../Core/Src/main.c **** {
  94:../Core/Src/main.c **** 	/* Wait until one RNG number is ready */
  95:../Core/Src/main.c **** 	while (!(RNG->SR & (RNG_SR_DRDY)));
  96:../Core/Src/main.c **** 
  97:../Core/Src/main.c **** 	/* Get a 32-bit Random number */
  98:../Core/Src/main.c **** 	return RNG->DR;
  99:../Core/Src/main.c **** }
 100:../Core/Src/main.c **** 
 101:../Core/Src/main.c **** // Declaration of the prototypes of Bitcoin Wallet functions used by the client
 102:../Core/Src/main.c **** static TEEC_Result ta_bitcoin_cmd_check_masterkey(TEEC_Session sess, uint32_t pin, uint32_t cmd_id,
 103:../Core/Src/main.c **** static TEEC_Result ta_bitcoin_cmd_generate_new_masterkey(TEEC_Session sess, uint32_t pin, uint32_t 
 104:../Core/Src/main.c **** static TEEC_Result ta_bitcoin_cmd_mnemonic_to_masterkey(TEEC_Session sess, uint32_t pin, uint32_t c
 105:../Core/Src/main.c **** static TEEC_Result ta_bitcoin_cmd_erase_masterkey(TEEC_Session sess, uint32_t pin, uint32_t cmd_id,
 106:../Core/Src/main.c **** static TEEC_Result ta_bitcoin_cmd_issue_transactions(TEEC_Session sess, uint32_t pin, uint32_t cmd_
 107:../Core/Src/main.c **** static TEEC_Result ta_bitcoin_cmd_get_bitcoin_address(TEEC_Session sess, uint32_t pin, uint32_t cmd
 108:../Core/Src/main.c **** 
 109:../Core/Src/main.c **** // Custom function to print uint8_t array
 110:../Core/Src/main.c **** static void print_uint8(uint8_t* array, uint32_t array_len){
 111:../Core/Src/main.c **** 	uint32_t i;
 112:../Core/Src/main.c **** 	for(i=0; i<array_len; i++){
 113:../Core/Src/main.c **** 		printf("%x", array[i]);
 114:../Core/Src/main.c **** 	}
 115:../Core/Src/main.c **** 	printf("\n");
 116:../Core/Src/main.c **** }
 117:../Core/Src/main.c **** 
 118:../Core/Src/main.c **** // Number of different commands that the client can send to the Bitcoin Wallet TA
 119:../Core/Src/main.c **** #define COMMAND_IDS_LEN     6
 120:../Core/Src/main.c **** 
 121:../Core/Src/main.c **** // Sequence of commands that the client will send to the Bitcoin Wallet TA
 122:../Core/Src/main.c **** unsigned int command_ids[] = {TA_BITCOIN_WALLET_CMD_2,   //Generate master key
 123:../Core/Src/main.c ****                               TA_BITCOIN_WALLET_CMD_1, // Check master key
 124:../Core/Src/main.c ****                               TA_BITCOIN_WALLET_CMD_3, // Mnemonic to master key
 125:../Core/Src/main.c ****                               TA_BITCOIN_WALLET_CMD_5, // Sign transaction
 126:../Core/Src/main.c ****                               TA_BITCOIN_WALLET_CMD_6, // Get bitcoin address
 127:../Core/Src/main.c ****                               TA_BITCOIN_WALLET_CMD_4}; // Erase master key
 128:../Core/Src/main.c **** 
 129:../Core/Src/main.c **** 
 130:../Core/Src/main.c **** static TEEC_Result ta_bitcoin_cmd_generate_new_masterkey(TEEC_Session sess, uint32_t pin, uint32_t 
 131:../Core/Src/main.c **** 	TEEC_Operation op;
 132:../Core/Src/main.c **** 	TEEC_Result res;
 133:../Core/Src/main.c **** 
 134:../Core/Src/main.c **** 	// Clear the TEEC_Operation struct, same as clearing parameter type
 135:../Core/Src/main.c **** 	memset(&op, 0, sizeof(op));
 136:../Core/Src/main.c **** 
 137:../Core/Src/main.c **** 	printf("Generating new master key...\r\n");
 138:../Core/Src/main.c **** 	// Defining the parameter value sent to TA, the parameter are
 139:../Core/Src/main.c **** 	op.paramTypes = TEEC_PARAM_TYPES(TEEC_VALUE_INOUT, TEEC_MEMREF_TEMP_OUTPUT , TEEC_NONE, TEEC_NONE)
 140:../Core/Src/main.c **** 	op.params[0].value.a = pin;
 141:../Core/Src/main.c **** 	op.params[0].value.b = 0; // 0---unchecked, 1---correct pin, 2---incorrect pin
 142:../Core/Src/main.c **** 	op.params[1].tmpref.buffer = malloc(240);
 143:../Core/Src/main.c **** 	op.params[1].tmpref.size = 240;
 144:../Core/Src/main.c **** 
 145:../Core/Src/main.c **** 	res = TEEC_InvokeCommand(&sess, cmd_id, &op, &err_origin);
 146:../Core/Src/main.c **** 	if (res != TEEC_SUCCESS) {
 147:../Core/Src/main.c **** 		ERR_MSG("TEEC_InvokeCommand failed with code 0x%x origin 0x%x\r\n", res, err_origin);
ARM GAS  Build/main.s 			page 4


 148:../Core/Src/main.c **** 	}
 149:../Core/Src/main.c **** 
 150:../Core/Src/main.c **** 	if (op.params[0].value.b == 2) {
 151:../Core/Src/main.c **** 		ERR_MSG("Incorrect pin\r\n");
 152:../Core/Src/main.c **** 	}
 153:../Core/Src/main.c **** 
 154:../Core/Src/main.c **** 	if (res == TEEC_SUCCESS){
 155:../Core/Src/main.c **** 		printf("\rHere's your wallet mnemonic!\r\n");
 156:../Core/Src/main.c **** 		printf("*%s*\n", (char*)op.params[1].tmpref.buffer);
 157:../Core/Src/main.c **** 		for (uint8_t i = 0; i < strlen(op.params[1].tmpref.buffer); i++)
 158:../Core/Src/main.c **** 		{
 159:../Core/Src/main.c **** 			mnemonic[i] = *((char*) (op.params[1].tmpref.buffer) + i);
 160:../Core/Src/main.c **** 		}
 161:../Core/Src/main.c **** 		printf("\n");
 162:../Core/Src/main.c **** 		memset(op.params[1].tmpref.buffer, 0, op.params[1].tmpref.size);
 163:../Core/Src/main.c **** 	}
 164:../Core/Src/main.c **** 	return TEEC_SUCCESS;
 165:../Core/Src/main.c **** }
 166:../Core/Src/main.c **** 
 167:../Core/Src/main.c **** static TEEC_Result ta_bitcoin_cmd_mnemonic_to_masterkey(TEEC_Session sess, uint32_t pin, uint32_t c
 168:../Core/Src/main.c **** 	TEEC_Operation op;
 169:../Core/Src/main.c **** 	TEEC_Result res;
 170:../Core/Src/main.c **** 
 171:../Core/Src/main.c **** 	// Clear the TEEC_Operation struct, same as clearing parameter type
 172:../Core/Src/main.c **** 	memset(&op, 0, sizeof(op));
 173:../Core/Src/main.c **** 
 174:../Core/Src/main.c **** 	printf("Deriving master key from your mnemonic...\r\n");
 175:../Core/Src/main.c **** 	// Defining the parameter value sent to TA, the parameter are
 176:../Core/Src/main.c **** 	op.paramTypes = TEEC_PARAM_TYPES(TEEC_VALUE_INOUT, TEEC_MEMREF_TEMP_INPUT , TEEC_NONE, TEEC_NONE);
 177:../Core/Src/main.c **** 	op.params[0].value.a = pin;
 178:../Core/Src/main.c **** 	op.params[0].value.b = 0; // 0---unchecked, 1---correct pin, 2---incorrect pin
 179:../Core/Src/main.c **** 	op.params[1].tmpref.buffer = mnemonic;
 180:../Core/Src/main.c **** 	op.params[1].tmpref.size = strlen(mnemonic);
 181:../Core/Src/main.c **** 
 182:../Core/Src/main.c **** 	res = TEEC_InvokeCommand(&sess, cmd_id, &op, &err_origin);
 183:../Core/Src/main.c **** 	if (res != TEEC_SUCCESS) {
 184:../Core/Src/main.c **** 		ERR_MSG("TEEC_InvokeCommand failed with code 0x%x origin 0x%x\r\n", res, err_origin);
 185:../Core/Src/main.c **** 	}
 186:../Core/Src/main.c **** 	if (op.params[0].value.b == 2) {
 187:../Core/Src/main.c **** 		ERR_MSG("Incorrect pin\r\n");
 188:../Core/Src/main.c **** 	}
 189:../Core/Src/main.c **** 	if (res == TEEC_SUCCESS){
 190:../Core/Src/main.c **** 		printf("Success!\r\n");
 191:../Core/Src/main.c **** 	}
 192:../Core/Src/main.c **** 	return TEEC_SUCCESS;
 193:../Core/Src/main.c **** }
 194:../Core/Src/main.c **** 
 195:../Core/Src/main.c **** static TEEC_Result ta_bitcoin_cmd_check_masterkey(TEEC_Session sess, uint32_t pin, uint32_t cmd_id,
 196:../Core/Src/main.c **** 	TEEC_Operation op;
 197:../Core/Src/main.c **** 	TEEC_Result res;
 198:../Core/Src/main.c **** 
 199:../Core/Src/main.c **** 	// Clear the TEEC_Operation struct, same as clearing parameter type
 200:../Core/Src/main.c **** 	memset(&op, 0, sizeof(op));
 201:../Core/Src/main.c **** 
 202:../Core/Src/main.c **** 	printf("\rCheck if there's a existing master key...\r\n");
 203:../Core/Src/main.c **** 	// Defining the parameter value sent to TA, the parameter are
 204:../Core/Src/main.c **** 	op.paramTypes = TEEC_PARAM_TYPES(TEEC_VALUE_INOUT, TEEC_VALUE_OUTPUT , TEEC_NONE, TEEC_NONE);
ARM GAS  Build/main.s 			page 5


 205:../Core/Src/main.c **** 	op.params[0].value.a = pin;
 206:../Core/Src/main.c **** 	op.params[0].value.b = 0; // 0---unchecked, 1---correct pin, 2---incorrect pin
 207:../Core/Src/main.c **** 
 208:../Core/Src/main.c **** 	res = TEEC_InvokeCommand(&sess, cmd_id, &op, &err_origin);
 209:../Core/Src/main.c **** 	if (res != TEEC_SUCCESS) {
 210:../Core/Src/main.c **** 		ERR_MSG("TEEC_InvokeCommand failed with code 0x%x origin 0x%x\r\n", res, err_origin);
 211:../Core/Src/main.c **** 	}
 212:../Core/Src/main.c **** 	if (op.params[0].value.b == 2) {
 213:../Core/Src/main.c **** 		ERR_MSG("Incorrect pin\r\n");
 214:../Core/Src/main.c **** 	}
 215:../Core/Src/main.c **** 
 216:../Core/Src/main.c **** 	if(op.params[1].value.a == 1)
 217:../Core/Src/main.c **** 		printf("Master key exists\r\n");
 218:../Core/Src/main.c **** 	else
 219:../Core/Src/main.c **** 		printf("None master key exits\r\n");
 220:../Core/Src/main.c **** 
 221:../Core/Src/main.c **** 	return TEEC_SUCCESS;
 222:../Core/Src/main.c **** }
 223:../Core/Src/main.c **** 
 224:../Core/Src/main.c **** static TEEC_Result ta_bitcoin_cmd_erase_masterkey(TEEC_Session sess, uint32_t pin, uint32_t cmd_id,
 225:../Core/Src/main.c **** 	TEEC_Operation op;
 226:../Core/Src/main.c **** 	TEEC_Result res;
 227:../Core/Src/main.c **** 
 228:../Core/Src/main.c **** 	// Clear the TEEC_Operation struct, same as clearing parameter type
 229:../Core/Src/main.c **** 	memset(&op, 0, sizeof(op));
 230:../Core/Src/main.c **** 
 231:../Core/Src/main.c **** 	printf("Check if there's a existing master key...\r\n");
 232:../Core/Src/main.c **** 	// Defining the parameter value sent to TA, the parameter are
 233:../Core/Src/main.c **** 	op.paramTypes = TEEC_PARAM_TYPES(TEEC_VALUE_INOUT, TEEC_VALUE_OUTPUT , TEEC_NONE, TEEC_NONE);
 234:../Core/Src/main.c **** 	op.params[0].value.a = pin;
 235:../Core/Src/main.c **** 	op.params[0].value.b = 0; // 0---unchecked, 1---correct pin, 2---incorrect pin
 236:../Core/Src/main.c **** 
 237:../Core/Src/main.c **** 	res = TEEC_InvokeCommand(&sess, cmd_id, &op, &err_origin);
 238:../Core/Src/main.c **** 	if (res != TEEC_SUCCESS) {
 239:../Core/Src/main.c **** 		ERR_MSG("TEEC_InvokeCommand failed with code 0x%x origin 0x%x\r\n", res, err_origin);
 240:../Core/Src/main.c **** 	}
 241:../Core/Src/main.c **** 	if (op.params[0].value.b == 2) {
 242:../Core/Src/main.c **** 		ERR_MSG("Incorrect pin\r\n");
 243:../Core/Src/main.c **** 	}
 244:../Core/Src/main.c **** 
 245:../Core/Src/main.c **** 	if(op.params[1].value.a == 1)
 246:../Core/Src/main.c **** 		printf("Master key exists, erase success\r\n");
 247:../Core/Src/main.c **** 	else
 248:../Core/Src/main.c **** 		printf("None master key exits\r\n");
 249:../Core/Src/main.c **** 
 250:../Core/Src/main.c **** 	return TEEC_SUCCESS;
 251:../Core/Src/main.c **** }
 252:../Core/Src/main.c **** 
 253:../Core/Src/main.c **** static TEEC_Result ta_bitcoin_cmd_issue_transactions(TEEC_Session sess, uint32_t pin, uint32_t cmd_
 254:../Core/Src/main.c **** 
 255:../Core/Src/main.c **** 	TEEC_Operation op;
 256:../Core/Src/main.c **** 	TEEC_Result res;
 257:../Core/Src/main.c **** 
 258:../Core/Src/main.c **** 	/* We hardcode some previous transaction hashses to use for demo purposes */
 259:../Core/Src/main.c **** 	const uint8_t prvh[] = {0xdf,0x0b,0x6a,0xfa,0xf0,0xde,0xcd,0x00,0x27,0x80,0xb2,
 260:../Core/Src/main.c **** 							0x91,0x16,0x3c,0xad,0xdb,0x76,0x57,0x5f,0xf5,0x5f,0x62,
 261:../Core/Src/main.c **** 							0xb1,0x19,0xa2,0x0f,0xda,0x07,0x2f,0x2c,0x47,0xb9};
ARM GAS  Build/main.s 			page 6


 262:../Core/Src/main.c **** 
 263:../Core/Src/main.c **** 	const uint8_t tmpsig[] = {OP_DUP,OP_HASH160,0x46,0x2c,0x22,0x2c,0xba,0xac,0x40,
 264:../Core/Src/main.c **** 							  0x9f,0x77,0x3b,0x4c,0x0e,0xca,0x99,0x19,0x04,0xc2,0xbb,
 265:../Core/Src/main.c **** 							  0x20,0x73,OP_EQUALVERIFY};
 266:../Core/Src/main.c **** 
 267:../Core/Src/main.c **** 	/* Transaction value 0.005555 BTC or 0x15b3 hex */
 268:../Core/Src/main.c **** 	//const uint8_t txval[] = {0x62, 0x64, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00};
 269:../Core/Src/main.c **** 	const uint8_t txval[] = {0xB3, 0x15, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
 270:../Core/Src/main.c **** 	uint8_t *out;
 271:../Core/Src/main.c **** 
 272:../Core/Src/main.c **** 	INTX intx = NULL;
 273:../Core/Src/main.c **** 	OUTTX outtx = NULL;
 274:../Core/Src/main.c **** 	TX tx = NULL;
 275:../Core/Src/main.c **** 	TXBUF buf = NULL;
 276:../Core/Src/main.c **** 
 277:../Core/Src/main.c **** 	intx = new_intx(prvh, tmpsig);
 278:../Core/Src/main.c **** 	outtx = new_outtx(txval, tmpsig);
 279:../Core/Src/main.c **** 	tx = new_tx(intx, outtx);
 280:../Core/Src/main.c **** 	buf = new_txbuf();
 281:../Core/Src/main.c **** 	out = malloc(72);
 282:../Core/Src/main.c **** 
 283:../Core/Src/main.c **** 	//print_tx(tx);
 284:../Core/Src/main.c **** 	serialize_tx(tx, buf);
 285:../Core/Src/main.c **** 	//print_ser_bytes(buf);
 286:../Core/Src/main.c **** 	printf("Sending transaction for signing.\n");
 287:../Core/Src/main.c **** 
 288:../Core/Src/main.c **** 	// Clear the TEEC_Operation struct, same as clearing parameter type
 289:../Core/Src/main.c **** 	memset(&op, 0, sizeof(op));
 290:../Core/Src/main.c **** 
 291:../Core/Src/main.c **** 	printf("Attempt to issue transactions from %d child account...\n", account_id);
 292:../Core/Src/main.c **** 	// Defining the parameter value sent to TA, the parameter are
 293:../Core/Src/main.c **** 	op.paramTypes = TEEC_PARAM_TYPES(TEEC_VALUE_INOUT, TEEC_MEMREF_TEMP_INPUT, TEEC_MEMREF_TEMP_OUTPUT
 294:../Core/Src/main.c **** 	op.params[0].value.a = pin;
 295:../Core/Src/main.c **** 	op.params[0].value.b = 0; // 0---unchecked, 1---correct pin, 2---incorrect pin
 296:../Core/Src/main.c **** 	op.params[1].tmpref.buffer = get_txbuf_data(buf);
 297:../Core/Src/main.c **** 	op.params[1].tmpref.size = get_txbuf_next(buf);
 298:../Core/Src/main.c **** 	op.params[2].tmpref.buffer = out;
 299:../Core/Src/main.c **** 	op.params[2].tmpref.size = 72;
 300:../Core/Src/main.c **** 	op.params[3].value.a = account_id;
 301:../Core/Src/main.c **** 
 302:../Core/Src/main.c **** 	res = TEEC_InvokeCommand(&sess, cmd_id, &op, &err_origin);
 303:../Core/Src/main.c **** 	if (res != TEEC_SUCCESS) {
 304:../Core/Src/main.c **** 		ERR_MSG("TEEC_InvokeCommand failed with code 0x%x origin 0x%x", res, err_origin);
 305:../Core/Src/main.c **** 	}
 306:../Core/Src/main.c **** 	if (op.params[0].value.b == 2) {
 307:../Core/Src/main.c **** 		ERR_MSG("Incorrect pin");
 308:../Core/Src/main.c **** 	}
 309:../Core/Src/main.c **** 
 310:../Core/Src/main.c **** 	free_tx(tx);
 311:../Core/Src/main.c **** 	free_txbuf(buf);
 312:../Core/Src/main.c **** 
 313:../Core/Src/main.c **** 	printf("Retrieved signed transaction\n");
 314:../Core/Src/main.c **** 	for (uint32_t i = 0; i < op.params[2].tmpref.size; i++) {
 315:../Core/Src/main.c **** 		printf("%02x", out[i]);
 316:../Core/Src/main.c **** 	}
 317:../Core/Src/main.c **** 	printf("\n");
 318:../Core/Src/main.c **** 
ARM GAS  Build/main.s 			page 7


 319:../Core/Src/main.c **** 	return res;
 320:../Core/Src/main.c **** }
 321:../Core/Src/main.c **** 
 322:../Core/Src/main.c **** 
 323:../Core/Src/main.c **** static TEEC_Result ta_bitcoin_cmd_get_bitcoin_address(TEEC_Session sess, uint32_t pin, uint32_t cmd
 324:../Core/Src/main.c **** 	TEEC_Operation op;
 325:../Core/Src/main.c **** 	TEEC_Result res;
 326:../Core/Src/main.c **** 
 327:../Core/Src/main.c **** 	// Clear the TEEC_Operation struct, same as clearing parameter type
 328:../Core/Src/main.c **** 	memset(&op, 0, sizeof(op));
 329:../Core/Src/main.c **** 
 330:../Core/Src/main.c **** 	printf("Getting bitcoin address...\n");
 331:../Core/Src/main.c **** 	// Defining the parameter value sent to TA, the parameter are
 332:../Core/Src/main.c **** 	op.paramTypes = TEEC_PARAM_TYPES(TEEC_VALUE_INOUT, TEEC_VALUE_INPUT, TEEC_MEMREF_TEMP_OUTPUT, TEEC
 333:../Core/Src/main.c **** 	op.params[0].value.a = pin;
 334:../Core/Src/main.c **** 	op.params[0].value.b = 0; // 0---unchecked, 1---correct pin, 2---incorrect pin
 335:../Core/Src/main.c **** 	op.params[1].value.a = account_id;
 336:../Core/Src/main.c **** 	op.params[2].tmpref.buffer = malloc(25);
 337:../Core/Src/main.c **** 	op.params[2].tmpref.size = 25;
 338:../Core/Src/main.c **** 
 339:../Core/Src/main.c **** 	res = TEEC_InvokeCommand(&sess, cmd_id, &op, &err_origin);
 340:../Core/Src/main.c **** 	if (res != TEEC_SUCCESS) {
 341:../Core/Src/main.c **** 		ERR_MSG("TEEC_InvokeCommand failed with code 0x%x origin 0x%x", res, err_origin);
 342:../Core/Src/main.c **** 	}
 343:../Core/Src/main.c **** 	if (op.params[0].value.b == 2) {
 344:../Core/Src/main.c **** 		ERR_MSG("Incorrect pin");
 345:../Core/Src/main.c **** 	}
 346:../Core/Src/main.c **** 
 347:../Core/Src/main.c **** 
 348:../Core/Src/main.c **** 	print_uint8(op.params[2].tmpref.buffer,25);
 349:../Core/Src/main.c **** 	return TEEC_SUCCESS;
 350:../Core/Src/main.c **** }
 351:../Core/Src/main.c **** 
 352:../Core/Src/main.c **** 
 353:../Core/Src/main.c **** 
 354:../Core/Src/main.c **** /* USER CODE END 0 */
 355:../Core/Src/main.c **** 
 356:../Core/Src/main.c **** /**
 357:../Core/Src/main.c ****   * @brief  The application entry point.
 358:../Core/Src/main.c ****   * @retval int
 359:../Core/Src/main.c ****   */
 360:../Core/Src/main.c **** int main(void)
 361:../Core/Src/main.c **** {
 362:../Core/Src/main.c **** 
 363:../Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 364:../Core/Src/main.c **** 
 365:../Core/Src/main.c ****   /* USER CODE END 1 */
 366:../Core/Src/main.c **** 
 367:../Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 368:../Core/Src/main.c **** 
 369:../Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 370:../Core/Src/main.c ****   HAL_Init();
 371:../Core/Src/main.c **** 
 372:../Core/Src/main.c ****   /* USER CODE BEGIN Init */
 373:../Core/Src/main.c **** 
 374:../Core/Src/main.c ****   /* USER CODE END Init */
 375:../Core/Src/main.c **** 
ARM GAS  Build/main.s 			page 8


 376:../Core/Src/main.c ****   /* Configure the system clock */
 377:../Core/Src/main.c ****   SystemClock_Config();
 378:../Core/Src/main.c **** 
 379:../Core/Src/main.c ****   /* Configure the peripherals common clocks */
 380:../Core/Src/main.c ****   PeriphCommonClock_Config();
 381:../Core/Src/main.c **** 
 382:../Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 383:../Core/Src/main.c **** 
 384:../Core/Src/main.c ****   /* USER CODE END SysInit */
 385:../Core/Src/main.c **** 
 386:../Core/Src/main.c ****   /* Initialize all configured peripherals */
 387:../Core/Src/main.c ****   MX_GPIO_Init();
 388:../Core/Src/main.c ****   MX_USART1_UART_Init();
 389:../Core/Src/main.c ****   MX_RNG_Init();
 390:../Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 391:../Core/Src/main.c **** 
 392:../Core/Src/main.c ****   // Set the random number generator
 393:../Core/Src/main.c ****   rng_init();
 394:../Core/Src/main.c **** 
 395:../Core/Src/main.c ****   // Variables used by the TEE Client API
 396:../Core/Src/main.c ****   TEEC_Result res;
 397:../Core/Src/main.c ****   TEEC_Context ctx;
 398:../Core/Src/main.c ****   TEEC_Session sess;
 399:../Core/Src/main.c ****   TEEC_UUID uuid = TA_BITCOIN_WALLET_UUID;
 400:../Core/Src/main.c **** 
 401:../Core/Src/main.c ****   uint32_t err_origin;
 402:../Core/Src/main.c ****   //uint32_t cmd_id;
 403:../Core/Src/main.c ****   uint32_t pin;
 404:../Core/Src/main.c ****   uint32_t account_id = 0;
 405:../Core/Src/main.c ****   char mnemonic[MNEMONIC_LENGTH] = "Hello world from Trento!";
 406:../Core/Src/main.c **** 
 407:../Core/Src/main.c ****   // NOTE: parameters are hardcoded as it is a demo and input from the user in the Baremetal TEE is
 408:../Core/Src/main.c ****   
 409:../Core/Src/main.c ****   // Parameters input and validation should be done in a real-world application
 410:../Core/Src/main.c ****   // other param validation
 411:../Core/Src/main.c ****   /*if(check_params(argc, argv) == -1){
 412:../Core/Src/main.c **** 	  help();
 413:../Core/Src/main.c **** 	  return -1;
 414:../Core/Src/main.c ****   }
 415:../Core/Src/main.c **** 
 416:../Core/Src/main.c ****   // command validation
 417:../Core/Src/main.c ****   cmd_id = argv[1][0]-'0';
 418:../Core/Src/main.c **** 
 419:../Core/Src/main.c ****   // pin validation
 420:../Core/Src/main.c ****   if(strlen(argv[2])!=4){
 421:../Core/Src/main.c **** 	  printf("bitcoin_wallet: Incorrect pin.\n");
 422:../Core/Src/main.c **** 	  return -1;
 423:../Core/Src/main.c ****   }
 424:../Core/Src/main.c **** 
 425:../Core/Src/main.c ****   // command validation
 426:../Core/Src/main.c ****   cmd_id = argv[1][0]-'0';
 427:../Core/Src/main.c **** 
 428:../Core/Src/main.c ****   // pin validation
 429:../Core/Src/main.c ****   if(strlen(argv[2])!=4){
 430:../Core/Src/main.c **** 	  printf("bitcoin_wallet: Incorrect pin.\n");
 431:../Core/Src/main.c **** 	  return -1;
 432:../Core/Src/main.c ****   }
ARM GAS  Build/main.s 			page 9


 433:../Core/Src/main.c ****   // mnemonic validation
 434:../Core/Src/main.c ****   if(cmd_id==3){
 435:../Core/Src/main.c **** 	  char* temp = mnemonic;
 436:../Core/Src/main.c **** 	  const char space = ' ';
 437:../Core/Src/main.c **** 	  int i;
 438:../Core/Src/main.c **** 	  for(i=4;i<argc;i++){
 439:../Core/Src/main.c **** 		  strncpy(temp, argv[i], strlen(argv[i]));
 440:../Core/Src/main.c **** 		  temp += strlen(argv[i]);
 441:../Core/Src/main.c **** 		  if(i!=(argc-1)){
 442:../Core/Src/main.c **** 			  strncpy(temp, &space, 1);
 443:../Core/Src/main.c **** 			  temp += 1;
 444:../Core/Src/main.c **** 		  }
 445:../Core/Src/main.c **** 	  }
 446:../Core/Src/main.c ****   }
 447:../Core/Src/main.c **** 
 448:../Core/Src/main.c ****   if(cmd_id==5 || cmd_id==6){
 449:../Core/Src/main.c **** 	  account_id = argv[4][0]-'0';
 450:../Core/Src/main.c ****   }
 451:../Core/Src/main.c **** 
 452:../Core/Src/main.c ****   // convert string pin to integer
 453:../Core/Src/main.c ****   pin = (argv[2][0]-'0')*1000 + (argv[2][1]-'0')*100 + (argv[2][2]-'0')*10 +(argv[2][3]-'0'); */
 454:../Core/Src/main.c **** 
 455:../Core/Src/main.c ****   pin = 1234;
 456:../Core/Src/main.c **** 
 457:../Core/Src/main.c ****   // Initiliaze context
 458:../Core/Src/main.c ****   res = TEEC_InitializeContext(NULL, &ctx);
 459:../Core/Src/main.c ****   if (res != TEEC_SUCCESS) {
 460:../Core/Src/main.c **** 	  ERR_MSG("TEEC_InitializeContext failed with code 0x%x\r\n", res);
 461:../Core/Src/main.c ****   	goto error;
 462:../Core/Src/main.c ****   }
 463:../Core/Src/main.c **** 
 464:../Core/Src/main.c ****   // Open session with TA
 465:../Core/Src/main.c ****   res = TEEC_OpenSession(&ctx, &sess, &uuid, TEEC_LOGIN_PUBLIC, NULL, NULL, &err_origin);
 466:../Core/Src/main.c ****   if (res != TEEC_SUCCESS) {
 467:../Core/Src/main.c **** 	  ERR_MSG("TEEC_Opensession failed with code 0x%x origin 0x%x\r\n", res, err_origin);
 468:../Core/Src/main.c **** 	  goto error;
 469:../Core/Src/main.c ****   }
 470:../Core/Src/main.c **** 
 471:../Core/Src/main.c ****   // Execute the sequence of commands that are invoking the TA functions
 472:../Core/Src/main.c ****   for(int i=0; i<COMMAND_IDS_LEN; i++)
 473:../Core/Src/main.c ****   {
 474:../Core/Src/main.c **** 	  int command = command_ids[i];
 475:../Core/Src/main.c ****     switch(command){
 476:../Core/Src/main.c ****       case TA_BITCOIN_WALLET_CMD_1: // Check master key
 477:../Core/Src/main.c ****         ta_bitcoin_cmd_check_masterkey(sess, pin, 1, err_origin);
 478:../Core/Src/main.c ****         break;
 479:../Core/Src/main.c ****       case TA_BITCOIN_WALLET_CMD_2: // Generate new master key
 480:../Core/Src/main.c ****         ta_bitcoin_cmd_generate_new_masterkey(sess, pin, 2, err_origin, mnemonic);
 481:../Core/Src/main.c ****         break;
 482:../Core/Src/main.c ****       case TA_BITCOIN_WALLET_CMD_3: // Mnemonic to master key
 483:../Core/Src/main.c ****         ta_bitcoin_cmd_mnemonic_to_masterkey(sess, pin, 3, err_origin, mnemonic);
 484:../Core/Src/main.c ****         break;
 485:../Core/Src/main.c ****       case TA_BITCOIN_WALLET_CMD_4: // Erase master key
 486:../Core/Src/main.c ****         ta_bitcoin_cmd_erase_masterkey(sess, pin, 4, err_origin);
 487:../Core/Src/main.c ****         break;
 488:../Core/Src/main.c ****       case TA_BITCOIN_WALLET_CMD_5: // Issue transactions
 489:../Core/Src/main.c ****         ta_bitcoin_cmd_issue_transactions(sess, pin, 5, err_origin, account_id);
ARM GAS  Build/main.s 			page 10


 490:../Core/Src/main.c ****         break;
 491:../Core/Src/main.c ****       case TA_BITCOIN_WALLET_CMD_6: // Get bitcoin address
 492:../Core/Src/main.c ****     	  ta_bitcoin_cmd_get_bitcoin_address(sess,pin, 6, err_origin, account_id);
 493:../Core/Src/main.c ****         break;
 494:../Core/Src/main.c ****       default:
 495:../Core/Src/main.c ****         goto error;
 496:../Core/Src/main.c ****     }
 497:../Core/Src/main.c ****   }
 498:../Core/Src/main.c **** 
 499:../Core/Src/main.c ****   // Close session
 500:../Core/Src/main.c ****   TEEC_CloseSession(&sess);
 501:../Core/Src/main.c **** 
 502:../Core/Src/main.c ****   // Finalize context
 503:../Core/Src/main.c ****   TEEC_FinalizeContext(&ctx);
 504:../Core/Src/main.c **** 
 505:../Core/Src/main.c ****   // Deinit RNG
 506:../Core/Src/main.c ****   rng_deinit();
 507:../Core/Src/main.c **** 
 508:../Core/Src/main.c ****   goto exit;
 509:../Core/Src/main.c **** 
 510:../Core/Src/main.c ****   /* USER CODE END 2 */
 511:../Core/Src/main.c **** 
 512:../Core/Src/main.c ****   /* Infinite loop */
 513:../Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 514:../Core/Src/main.c **** error:
 515:../Core/Src/main.c ****   while (1)
 516:../Core/Src/main.c ****   {
 517:../Core/Src/main.c ****     /* USER CODE END WHILE */
 518:../Core/Src/main.c **** 	 ERR_MSG("Error during the execution of Bitcoin Wallet client\r\n");
 519:../Core/Src/main.c **** 	 HAL_GPIO_TogglePin(LED3_WIFI__LED4_BLE_GPIO_Port, LED3_WIFI__LED4_BLE_Pin);
 520:../Core/Src/main.c **** 	 HAL_Delay(1000);
 521:../Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 522:../Core/Src/main.c ****   }
 523:../Core/Src/main.c **** 
 524:../Core/Src/main.c **** exit:
 525:../Core/Src/main.c **** 	HAL_GPIO_TogglePin(LED2_GPIO_Port, LED2_Pin);
 526:../Core/Src/main.c ****   /* USER CODE END 3 */
 527:../Core/Src/main.c **** }
 528:../Core/Src/main.c **** 
 529:../Core/Src/main.c **** /**
 530:../Core/Src/main.c ****   * @brief System Clock Configuration
 531:../Core/Src/main.c ****   * @retval None
 532:../Core/Src/main.c ****   */
 533:../Core/Src/main.c **** void SystemClock_Config(void)
 534:../Core/Src/main.c **** {
 535:../Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 536:../Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 537:../Core/Src/main.c **** 
 538:../Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 539:../Core/Src/main.c ****   */
 540:../Core/Src/main.c ****   if (HAL_PWREx_ControlVoltageScaling(PWR_REGULATOR_VOLTAGE_SCALE1) != HAL_OK)
 541:../Core/Src/main.c ****   {
 542:../Core/Src/main.c ****     Error_Handler();
 543:../Core/Src/main.c ****   }
 544:../Core/Src/main.c **** 
 545:../Core/Src/main.c ****   /** Configure LSE Drive Capability
 546:../Core/Src/main.c ****   */
ARM GAS  Build/main.s 			page 11


 547:../Core/Src/main.c ****   HAL_PWR_EnableBkUpAccess();
 548:../Core/Src/main.c ****   __HAL_RCC_LSEDRIVE_CONFIG(RCC_LSEDRIVE_LOW);
 549:../Core/Src/main.c **** 
 550:../Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 551:../Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 552:../Core/Src/main.c ****   */
 553:../Core/Src/main.c **** 
 554:../Core/Src/main.c ****   /* MSI is enabled after System reset, activate PLL with MSI as source */
 555:../Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_MSI;
 556:../Core/Src/main.c ****   RCC_OscInitStruct.MSIState = RCC_MSI_ON;
 557:../Core/Src/main.c ****   RCC_OscInitStruct.MSIClockRange = RCC_MSIRANGE_6;
 558:../Core/Src/main.c ****   RCC_OscInitStruct.MSICalibrationValue = RCC_MSICALIBRATION_DEFAULT;
 559:../Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 560:../Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_MSI;
 561:../Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 1;
 562:../Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 40;
 563:../Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 564:../Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = 7;
 565:../Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 566:../Core/Src/main.c ****   if(HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 567:../Core/Src/main.c ****   {
 568:../Core/Src/main.c **** 	  /* Initialization Error */
 569:../Core/Src/main.c **** 	  Error_Handler();
 570:../Core/Src/main.c ****   }
 571:../Core/Src/main.c **** 
 572:../Core/Src/main.c ****   /* Select PLL as system clock source and configure the HCLK, PCLK1 and PCLK2 clocks dividers */
 573:../Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = (RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | 
 574:../Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 575:../Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 576:../Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 577:../Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 578:../Core/Src/main.c ****   if(HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_4) != HAL_OK)
 579:../Core/Src/main.c ****   {
 580:../Core/Src/main.c **** 	  /* Initialization Error */
 581:../Core/Src/main.c **** 	  Error_Handler();
 582:../Core/Src/main.c ****   }
 583:../Core/Src/main.c **** 
 584:../Core/Src/main.c ****   /** Enable MSI Auto calibration
 585:../Core/Src/main.c ****   */
 586:../Core/Src/main.c ****   HAL_RCCEx_EnableMSIPLLMode();
 587:../Core/Src/main.c **** }
 588:../Core/Src/main.c **** 
 589:../Core/Src/main.c **** /**
 590:../Core/Src/main.c ****   * @brief Peripherals Common Clock Configuration
 591:../Core/Src/main.c ****   * @retval None
 592:../Core/Src/main.c ****   */
 593:../Core/Src/main.c **** void PeriphCommonClock_Config(void)
 594:../Core/Src/main.c **** {
 595:../Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 596:../Core/Src/main.c **** 
 597:../Core/Src/main.c ****   /** Initializes the peripherals clock
 598:../Core/Src/main.c ****   */
 599:../Core/Src/main.c ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USB|RCC_PERIPHCLK_RNG;
 600:../Core/Src/main.c ****   PeriphClkInit.UsbClockSelection = RCC_USBCLKSOURCE_PLLSAI1;
 601:../Core/Src/main.c ****   PeriphClkInit.RngClockSelection = RCC_RNGCLKSOURCE_PLLSAI1;
 602:../Core/Src/main.c ****   PeriphClkInit.PLLSAI1.PLLSAI1Source = RCC_PLLSOURCE_MSI;
 603:../Core/Src/main.c ****   PeriphClkInit.PLLSAI1.PLLSAI1M = 1;
ARM GAS  Build/main.s 			page 12


 604:../Core/Src/main.c ****   PeriphClkInit.PLLSAI1.PLLSAI1N = 24;
 605:../Core/Src/main.c ****   PeriphClkInit.PLLSAI1.PLLSAI1P = RCC_PLLP_DIV7;
 606:../Core/Src/main.c ****   PeriphClkInit.PLLSAI1.PLLSAI1Q = RCC_PLLQ_DIV2;
 607:../Core/Src/main.c ****   PeriphClkInit.PLLSAI1.PLLSAI1R = RCC_PLLR_DIV2;
 608:../Core/Src/main.c ****   PeriphClkInit.PLLSAI1.PLLSAI1ClockOut = RCC_PLLSAI1_48M2CLK;
 609:../Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 610:../Core/Src/main.c ****   {
 611:../Core/Src/main.c ****     Error_Handler();
 612:../Core/Src/main.c ****   }
 613:../Core/Src/main.c **** }
 614:../Core/Src/main.c **** 
 615:../Core/Src/main.c **** 
 616:../Core/Src/main.c **** /**
 617:../Core/Src/main.c ****   * @brief RNG Initialization Function
 618:../Core/Src/main.c ****   * @param None
 619:../Core/Src/main.c ****   * @retval None
 620:../Core/Src/main.c ****   */
 621:../Core/Src/main.c **** static void MX_RNG_Init(void)
 622:../Core/Src/main.c **** {
 623:../Core/Src/main.c **** 
 624:../Core/Src/main.c ****   /* USER CODE BEGIN RNG_Init 0 */
 625:../Core/Src/main.c **** 
 626:../Core/Src/main.c ****   /* USER CODE END RNG_Init 0 */
 627:../Core/Src/main.c **** 
 628:../Core/Src/main.c ****   /* USER CODE BEGIN RNG_Init 1 */
 629:../Core/Src/main.c **** 
 630:../Core/Src/main.c ****   /* USER CODE END RNG_Init 1 */
 631:../Core/Src/main.c ****   hrng.Instance = RNG;
 632:../Core/Src/main.c ****   if (HAL_RNG_Init(&hrng) != HAL_OK)
 633:../Core/Src/main.c ****   {
 634:../Core/Src/main.c ****     Error_Handler();
 635:../Core/Src/main.c ****   }
 636:../Core/Src/main.c ****   /* USER CODE BEGIN RNG_Init 2 */
 637:../Core/Src/main.c **** 
 638:../Core/Src/main.c ****   /* USER CODE END RNG_Init 2 */
 639:../Core/Src/main.c **** 
 640:../Core/Src/main.c **** }
 641:../Core/Src/main.c **** 
 642:../Core/Src/main.c **** /**
 643:../Core/Src/main.c ****   * @brief USART1 Initialization Function
 644:../Core/Src/main.c ****   * @param None
 645:../Core/Src/main.c ****   * @retval None
 646:../Core/Src/main.c ****   */
 647:../Core/Src/main.c **** static void MX_USART1_UART_Init(void)
 648:../Core/Src/main.c **** {
 649:../Core/Src/main.c **** 
 650:../Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 0 */
 651:../Core/Src/main.c **** 
 652:../Core/Src/main.c ****   /* USER CODE END USART1_Init 0 */
 653:../Core/Src/main.c **** 
 654:../Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 1 */
 655:../Core/Src/main.c **** 
 656:../Core/Src/main.c ****   /* USER CODE END USART1_Init 1 */
 657:../Core/Src/main.c ****   huart1.Instance = USART1;
 658:../Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 659:../Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 660:../Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
ARM GAS  Build/main.s 			page 13


 661:../Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 662:../Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 663:../Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 664:../Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 665:../Core/Src/main.c ****   huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 666:../Core/Src/main.c ****   huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 667:../Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 668:../Core/Src/main.c ****   {
 669:../Core/Src/main.c ****     Error_Handler();
 670:../Core/Src/main.c ****   }
 671:../Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 2 */
 672:../Core/Src/main.c **** 
 673:../Core/Src/main.c ****   /* USER CODE END USART1_Init 2 */
 674:../Core/Src/main.c **** 
 675:../Core/Src/main.c **** }
 676:../Core/Src/main.c **** 
 677:../Core/Src/main.c **** /**
 678:../Core/Src/main.c ****   * @brief GPIO Initialization Function
 679:../Core/Src/main.c ****   * @param None
 680:../Core/Src/main.c ****   * @retval None
 681:../Core/Src/main.c ****   */
 682:../Core/Src/main.c **** static void MX_GPIO_Init(void)
 683:../Core/Src/main.c **** {
  26              		.loc 1 683 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 40
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 36
  33              		.cfi_offset 4, -36
  34              		.cfi_offset 5, -32
  35              		.cfi_offset 6, -28
  36              		.cfi_offset 7, -24
  37              		.cfi_offset 8, -20
  38              		.cfi_offset 9, -16
  39              		.cfi_offset 10, -12
  40              		.cfi_offset 11, -8
  41              		.cfi_offset 14, -4
  42 0004 8BB0     		sub	sp, sp, #44
  43              	.LCFI1:
  44              		.cfi_def_cfa_offset 80
 684:../Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  45              		.loc 1 684 3 view .LVU1
  46              		.loc 1 684 20 is_stmt 0 view .LVU2
  47 0006 0024     		movs	r4, #0
  48 0008 0594     		str	r4, [sp, #20]
  49 000a 0694     		str	r4, [sp, #24]
  50 000c 0794     		str	r4, [sp, #28]
  51 000e 0894     		str	r4, [sp, #32]
  52 0010 0994     		str	r4, [sp, #36]
 685:../Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 686:../Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_1 */
 687:../Core/Src/main.c **** 
 688:../Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 689:../Core/Src/main.c ****   __HAL_RCC_GPIOE_CLK_ENABLE();
  53              		.loc 1 689 3 is_stmt 1 view .LVU3
ARM GAS  Build/main.s 			page 14


  54              	.LBB4:
  55              		.loc 1 689 3 view .LVU4
  56              		.loc 1 689 3 view .LVU5
  57 0012 A24B     		ldr	r3, .L3
  58 0014 DA6C     		ldr	r2, [r3, #76]
  59 0016 42F01002 		orr	r2, r2, #16
  60 001a DA64     		str	r2, [r3, #76]
  61              		.loc 1 689 3 view .LVU6
  62 001c DA6C     		ldr	r2, [r3, #76]
  63 001e 02F01002 		and	r2, r2, #16
  64 0022 0092     		str	r2, [sp]
  65              		.loc 1 689 3 view .LVU7
  66 0024 009A     		ldr	r2, [sp]
  67              	.LBE4:
  68              		.loc 1 689 3 view .LVU8
 690:../Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  69              		.loc 1 690 3 view .LVU9
  70              	.LBB5:
  71              		.loc 1 690 3 view .LVU10
  72              		.loc 1 690 3 view .LVU11
  73 0026 DA6C     		ldr	r2, [r3, #76]
  74 0028 42F00402 		orr	r2, r2, #4
  75 002c DA64     		str	r2, [r3, #76]
  76              		.loc 1 690 3 view .LVU12
  77 002e DA6C     		ldr	r2, [r3, #76]
  78 0030 02F00402 		and	r2, r2, #4
  79 0034 0192     		str	r2, [sp, #4]
  80              		.loc 1 690 3 view .LVU13
  81 0036 019A     		ldr	r2, [sp, #4]
  82              	.LBE5:
  83              		.loc 1 690 3 view .LVU14
 691:../Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  84              		.loc 1 691 3 view .LVU15
  85              	.LBB6:
  86              		.loc 1 691 3 view .LVU16
  87              		.loc 1 691 3 view .LVU17
  88 0038 DA6C     		ldr	r2, [r3, #76]
  89 003a 42F00102 		orr	r2, r2, #1
  90 003e DA64     		str	r2, [r3, #76]
  91              		.loc 1 691 3 view .LVU18
  92 0040 DA6C     		ldr	r2, [r3, #76]
  93 0042 02F00102 		and	r2, r2, #1
  94 0046 0292     		str	r2, [sp, #8]
  95              		.loc 1 691 3 view .LVU19
  96 0048 029A     		ldr	r2, [sp, #8]
  97              	.LBE6:
  98              		.loc 1 691 3 view .LVU20
 692:../Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  99              		.loc 1 692 3 view .LVU21
 100              	.LBB7:
 101              		.loc 1 692 3 view .LVU22
 102              		.loc 1 692 3 view .LVU23
 103 004a DA6C     		ldr	r2, [r3, #76]
 104 004c 42F00202 		orr	r2, r2, #2
 105 0050 DA64     		str	r2, [r3, #76]
 106              		.loc 1 692 3 view .LVU24
 107 0052 DA6C     		ldr	r2, [r3, #76]
ARM GAS  Build/main.s 			page 15


 108 0054 02F00202 		and	r2, r2, #2
 109 0058 0392     		str	r2, [sp, #12]
 110              		.loc 1 692 3 view .LVU25
 111 005a 039A     		ldr	r2, [sp, #12]
 112              	.LBE7:
 113              		.loc 1 692 3 view .LVU26
 693:../Core/Src/main.c ****   __HAL_RCC_GPIOD_CLK_ENABLE();
 114              		.loc 1 693 3 view .LVU27
 115              	.LBB8:
 116              		.loc 1 693 3 view .LVU28
 117              		.loc 1 693 3 view .LVU29
 118 005c DA6C     		ldr	r2, [r3, #76]
 119 005e 42F00802 		orr	r2, r2, #8
 120 0062 DA64     		str	r2, [r3, #76]
 121              		.loc 1 693 3 view .LVU30
 122 0064 DB6C     		ldr	r3, [r3, #76]
 123 0066 03F00803 		and	r3, r3, #8
 124 006a 0493     		str	r3, [sp, #16]
 125              		.loc 1 693 3 view .LVU31
 126 006c 049B     		ldr	r3, [sp, #16]
 127              	.LBE8:
 128              		.loc 1 693 3 view .LVU32
 694:../Core/Src/main.c **** 
 695:../Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 696:../Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOE, M24SR64_Y_RF_DISABLE_Pin|M24SR64_Y_GPO_Pin|ISM43362_RST_Pin, GPIO_PIN_RE
 129              		.loc 1 696 3 view .LVU33
 130 006e 8C4D     		ldr	r5, .L3+4
 131 0070 2246     		mov	r2, r4
 132 0072 4FF48A71 		mov	r1, #276
 133 0076 2846     		mov	r0, r5
 134 0078 FFF7FEFF 		bl	HAL_GPIO_WritePin
 135              	.LVL0:
 697:../Core/Src/main.c **** 
 698:../Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 699:../Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, ARD_D10_Pin|SPBTLE_RF_RST_Pin|ARD_D9_Pin, GPIO_PIN_RESET);
 136              		.loc 1 699 3 view .LVU34
 137 007c 2246     		mov	r2, r4
 138 007e 48F20411 		movw	r1, #33028
 139 0082 4FF09040 		mov	r0, #1207959552
 140 0086 FFF7FEFF 		bl	HAL_GPIO_WritePin
 141              	.LVL1:
 700:../Core/Src/main.c **** 
 701:../Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 702:../Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, ARD_D8_Pin|ISM43362_BOOT0_Pin|ISM43362_WAKEUP_Pin|LED2_Pin
 142              		.loc 1 702 3 view .LVU35
 143 008a 864F     		ldr	r7, .L3+8
 144 008c 2246     		mov	r2, r4
 145 008e 4FF21401 		movw	r1, #61460
 146 0092 3846     		mov	r0, r7
 147 0094 FFF7FEFF 		bl	HAL_GPIO_WritePin
 148              	.LVL2:
 703:../Core/Src/main.c ****                           |SPSGRF_915_SDN_Pin|ARD_D5_Pin, GPIO_PIN_RESET);
 704:../Core/Src/main.c **** 
 705:../Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 706:../Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOD, USB_OTG_FS_PWR_EN_Pin|PMOD_RESET_Pin|STSAFE_A100_RESET_Pin, GPIO_PIN_RES
 149              		.loc 1 706 3 view .LVU36
 150 0098 DFF80C92 		ldr	r9, .L3+12
ARM GAS  Build/main.s 			page 16


 151 009c 2246     		mov	r2, r4
 152 009e 41F28101 		movw	r1, #4225
 153 00a2 4846     		mov	r0, r9
 154 00a4 FFF7FEFF 		bl	HAL_GPIO_WritePin
 155              	.LVL3:
 707:../Core/Src/main.c **** 
 708:../Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 709:../Core/Src/main.c ****   HAL_GPIO_WritePin(SPBTLE_RF_SPI3_CSN_GPIO_Port, SPBTLE_RF_SPI3_CSN_Pin, GPIO_PIN_SET);
 156              		.loc 1 709 3 view .LVU37
 157 00a8 0122     		movs	r2, #1
 158 00aa 4FF40051 		mov	r1, #8192
 159 00ae 4846     		mov	r0, r9
 160 00b0 FFF7FEFF 		bl	HAL_GPIO_WritePin
 161              	.LVL4:
 710:../Core/Src/main.c **** 
 711:../Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 712:../Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOC, VL53L0X_XSHUT_Pin|LED3_WIFI__LED4_BLE_Pin, GPIO_PIN_RESET);
 162              		.loc 1 712 3 view .LVU38
 163 00b4 DFF8F4A1 		ldr	r10, .L3+16
 164 00b8 2246     		mov	r2, r4
 165 00ba 4FF41071 		mov	r1, #576
 166 00be 5046     		mov	r0, r10
 167 00c0 FFF7FEFF 		bl	HAL_GPIO_WritePin
 168              	.LVL5:
 713:../Core/Src/main.c **** 
 714:../Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 715:../Core/Src/main.c ****   HAL_GPIO_WritePin(SPSGRF_915_SPI3_CSN_GPIO_Port, SPSGRF_915_SPI3_CSN_Pin, GPIO_PIN_SET);
 169              		.loc 1 715 3 view .LVU39
 170 00c4 0122     		movs	r2, #1
 171 00c6 2021     		movs	r1, #32
 172 00c8 3846     		mov	r0, r7
 173 00ca FFF7FEFF 		bl	HAL_GPIO_WritePin
 174              	.LVL6:
 716:../Core/Src/main.c **** 
 717:../Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 718:../Core/Src/main.c ****   HAL_GPIO_WritePin(ISM43362_SPI3_CSN_GPIO_Port, ISM43362_SPI3_CSN_Pin, GPIO_PIN_SET);
 175              		.loc 1 718 3 view .LVU40
 176 00ce 0122     		movs	r2, #1
 177 00d0 1146     		mov	r1, r2
 178 00d2 2846     		mov	r0, r5
 179 00d4 FFF7FEFF 		bl	HAL_GPIO_WritePin
 180              	.LVL7:
 719:../Core/Src/main.c **** 
 720:../Core/Src/main.c ****   /*Configure GPIO pins : M24SR64_Y_RF_DISABLE_Pin M24SR64_Y_GPO_Pin ISM43362_RST_Pin ISM43362_SPI3
 721:../Core/Src/main.c ****   GPIO_InitStruct.Pin = M24SR64_Y_RF_DISABLE_Pin|M24SR64_Y_GPO_Pin|ISM43362_RST_Pin|ISM43362_SPI3_C
 181              		.loc 1 721 3 view .LVU41
 182              		.loc 1 721 23 is_stmt 0 view .LVU42
 183 00d8 40F21513 		movw	r3, #277
 184 00dc 0593     		str	r3, [sp, #20]
 722:../Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 185              		.loc 1 722 3 is_stmt 1 view .LVU43
 186              		.loc 1 722 24 is_stmt 0 view .LVU44
 187 00de 0126     		movs	r6, #1
 188 00e0 0696     		str	r6, [sp, #24]
 723:../Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 189              		.loc 1 723 3 is_stmt 1 view .LVU45
 190              		.loc 1 723 24 is_stmt 0 view .LVU46
ARM GAS  Build/main.s 			page 17


 191 00e2 0794     		str	r4, [sp, #28]
 724:../Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 192              		.loc 1 724 3 is_stmt 1 view .LVU47
 193              		.loc 1 724 25 is_stmt 0 view .LVU48
 194 00e4 0894     		str	r4, [sp, #32]
 725:../Core/Src/main.c ****   HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 195              		.loc 1 725 3 is_stmt 1 view .LVU49
 196 00e6 05A9     		add	r1, sp, #20
 197 00e8 2846     		mov	r0, r5
 198 00ea FFF7FEFF 		bl	HAL_GPIO_Init
 199              	.LVL8:
 726:../Core/Src/main.c **** 
 727:../Core/Src/main.c ****   /*Configure GPIO pins : USB_OTG_FS_OVRCR_EXTI3_Pin SPSGRF_915_GPIO3_EXTI5_Pin SPBTLE_RF_IRQ_EXTI6
 728:../Core/Src/main.c ****   GPIO_InitStruct.Pin = USB_OTG_FS_OVRCR_EXTI3_Pin|SPSGRF_915_GPIO3_EXTI5_Pin|SPBTLE_RF_IRQ_EXTI6_P
 200              		.loc 1 728 3 view .LVU50
 201              		.loc 1 728 23 is_stmt 0 view .LVU51
 202 00ee 6A23     		movs	r3, #106
 203 00f0 0593     		str	r3, [sp, #20]
 729:../Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 204              		.loc 1 729 3 is_stmt 1 view .LVU52
 205              		.loc 1 729 24 is_stmt 0 view .LVU53
 206 00f2 4FF4881B 		mov	fp, #1114112
 207 00f6 CDF818B0 		str	fp, [sp, #24]
 730:../Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 208              		.loc 1 730 3 is_stmt 1 view .LVU54
 209              		.loc 1 730 24 is_stmt 0 view .LVU55
 210 00fa 0794     		str	r4, [sp, #28]
 731:../Core/Src/main.c ****   HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 211              		.loc 1 731 3 is_stmt 1 view .LVU56
 212 00fc 05A9     		add	r1, sp, #20
 213 00fe 2846     		mov	r0, r5
 214 0100 FFF7FEFF 		bl	HAL_GPIO_Init
 215              	.LVL9:
 732:../Core/Src/main.c **** 
 733:../Core/Src/main.c ****   /*Configure GPIO pin : BUTTON_EXTI13_Pin */
 734:../Core/Src/main.c ****   GPIO_InitStruct.Pin = BUTTON_EXTI13_Pin;
 216              		.loc 1 734 3 view .LVU57
 217              		.loc 1 734 23 is_stmt 0 view .LVU58
 218 0104 4FF40053 		mov	r3, #8192
 219 0108 0593     		str	r3, [sp, #20]
 735:../Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 220              		.loc 1 735 3 is_stmt 1 view .LVU59
 221              		.loc 1 735 24 is_stmt 0 view .LVU60
 222 010a 4FF40413 		mov	r3, #2162688
 223 010e 0693     		str	r3, [sp, #24]
 736:../Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 224              		.loc 1 736 3 is_stmt 1 view .LVU61
 225              		.loc 1 736 24 is_stmt 0 view .LVU62
 226 0110 0794     		str	r4, [sp, #28]
 737:../Core/Src/main.c ****   HAL_GPIO_Init(BUTTON_EXTI13_GPIO_Port, &GPIO_InitStruct);
 227              		.loc 1 737 3 is_stmt 1 view .LVU63
 228 0112 05A9     		add	r1, sp, #20
 229 0114 5046     		mov	r0, r10
 230 0116 FFF7FEFF 		bl	HAL_GPIO_Init
 231              	.LVL10:
 738:../Core/Src/main.c **** 
 739:../Core/Src/main.c ****   /*Configure GPIO pins : ARD_A5_Pin ARD_A4_Pin ARD_A3_Pin ARD_A2_Pin
ARM GAS  Build/main.s 			page 18


 740:../Core/Src/main.c ****                            ARD_A1_Pin ARD_A0_Pin */
 741:../Core/Src/main.c ****   GPIO_InitStruct.Pin = ARD_A5_Pin|ARD_A4_Pin|ARD_A3_Pin|ARD_A2_Pin
 232              		.loc 1 741 3 view .LVU64
 233              		.loc 1 741 23 is_stmt 0 view .LVU65
 234 011a 3F23     		movs	r3, #63
 235 011c 0593     		str	r3, [sp, #20]
 742:../Core/Src/main.c ****                           |ARD_A1_Pin|ARD_A0_Pin;
 743:../Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_ANALOG_ADC_CONTROL;
 236              		.loc 1 743 3 is_stmt 1 view .LVU66
 237              		.loc 1 743 24 is_stmt 0 view .LVU67
 238 011e 0B23     		movs	r3, #11
 239 0120 0693     		str	r3, [sp, #24]
 744:../Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 240              		.loc 1 744 3 is_stmt 1 view .LVU68
 241              		.loc 1 744 24 is_stmt 0 view .LVU69
 242 0122 0794     		str	r4, [sp, #28]
 745:../Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 243              		.loc 1 745 3 is_stmt 1 view .LVU70
 244 0124 05A9     		add	r1, sp, #20
 245 0126 5046     		mov	r0, r10
 246 0128 FFF7FEFF 		bl	HAL_GPIO_Init
 247              	.LVL11:
 746:../Core/Src/main.c **** 
 747:../Core/Src/main.c ****   /*Configure GPIO pins : ARD_D1_Pin ARD_D0_Pin */
 748:../Core/Src/main.c ****   GPIO_InitStruct.Pin = ARD_D1_Pin|ARD_D0_Pin;
 248              		.loc 1 748 3 view .LVU71
 249              		.loc 1 748 23 is_stmt 0 view .LVU72
 250 012c 4FF00308 		mov	r8, #3
 251 0130 CDF81480 		str	r8, [sp, #20]
 749:../Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 252              		.loc 1 749 3 is_stmt 1 view .LVU73
 253              		.loc 1 749 24 is_stmt 0 view .LVU74
 254 0134 0225     		movs	r5, #2
 255 0136 0695     		str	r5, [sp, #24]
 750:../Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 256              		.loc 1 750 3 is_stmt 1 view .LVU75
 257              		.loc 1 750 24 is_stmt 0 view .LVU76
 258 0138 0794     		str	r4, [sp, #28]
 751:../Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 259              		.loc 1 751 3 is_stmt 1 view .LVU77
 260              		.loc 1 751 25 is_stmt 0 view .LVU78
 261 013a CDF82080 		str	r8, [sp, #32]
 752:../Core/Src/main.c ****   GPIO_InitStruct.Alternate = GPIO_AF8_UART4;
 262              		.loc 1 752 3 is_stmt 1 view .LVU79
 263              		.loc 1 752 29 is_stmt 0 view .LVU80
 264 013e 0822     		movs	r2, #8
 265 0140 0992     		str	r2, [sp, #36]
 753:../Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 266              		.loc 1 753 3 is_stmt 1 view .LVU81
 267 0142 05A9     		add	r1, sp, #20
 268 0144 4FF09040 		mov	r0, #1207959552
 269 0148 FFF7FEFF 		bl	HAL_GPIO_Init
 270              	.LVL12:
 754:../Core/Src/main.c **** 
 755:../Core/Src/main.c ****   /*Configure GPIO pins : ARD_D10_Pin SPBTLE_RF_RST_Pin ARD_D9_Pin */
 756:../Core/Src/main.c ****   GPIO_InitStruct.Pin = ARD_D10_Pin|SPBTLE_RF_RST_Pin|ARD_D9_Pin;
 271              		.loc 1 756 3 view .LVU82
ARM GAS  Build/main.s 			page 19


 272              		.loc 1 756 23 is_stmt 0 view .LVU83
 273 014c 48F20413 		movw	r3, #33028
 274 0150 0593     		str	r3, [sp, #20]
 757:../Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 275              		.loc 1 757 3 is_stmt 1 view .LVU84
 276              		.loc 1 757 24 is_stmt 0 view .LVU85
 277 0152 0696     		str	r6, [sp, #24]
 758:../Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 278              		.loc 1 758 3 is_stmt 1 view .LVU86
 279              		.loc 1 758 24 is_stmt 0 view .LVU87
 280 0154 0794     		str	r4, [sp, #28]
 759:../Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 281              		.loc 1 759 3 is_stmt 1 view .LVU88
 282              		.loc 1 759 25 is_stmt 0 view .LVU89
 283 0156 0894     		str	r4, [sp, #32]
 760:../Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 284              		.loc 1 760 3 is_stmt 1 view .LVU90
 285 0158 05A9     		add	r1, sp, #20
 286 015a 4FF09040 		mov	r0, #1207959552
 287 015e FFF7FEFF 		bl	HAL_GPIO_Init
 288              	.LVL13:
 761:../Core/Src/main.c **** 
 762:../Core/Src/main.c ****   /*Configure GPIO pin : ARD_D4_Pin */
 763:../Core/Src/main.c ****   GPIO_InitStruct.Pin = ARD_D4_Pin;
 289              		.loc 1 763 3 view .LVU91
 290              		.loc 1 763 23 is_stmt 0 view .LVU92
 291 0162 0822     		movs	r2, #8
 292 0164 0592     		str	r2, [sp, #20]
 764:../Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 293              		.loc 1 764 3 is_stmt 1 view .LVU93
 294              		.loc 1 764 24 is_stmt 0 view .LVU94
 295 0166 0695     		str	r5, [sp, #24]
 765:../Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 296              		.loc 1 765 3 is_stmt 1 view .LVU95
 297              		.loc 1 765 24 is_stmt 0 view .LVU96
 298 0168 0794     		str	r4, [sp, #28]
 766:../Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 299              		.loc 1 766 3 is_stmt 1 view .LVU97
 300              		.loc 1 766 25 is_stmt 0 view .LVU98
 301 016a 0894     		str	r4, [sp, #32]
 767:../Core/Src/main.c ****   GPIO_InitStruct.Alternate = GPIO_AF1_TIM2;
 302              		.loc 1 767 3 is_stmt 1 view .LVU99
 303              		.loc 1 767 29 is_stmt 0 view .LVU100
 304 016c 0996     		str	r6, [sp, #36]
 768:../Core/Src/main.c ****   HAL_GPIO_Init(ARD_D4_GPIO_Port, &GPIO_InitStruct);
 305              		.loc 1 768 3 is_stmt 1 view .LVU101
 306 016e 05A9     		add	r1, sp, #20
 307 0170 4FF09040 		mov	r0, #1207959552
 308 0174 FFF7FEFF 		bl	HAL_GPIO_Init
 309              	.LVL14:
 769:../Core/Src/main.c **** 
 770:../Core/Src/main.c ****   /*Configure GPIO pin : ARD_D7_Pin */
 771:../Core/Src/main.c ****   GPIO_InitStruct.Pin = ARD_D7_Pin;
 310              		.loc 1 771 3 view .LVU102
 311              		.loc 1 771 23 is_stmt 0 view .LVU103
 312 0178 1023     		movs	r3, #16
 313 017a 0593     		str	r3, [sp, #20]
ARM GAS  Build/main.s 			page 20


 772:../Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_ANALOG_ADC_CONTROL;
 314              		.loc 1 772 3 is_stmt 1 view .LVU104
 315              		.loc 1 772 24 is_stmt 0 view .LVU105
 316 017c 0B23     		movs	r3, #11
 317 017e 0693     		str	r3, [sp, #24]
 773:../Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 318              		.loc 1 773 3 is_stmt 1 view .LVU106
 319              		.loc 1 773 24 is_stmt 0 view .LVU107
 320 0180 0794     		str	r4, [sp, #28]
 774:../Core/Src/main.c ****   HAL_GPIO_Init(ARD_D7_GPIO_Port, &GPIO_InitStruct);
 321              		.loc 1 774 3 is_stmt 1 view .LVU108
 322 0182 05A9     		add	r1, sp, #20
 323 0184 4FF09040 		mov	r0, #1207959552
 324 0188 FFF7FEFF 		bl	HAL_GPIO_Init
 325              	.LVL15:
 775:../Core/Src/main.c **** 
 776:../Core/Src/main.c ****   /*Configure GPIO pins : ARD_D13_Pin ARD_D12_Pin ARD_D11_Pin */
 777:../Core/Src/main.c ****   GPIO_InitStruct.Pin = ARD_D13_Pin|ARD_D12_Pin|ARD_D11_Pin;
 326              		.loc 1 777 3 view .LVU109
 327              		.loc 1 777 23 is_stmt 0 view .LVU110
 328 018c E023     		movs	r3, #224
 329 018e 0593     		str	r3, [sp, #20]
 778:../Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 330              		.loc 1 778 3 is_stmt 1 view .LVU111
 331              		.loc 1 778 24 is_stmt 0 view .LVU112
 332 0190 0695     		str	r5, [sp, #24]
 779:../Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 333              		.loc 1 779 3 is_stmt 1 view .LVU113
 334              		.loc 1 779 24 is_stmt 0 view .LVU114
 335 0192 0794     		str	r4, [sp, #28]
 780:../Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 336              		.loc 1 780 3 is_stmt 1 view .LVU115
 337              		.loc 1 780 25 is_stmt 0 view .LVU116
 338 0194 CDF82080 		str	r8, [sp, #32]
 781:../Core/Src/main.c ****   GPIO_InitStruct.Alternate = GPIO_AF5_SPI1;
 339              		.loc 1 781 3 is_stmt 1 view .LVU117
 340              		.loc 1 781 29 is_stmt 0 view .LVU118
 341 0198 0522     		movs	r2, #5
 342 019a 0992     		str	r2, [sp, #36]
 782:../Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 343              		.loc 1 782 3 is_stmt 1 view .LVU119
 344 019c 05A9     		add	r1, sp, #20
 345 019e 4FF09040 		mov	r0, #1207959552
 346 01a2 FFF7FEFF 		bl	HAL_GPIO_Init
 347              	.LVL16:
 783:../Core/Src/main.c **** 
 784:../Core/Src/main.c ****   /*Configure GPIO pin : ARD_D3_Pin */
 785:../Core/Src/main.c ****   GPIO_InitStruct.Pin = ARD_D3_Pin;
 348              		.loc 1 785 3 view .LVU120
 349              		.loc 1 785 23 is_stmt 0 view .LVU121
 350 01a6 0596     		str	r6, [sp, #20]
 786:../Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 351              		.loc 1 786 3 is_stmt 1 view .LVU122
 352              		.loc 1 786 24 is_stmt 0 view .LVU123
 353 01a8 CDF818B0 		str	fp, [sp, #24]
 787:../Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 354              		.loc 1 787 3 is_stmt 1 view .LVU124
ARM GAS  Build/main.s 			page 21


 355              		.loc 1 787 24 is_stmt 0 view .LVU125
 356 01ac 0794     		str	r4, [sp, #28]
 788:../Core/Src/main.c ****   HAL_GPIO_Init(ARD_D3_GPIO_Port, &GPIO_InitStruct);
 357              		.loc 1 788 3 is_stmt 1 view .LVU126
 358 01ae 05A9     		add	r1, sp, #20
 359 01b0 3846     		mov	r0, r7
 360 01b2 FFF7FEFF 		bl	HAL_GPIO_Init
 361              	.LVL17:
 789:../Core/Src/main.c **** 
 790:../Core/Src/main.c ****   /*Configure GPIO pin : ARD_D6_Pin */
 791:../Core/Src/main.c ****   GPIO_InitStruct.Pin = ARD_D6_Pin;
 362              		.loc 1 791 3 view .LVU127
 363              		.loc 1 791 23 is_stmt 0 view .LVU128
 364 01b6 0595     		str	r5, [sp, #20]
 792:../Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_ANALOG_ADC_CONTROL;
 365              		.loc 1 792 3 is_stmt 1 view .LVU129
 366              		.loc 1 792 24 is_stmt 0 view .LVU130
 367 01b8 0B23     		movs	r3, #11
 368 01ba 0693     		str	r3, [sp, #24]
 793:../Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 369              		.loc 1 793 3 is_stmt 1 view .LVU131
 370              		.loc 1 793 24 is_stmt 0 view .LVU132
 371 01bc 0794     		str	r4, [sp, #28]
 794:../Core/Src/main.c ****   HAL_GPIO_Init(ARD_D6_GPIO_Port, &GPIO_InitStruct);
 372              		.loc 1 794 3 is_stmt 1 view .LVU133
 373 01be 05A9     		add	r1, sp, #20
 374 01c0 3846     		mov	r0, r7
 375 01c2 FFF7FEFF 		bl	HAL_GPIO_Init
 376              	.LVL18:
 795:../Core/Src/main.c **** 
 796:../Core/Src/main.c ****   /*Configure GPIO pins : ARD_D8_Pin ISM43362_BOOT0_Pin ISM43362_WAKEUP_Pin LED2_Pin
 797:../Core/Src/main.c ****                            SPSGRF_915_SDN_Pin ARD_D5_Pin SPSGRF_915_SPI3_CSN_Pin */
 798:../Core/Src/main.c ****   GPIO_InitStruct.Pin = ARD_D8_Pin|ISM43362_BOOT0_Pin|ISM43362_WAKEUP_Pin|LED2_Pin
 377              		.loc 1 798 3 view .LVU134
 378              		.loc 1 798 23 is_stmt 0 view .LVU135
 379 01c6 4FF23403 		movw	r3, #61492
 380 01ca 0593     		str	r3, [sp, #20]
 799:../Core/Src/main.c ****                           |SPSGRF_915_SDN_Pin|ARD_D5_Pin|SPSGRF_915_SPI3_CSN_Pin;
 800:../Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 381              		.loc 1 800 3 is_stmt 1 view .LVU136
 382              		.loc 1 800 24 is_stmt 0 view .LVU137
 383 01cc 0696     		str	r6, [sp, #24]
 801:../Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 384              		.loc 1 801 3 is_stmt 1 view .LVU138
 385              		.loc 1 801 24 is_stmt 0 view .LVU139
 386 01ce 0794     		str	r4, [sp, #28]
 802:../Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 387              		.loc 1 802 3 is_stmt 1 view .LVU140
 388              		.loc 1 802 25 is_stmt 0 view .LVU141
 389 01d0 0894     		str	r4, [sp, #32]
 803:../Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 390              		.loc 1 803 3 is_stmt 1 view .LVU142
 391 01d2 05A9     		add	r1, sp, #20
 392 01d4 3846     		mov	r0, r7
 393 01d6 FFF7FEFF 		bl	HAL_GPIO_Init
 394              	.LVL19:
 804:../Core/Src/main.c **** 
ARM GAS  Build/main.s 			page 22


 805:../Core/Src/main.c ****   /*Configure GPIO pins : LPS22HB_INT_DRDY_EXTI0_Pin LSM6DSL_INT1_EXTI11_Pin ARD_D2_Pin HTS221_DRDY
 806:../Core/Src/main.c ****                            PMOD_IRQ_EXTI12_Pin */
 807:../Core/Src/main.c ****   GPIO_InitStruct.Pin = LPS22HB_INT_DRDY_EXTI0_Pin|LSM6DSL_INT1_EXTI11_Pin|ARD_D2_Pin|HTS221_DRDY_E
 395              		.loc 1 807 3 view .LVU143
 396              		.loc 1 807 23 is_stmt 0 view .LVU144
 397 01da 4CF60443 		movw	r3, #52228
 398 01de 0593     		str	r3, [sp, #20]
 808:../Core/Src/main.c ****                           |PMOD_IRQ_EXTI12_Pin;
 809:../Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 399              		.loc 1 809 3 is_stmt 1 view .LVU145
 400              		.loc 1 809 24 is_stmt 0 view .LVU146
 401 01e0 CDF818B0 		str	fp, [sp, #24]
 810:../Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 402              		.loc 1 810 3 is_stmt 1 view .LVU147
 403              		.loc 1 810 24 is_stmt 0 view .LVU148
 404 01e4 0794     		str	r4, [sp, #28]
 811:../Core/Src/main.c ****   HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 405              		.loc 1 811 3 is_stmt 1 view .LVU149
 406 01e6 05A9     		add	r1, sp, #20
 407 01e8 4846     		mov	r0, r9
 408 01ea FFF7FEFF 		bl	HAL_GPIO_Init
 409              	.LVL20:
 812:../Core/Src/main.c **** 
 813:../Core/Src/main.c ****   /*Configure GPIO pins : USB_OTG_FS_PWR_EN_Pin SPBTLE_RF_SPI3_CSN_Pin PMOD_RESET_Pin STSAFE_A100_R
 814:../Core/Src/main.c ****   GPIO_InitStruct.Pin = USB_OTG_FS_PWR_EN_Pin|SPBTLE_RF_SPI3_CSN_Pin|PMOD_RESET_Pin|STSAFE_A100_RES
 410              		.loc 1 814 3 view .LVU150
 411              		.loc 1 814 23 is_stmt 0 view .LVU151
 412 01ee 43F28103 		movw	r3, #12417
 413 01f2 0593     		str	r3, [sp, #20]
 815:../Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 414              		.loc 1 815 3 is_stmt 1 view .LVU152
 415              		.loc 1 815 24 is_stmt 0 view .LVU153
 416 01f4 0696     		str	r6, [sp, #24]
 816:../Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 417              		.loc 1 816 3 is_stmt 1 view .LVU154
 418              		.loc 1 816 24 is_stmt 0 view .LVU155
 419 01f6 0794     		str	r4, [sp, #28]
 817:../Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 420              		.loc 1 817 3 is_stmt 1 view .LVU156
 421              		.loc 1 817 25 is_stmt 0 view .LVU157
 422 01f8 0894     		str	r4, [sp, #32]
 818:../Core/Src/main.c ****   HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 423              		.loc 1 818 3 is_stmt 1 view .LVU158
 424 01fa 05A9     		add	r1, sp, #20
 425 01fc 4846     		mov	r0, r9
 426 01fe FFF7FEFF 		bl	HAL_GPIO_Init
 427              	.LVL21:
 819:../Core/Src/main.c **** 
 820:../Core/Src/main.c ****   /*Configure GPIO pins : VL53L0X_XSHUT_Pin LED3_WIFI__LED4_BLE_Pin */
 821:../Core/Src/main.c ****   GPIO_InitStruct.Pin = VL53L0X_XSHUT_Pin|LED3_WIFI__LED4_BLE_Pin;
 428              		.loc 1 821 3 view .LVU159
 429              		.loc 1 821 23 is_stmt 0 view .LVU160
 430 0202 4FF41073 		mov	r3, #576
 431 0206 0593     		str	r3, [sp, #20]
 822:../Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 432              		.loc 1 822 3 is_stmt 1 view .LVU161
 433              		.loc 1 822 24 is_stmt 0 view .LVU162
ARM GAS  Build/main.s 			page 23


 434 0208 0696     		str	r6, [sp, #24]
 823:../Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 435              		.loc 1 823 3 is_stmt 1 view .LVU163
 436              		.loc 1 823 24 is_stmt 0 view .LVU164
 437 020a 0794     		str	r4, [sp, #28]
 824:../Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 438              		.loc 1 824 3 is_stmt 1 view .LVU165
 439              		.loc 1 824 25 is_stmt 0 view .LVU166
 440 020c 0894     		str	r4, [sp, #32]
 825:../Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 441              		.loc 1 825 3 is_stmt 1 view .LVU167
 442 020e 05A9     		add	r1, sp, #20
 443 0210 5046     		mov	r0, r10
 444 0212 FFF7FEFF 		bl	HAL_GPIO_Init
 445              	.LVL22:
 826:../Core/Src/main.c **** 
 827:../Core/Src/main.c ****   /*Configure GPIO pins : VL53L0X_GPIO1_EXTI7_Pin LSM3MDL_DRDY_EXTI8_Pin */
 828:../Core/Src/main.c ****   GPIO_InitStruct.Pin = VL53L0X_GPIO1_EXTI7_Pin|LSM3MDL_DRDY_EXTI8_Pin;
 446              		.loc 1 828 3 view .LVU168
 447              		.loc 1 828 23 is_stmt 0 view .LVU169
 448 0216 4FF4C073 		mov	r3, #384
 449 021a 0593     		str	r3, [sp, #20]
 829:../Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 450              		.loc 1 829 3 is_stmt 1 view .LVU170
 451              		.loc 1 829 24 is_stmt 0 view .LVU171
 452 021c CDF818B0 		str	fp, [sp, #24]
 830:../Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 453              		.loc 1 830 3 is_stmt 1 view .LVU172
 454              		.loc 1 830 24 is_stmt 0 view .LVU173
 455 0220 0794     		str	r4, [sp, #28]
 831:../Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 456              		.loc 1 831 3 is_stmt 1 view .LVU174
 457 0222 05A9     		add	r1, sp, #20
 458 0224 5046     		mov	r0, r10
 459 0226 FFF7FEFF 		bl	HAL_GPIO_Init
 460              	.LVL23:
 832:../Core/Src/main.c **** 
 833:../Core/Src/main.c ****   /*Configure GPIO pin : PMOD_SPI2_SCK_Pin */
 834:../Core/Src/main.c ****   GPIO_InitStruct.Pin = PMOD_SPI2_SCK_Pin;
 461              		.loc 1 834 3 view .LVU175
 462              		.loc 1 834 23 is_stmt 0 view .LVU176
 463 022a 0595     		str	r5, [sp, #20]
 835:../Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 464              		.loc 1 835 3 is_stmt 1 view .LVU177
 465              		.loc 1 835 24 is_stmt 0 view .LVU178
 466 022c 0695     		str	r5, [sp, #24]
 836:../Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 467              		.loc 1 836 3 is_stmt 1 view .LVU179
 468              		.loc 1 836 24 is_stmt 0 view .LVU180
 469 022e 0794     		str	r4, [sp, #28]
 837:../Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 470              		.loc 1 837 3 is_stmt 1 view .LVU181
 471              		.loc 1 837 25 is_stmt 0 view .LVU182
 472 0230 CDF82080 		str	r8, [sp, #32]
 838:../Core/Src/main.c ****   GPIO_InitStruct.Alternate = GPIO_AF5_SPI2;
 473              		.loc 1 838 3 is_stmt 1 view .LVU183
 474              		.loc 1 838 29 is_stmt 0 view .LVU184
ARM GAS  Build/main.s 			page 24


 475 0234 0522     		movs	r2, #5
 476 0236 0992     		str	r2, [sp, #36]
 839:../Core/Src/main.c ****   HAL_GPIO_Init(PMOD_SPI2_SCK_GPIO_Port, &GPIO_InitStruct);
 477              		.loc 1 839 3 is_stmt 1 view .LVU185
 478 0238 05A9     		add	r1, sp, #20
 479 023a 4846     		mov	r0, r9
 480 023c FFF7FEFF 		bl	HAL_GPIO_Init
 481              	.LVL24:
 840:../Core/Src/main.c **** 
 841:../Core/Src/main.c ****   /*Configure GPIO pins : PMOD_UART2_CTS_Pin PMOD_UART2_RTS_Pin PMOD_UART2_TX_Pin PMOD_UART2_RX_Pin
 842:../Core/Src/main.c ****   GPIO_InitStruct.Pin = PMOD_UART2_CTS_Pin|PMOD_UART2_RTS_Pin|PMOD_UART2_TX_Pin|PMOD_UART2_RX_Pin;
 482              		.loc 1 842 3 view .LVU186
 483              		.loc 1 842 23 is_stmt 0 view .LVU187
 484 0240 7823     		movs	r3, #120
 485 0242 0593     		str	r3, [sp, #20]
 843:../Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 486              		.loc 1 843 3 is_stmt 1 view .LVU188
 487              		.loc 1 843 24 is_stmt 0 view .LVU189
 488 0244 0695     		str	r5, [sp, #24]
 844:../Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 489              		.loc 1 844 3 is_stmt 1 view .LVU190
 490              		.loc 1 844 24 is_stmt 0 view .LVU191
 491 0246 0794     		str	r4, [sp, #28]
 845:../Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 492              		.loc 1 845 3 is_stmt 1 view .LVU192
 493              		.loc 1 845 25 is_stmt 0 view .LVU193
 494 0248 CDF82080 		str	r8, [sp, #32]
 846:../Core/Src/main.c ****   GPIO_InitStruct.Alternate = GPIO_AF7_USART2;
 495              		.loc 1 846 3 is_stmt 1 view .LVU194
 496              		.loc 1 846 29 is_stmt 0 view .LVU195
 497 024c 0723     		movs	r3, #7
 498 024e 0993     		str	r3, [sp, #36]
 847:../Core/Src/main.c ****   HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 499              		.loc 1 847 3 is_stmt 1 view .LVU196
 500 0250 05A9     		add	r1, sp, #20
 501 0252 4846     		mov	r0, r9
 502 0254 FFF7FEFF 		bl	HAL_GPIO_Init
 503              	.LVL25:
 848:../Core/Src/main.c **** 
 849:../Core/Src/main.c ****   /*Configure GPIO pins : ARD_D15_Pin ARD_D14_Pin */
 850:../Core/Src/main.c ****   GPIO_InitStruct.Pin = ARD_D15_Pin|ARD_D14_Pin;
 504              		.loc 1 850 3 view .LVU197
 505              		.loc 1 850 23 is_stmt 0 view .LVU198
 506 0258 4FF44073 		mov	r3, #768
 507 025c 0593     		str	r3, [sp, #20]
 851:../Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 508              		.loc 1 851 3 is_stmt 1 view .LVU199
 509              		.loc 1 851 24 is_stmt 0 view .LVU200
 510 025e 1223     		movs	r3, #18
 511 0260 0693     		str	r3, [sp, #24]
 852:../Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 512              		.loc 1 852 3 is_stmt 1 view .LVU201
 513              		.loc 1 852 24 is_stmt 0 view .LVU202
 514 0262 0794     		str	r4, [sp, #28]
 853:../Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 515              		.loc 1 853 3 is_stmt 1 view .LVU203
 516              		.loc 1 853 25 is_stmt 0 view .LVU204
ARM GAS  Build/main.s 			page 25


 517 0264 CDF82080 		str	r8, [sp, #32]
 854:../Core/Src/main.c ****   GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
 518              		.loc 1 854 3 is_stmt 1 view .LVU205
 519              		.loc 1 854 29 is_stmt 0 view .LVU206
 520 0268 0423     		movs	r3, #4
 521 026a 0993     		str	r3, [sp, #36]
 855:../Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 522              		.loc 1 855 3 is_stmt 1 view .LVU207
 523 026c 05A9     		add	r1, sp, #20
 524 026e 3846     		mov	r0, r7
 525 0270 FFF7FEFF 		bl	HAL_GPIO_Init
 526              	.LVL26:
 856:../Core/Src/main.c **** 
 857:../Core/Src/main.c ****   /* EXTI interrupt init*/
 858:../Core/Src/main.c ****   HAL_NVIC_SetPriority(EXTI9_5_IRQn, 0, 0);
 527              		.loc 1 858 3 view .LVU208
 528 0274 2246     		mov	r2, r4
 529 0276 2146     		mov	r1, r4
 530 0278 1720     		movs	r0, #23
 531 027a FFF7FEFF 		bl	HAL_NVIC_SetPriority
 532              	.LVL27:
 859:../Core/Src/main.c ****   HAL_NVIC_EnableIRQ(EXTI9_5_IRQn);
 533              		.loc 1 859 3 view .LVU209
 534 027e 1720     		movs	r0, #23
 535 0280 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 536              	.LVL28:
 860:../Core/Src/main.c **** 
 861:../Core/Src/main.c ****   HAL_NVIC_SetPriority(EXTI15_10_IRQn, 0, 0);
 537              		.loc 1 861 3 view .LVU210
 538 0284 2246     		mov	r2, r4
 539 0286 2146     		mov	r1, r4
 540 0288 2820     		movs	r0, #40
 541 028a FFF7FEFF 		bl	HAL_NVIC_SetPriority
 542              	.LVL29:
 862:../Core/Src/main.c ****   HAL_NVIC_EnableIRQ(EXTI15_10_IRQn);
 543              		.loc 1 862 3 view .LVU211
 544 028e 2820     		movs	r0, #40
 545 0290 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 546              	.LVL30:
 863:../Core/Src/main.c **** 
 864:../Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_2 */
 865:../Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_2 */
 866:../Core/Src/main.c **** }
 547              		.loc 1 866 1 is_stmt 0 view .LVU212
 548 0294 0BB0     		add	sp, sp, #44
 549              	.LCFI2:
 550              		.cfi_def_cfa_offset 36
 551              		@ sp needed
 552 0296 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 553              	.L4:
 554 029a 00BF     		.align	2
 555              	.L3:
 556 029c 00100240 		.word	1073876992
 557 02a0 00100048 		.word	1207963648
 558 02a4 00040048 		.word	1207960576
 559 02a8 000C0048 		.word	1207962624
 560 02ac 00080048 		.word	1207961600
ARM GAS  Build/main.s 			page 26


 561              		.cfi_endproc
 562              	.LFE93:
 564              		.section	.rodata.ta_bitcoin_cmd_check_masterkey.str1.4,"aMS",%progbits,1
 565              		.align	2
 566              	.LC1:
 567 0000 0D436865 		.ascii	"\015Check if there's a existing master key...\015\000"
 567      636B2069 
 567      66207468 
 567      65726527 
 567      73206120 
 568              		.align	2
 569              	.LC2:
 570 002c 2E2E2F43 		.ascii	"../Core/Src/main.c\000"
 570      6F72652F 
 570      5372632F 
 570      6D61696E 
 570      2E6300
 571 003f 00       		.align	2
 572              	.LC3:
 573 0040 1B5B303B 		.ascii	"\033[0;31mERROR: %s:%d:%s(): \"TEEC_InvokeCommand f"
 573      33316D45 
 573      52524F52 
 573      3A202573 
 573      3A25643A 
 574 006f 61696C65 		.ascii	"ailed with code 0x%x origin 0x%x\\r\\n\"\015\012\000"
 574      64207769 
 574      74682063 
 574      6F646520 
 574      30782578 
 575 0097 00       		.align	2
 576              	.LC4:
 577 0098 1B5B303B 		.ascii	"\033[0;31mERROR: %s:%d:%s(): \"Incorrect pin\\r\\n\""
 577      33316D45 
 577      52524F52 
 577      3A202573 
 577      3A25643A 
 578 00c5 0D0A00   		.ascii	"\015\012\000"
 579              		.align	2
 580              	.LC5:
 581 00c8 4D617374 		.ascii	"Master key exists\015\000"
 581      6572206B 
 581      65792065 
 581      78697374 
 581      730D00
 582 00db 00       		.align	2
 583              	.LC6:
 584 00dc 4E6F6E65 		.ascii	"None master key exits\015\000"
 584      206D6173 
 584      74657220 
 584      6B657920 
 584      65786974 
 585              		.section	.text.ta_bitcoin_cmd_check_masterkey,"ax",%progbits
 586              		.align	1
 587              		.syntax unified
 588              		.thumb
 589              		.thumb_func
 591              	ta_bitcoin_cmd_check_masterkey:
ARM GAS  Build/main.s 			page 27


 592              	.LVL31:
 593              	.LFB84:
 195:../Core/Src/main.c **** 	TEEC_Operation op;
 594              		.loc 1 195 121 is_stmt 1 view -0
 595              		.cfi_startproc
 596              		@ args = 4, pretend = 0, frame = 128
 597              		@ frame_needed = 0, uses_anonymous_args = 0
 195:../Core/Src/main.c **** 	TEEC_Operation op;
 598              		.loc 1 195 121 is_stmt 0 view .LVU214
 599 0000 70B5     		push	{r4, r5, r6, lr}
 600              	.LCFI3:
 601              		.cfi_def_cfa_offset 16
 602              		.cfi_offset 4, -16
 603              		.cfi_offset 5, -12
 604              		.cfi_offset 6, -8
 605              		.cfi_offset 14, -4
 606 0002 A2B0     		sub	sp, sp, #136
 607              	.LCFI4:
 608              		.cfi_def_cfa_offset 152
 609 0004 02AC     		add	r4, sp, #8
 610 0006 84E80300 		stm	r4, {r0, r1}
 611 000a 1646     		mov	r6, r2
 612 000c 1D46     		mov	r5, r3
 196:../Core/Src/main.c **** 	TEEC_Result res;
 613              		.loc 1 196 2 is_stmt 1 view .LVU215
 197:../Core/Src/main.c **** 
 614              		.loc 1 197 2 view .LVU216
 200:../Core/Src/main.c **** 
 615              		.loc 1 200 2 view .LVU217
 616 000e 7822     		movs	r2, #120
 617              	.LVL32:
 200:../Core/Src/main.c **** 
 618              		.loc 1 200 2 is_stmt 0 view .LVU218
 619 0010 0021     		movs	r1, #0
 620 0012 04A8     		add	r0, sp, #16
 621 0014 FFF7FEFF 		bl	memset
 622              	.LVL33:
 202:../Core/Src/main.c **** 	// Defining the parameter value sent to TA, the parameter are
 623              		.loc 1 202 2 is_stmt 1 view .LVU219
 624 0018 1748     		ldr	r0, .L14
 625 001a FFF7FEFF 		bl	puts
 626              	.LVL34:
 204:../Core/Src/main.c **** 	op.params[0].value.a = pin;
 627              		.loc 1 204 2 view .LVU220
 204:../Core/Src/main.c **** 	op.params[0].value.a = pin;
 628              		.loc 1 204 16 is_stmt 0 view .LVU221
 629 001e 2323     		movs	r3, #35
 630 0020 0593     		str	r3, [sp, #20]
 205:../Core/Src/main.c **** 	op.params[0].value.b = 0; // 0---unchecked, 1---correct pin, 2---incorrect pin
 631              		.loc 1 205 2 is_stmt 1 view .LVU222
 205:../Core/Src/main.c **** 	op.params[0].value.b = 0; // 0---unchecked, 1---correct pin, 2---incorrect pin
 632              		.loc 1 205 23 is_stmt 0 view .LVU223
 633 0022 0B96     		str	r6, [sp, #44]
 206:../Core/Src/main.c **** 
 634              		.loc 1 206 2 is_stmt 1 view .LVU224
 206:../Core/Src/main.c **** 
 635              		.loc 1 206 23 is_stmt 0 view .LVU225
ARM GAS  Build/main.s 			page 28


 636 0024 0023     		movs	r3, #0
 637 0026 0C93     		str	r3, [sp, #48]
 208:../Core/Src/main.c **** 	if (res != TEEC_SUCCESS) {
 638              		.loc 1 208 2 is_stmt 1 view .LVU226
 208:../Core/Src/main.c **** 	if (res != TEEC_SUCCESS) {
 639              		.loc 1 208 8 is_stmt 0 view .LVU227
 640 0028 26AB     		add	r3, sp, #152
 641 002a 04AA     		add	r2, sp, #16
 642 002c 2946     		mov	r1, r5
 643 002e 2046     		mov	r0, r4
 644 0030 FFF7FEFF 		bl	TEEC_InvokeCommand
 645              	.LVL35:
 209:../Core/Src/main.c **** 		ERR_MSG("TEEC_InvokeCommand failed with code 0x%x origin 0x%x\r\n", res, err_origin);
 646              		.loc 1 209 2 is_stmt 1 view .LVU228
 209:../Core/Src/main.c **** 		ERR_MSG("TEEC_InvokeCommand failed with code 0x%x origin 0x%x\r\n", res, err_origin);
 647              		.loc 1 209 5 is_stmt 0 view .LVU229
 648 0034 58B9     		cbnz	r0, .L11
 649              	.LVL36:
 650              	.L6:
 210:../Core/Src/main.c **** 	}
 651              		.loc 1 210 3 is_stmt 1 discriminator 1 view .LVU230
 210:../Core/Src/main.c **** 	}
 652              		.loc 1 210 87 discriminator 1 view .LVU231
 212:../Core/Src/main.c **** 		ERR_MSG("Incorrect pin\r\n");
 653              		.loc 1 212 2 discriminator 1 view .LVU232
 212:../Core/Src/main.c **** 		ERR_MSG("Incorrect pin\r\n");
 654              		.loc 1 212 24 is_stmt 0 discriminator 1 view .LVU233
 655 0036 0C9B     		ldr	r3, [sp, #48]
 212:../Core/Src/main.c **** 		ERR_MSG("Incorrect pin\r\n");
 656              		.loc 1 212 5 discriminator 1 view .LVU234
 657 0038 022B     		cmp	r3, #2
 658 003a 12D0     		beq	.L12
 659              	.L7:
 213:../Core/Src/main.c **** 	}
 660              		.loc 1 213 3 is_stmt 1 discriminator 1 view .LVU235
 213:../Core/Src/main.c **** 	}
 661              		.loc 1 213 31 discriminator 1 view .LVU236
 216:../Core/Src/main.c **** 		printf("Master key exists\r\n");
 662              		.loc 1 216 2 discriminator 1 view .LVU237
 216:../Core/Src/main.c **** 		printf("Master key exists\r\n");
 663              		.loc 1 216 23 is_stmt 0 discriminator 1 view .LVU238
 664 003c 129B     		ldr	r3, [sp, #72]
 216:../Core/Src/main.c **** 		printf("Master key exists\r\n");
 665              		.loc 1 216 4 discriminator 1 view .LVU239
 666 003e 012B     		cmp	r3, #1
 667 0040 16D0     		beq	.L13
 219:../Core/Src/main.c **** 
 668              		.loc 1 219 3 is_stmt 1 view .LVU240
 669 0042 0E48     		ldr	r0, .L14+4
 670 0044 FFF7FEFF 		bl	puts
 671              	.LVL37:
 672              	.L9:
 221:../Core/Src/main.c **** }
 673              		.loc 1 221 2 view .LVU241
 222:../Core/Src/main.c **** 
 674              		.loc 1 222 1 is_stmt 0 view .LVU242
 675 0048 0020     		movs	r0, #0
ARM GAS  Build/main.s 			page 29


 676 004a 22B0     		add	sp, sp, #136
 677              	.LCFI5:
 678              		.cfi_remember_state
 679              		.cfi_def_cfa_offset 16
 680              		@ sp needed
 681 004c 70BD     		pop	{r4, r5, r6, pc}
 682              	.LVL38:
 683              	.L11:
 684              	.LCFI6:
 685              		.cfi_restore_state
 210:../Core/Src/main.c **** 	}
 686              		.loc 1 210 3 is_stmt 1 view .LVU243
 210:../Core/Src/main.c **** 	}
 687              		.loc 1 210 3 view .LVU244
 688 004e 269A     		ldr	r2, [sp, #152]
 689 0050 0192     		str	r2, [sp, #4]
 690 0052 0090     		str	r0, [sp]
 691 0054 0A4B     		ldr	r3, .L14+8
 692 0056 D222     		movs	r2, #210
 693 0058 0A49     		ldr	r1, .L14+12
 694 005a 0B48     		ldr	r0, .L14+16
 695              	.LVL39:
 210:../Core/Src/main.c **** 	}
 696              		.loc 1 210 3 is_stmt 0 view .LVU245
 697 005c FFF7FEFF 		bl	printf
 698              	.LVL40:
 210:../Core/Src/main.c **** 	}
 699              		.loc 1 210 3 view .LVU246
 700 0060 E9E7     		b	.L6
 701              	.L12:
 213:../Core/Src/main.c **** 	}
 702              		.loc 1 213 3 is_stmt 1 view .LVU247
 213:../Core/Src/main.c **** 	}
 703              		.loc 1 213 3 view .LVU248
 704 0062 074B     		ldr	r3, .L14+8
 705 0064 D522     		movs	r2, #213
 706 0066 0749     		ldr	r1, .L14+12
 707 0068 0848     		ldr	r0, .L14+20
 708 006a FFF7FEFF 		bl	printf
 709              	.LVL41:
 710 006e E5E7     		b	.L7
 711              	.L13:
 217:../Core/Src/main.c **** 	else
 712              		.loc 1 217 3 view .LVU249
 713 0070 0748     		ldr	r0, .L14+24
 714 0072 FFF7FEFF 		bl	puts
 715              	.LVL42:
 716 0076 E7E7     		b	.L9
 717              	.L15:
 718              		.align	2
 719              	.L14:
 720 0078 00000000 		.word	.LC1
 721 007c DC000000 		.word	.LC6
 722 0080 00000000 		.word	__func__.5
 723 0084 2C000000 		.word	.LC2
 724 0088 40000000 		.word	.LC3
 725 008c 98000000 		.word	.LC4
ARM GAS  Build/main.s 			page 30


 726 0090 C8000000 		.word	.LC5
 727              		.cfi_endproc
 728              	.LFE84:
 730              		.section	.rodata.ta_bitcoin_cmd_erase_masterkey.str1.4,"aMS",%progbits,1
 731              		.align	2
 732              	.LC7:
 733 0000 43686563 		.ascii	"Check if there's a existing master key...\015\000"
 733      6B206966 
 733      20746865 
 733      72652773 
 733      20612065 
 734 002b 00       		.align	2
 735              	.LC8:
 736 002c 4D617374 		.ascii	"Master key exists, erase success\015\000"
 736      6572206B 
 736      65792065 
 736      78697374 
 736      732C2065 
 737              		.section	.text.ta_bitcoin_cmd_erase_masterkey,"ax",%progbits
 738              		.align	1
 739              		.syntax unified
 740              		.thumb
 741              		.thumb_func
 743              	ta_bitcoin_cmd_erase_masterkey:
 744              	.LVL43:
 745              	.LFB85:
 224:../Core/Src/main.c **** 	TEEC_Operation op;
 746              		.loc 1 224 121 view -0
 747              		.cfi_startproc
 748              		@ args = 4, pretend = 0, frame = 128
 749              		@ frame_needed = 0, uses_anonymous_args = 0
 224:../Core/Src/main.c **** 	TEEC_Operation op;
 750              		.loc 1 224 121 is_stmt 0 view .LVU251
 751 0000 70B5     		push	{r4, r5, r6, lr}
 752              	.LCFI7:
 753              		.cfi_def_cfa_offset 16
 754              		.cfi_offset 4, -16
 755              		.cfi_offset 5, -12
 756              		.cfi_offset 6, -8
 757              		.cfi_offset 14, -4
 758 0002 A2B0     		sub	sp, sp, #136
 759              	.LCFI8:
 760              		.cfi_def_cfa_offset 152
 761 0004 02AC     		add	r4, sp, #8
 762 0006 84E80300 		stm	r4, {r0, r1}
 763 000a 1646     		mov	r6, r2
 764 000c 1D46     		mov	r5, r3
 225:../Core/Src/main.c **** 	TEEC_Result res;
 765              		.loc 1 225 2 is_stmt 1 view .LVU252
 226:../Core/Src/main.c **** 
 766              		.loc 1 226 2 view .LVU253
 229:../Core/Src/main.c **** 
 767              		.loc 1 229 2 view .LVU254
 768 000e 7822     		movs	r2, #120
 769              	.LVL44:
 229:../Core/Src/main.c **** 
 770              		.loc 1 229 2 is_stmt 0 view .LVU255
ARM GAS  Build/main.s 			page 31


 771 0010 0021     		movs	r1, #0
 772 0012 04A8     		add	r0, sp, #16
 773 0014 FFF7FEFF 		bl	memset
 774              	.LVL45:
 231:../Core/Src/main.c **** 	// Defining the parameter value sent to TA, the parameter are
 775              		.loc 1 231 2 is_stmt 1 view .LVU256
 776 0018 1748     		ldr	r0, .L25
 777 001a FFF7FEFF 		bl	puts
 778              	.LVL46:
 233:../Core/Src/main.c **** 	op.params[0].value.a = pin;
 779              		.loc 1 233 2 view .LVU257
 233:../Core/Src/main.c **** 	op.params[0].value.a = pin;
 780              		.loc 1 233 16 is_stmt 0 view .LVU258
 781 001e 2323     		movs	r3, #35
 782 0020 0593     		str	r3, [sp, #20]
 234:../Core/Src/main.c **** 	op.params[0].value.b = 0; // 0---unchecked, 1---correct pin, 2---incorrect pin
 783              		.loc 1 234 2 is_stmt 1 view .LVU259
 234:../Core/Src/main.c **** 	op.params[0].value.b = 0; // 0---unchecked, 1---correct pin, 2---incorrect pin
 784              		.loc 1 234 23 is_stmt 0 view .LVU260
 785 0022 0B96     		str	r6, [sp, #44]
 235:../Core/Src/main.c **** 
 786              		.loc 1 235 2 is_stmt 1 view .LVU261
 235:../Core/Src/main.c **** 
 787              		.loc 1 235 23 is_stmt 0 view .LVU262
 788 0024 0023     		movs	r3, #0
 789 0026 0C93     		str	r3, [sp, #48]
 237:../Core/Src/main.c **** 	if (res != TEEC_SUCCESS) {
 790              		.loc 1 237 2 is_stmt 1 view .LVU263
 237:../Core/Src/main.c **** 	if (res != TEEC_SUCCESS) {
 791              		.loc 1 237 8 is_stmt 0 view .LVU264
 792 0028 26AB     		add	r3, sp, #152
 793 002a 04AA     		add	r2, sp, #16
 794 002c 2946     		mov	r1, r5
 795 002e 2046     		mov	r0, r4
 796 0030 FFF7FEFF 		bl	TEEC_InvokeCommand
 797              	.LVL47:
 238:../Core/Src/main.c **** 		ERR_MSG("TEEC_InvokeCommand failed with code 0x%x origin 0x%x\r\n", res, err_origin);
 798              		.loc 1 238 2 is_stmt 1 view .LVU265
 238:../Core/Src/main.c **** 		ERR_MSG("TEEC_InvokeCommand failed with code 0x%x origin 0x%x\r\n", res, err_origin);
 799              		.loc 1 238 5 is_stmt 0 view .LVU266
 800 0034 58B9     		cbnz	r0, .L22
 801              	.LVL48:
 802              	.L17:
 239:../Core/Src/main.c **** 	}
 803              		.loc 1 239 3 is_stmt 1 discriminator 1 view .LVU267
 239:../Core/Src/main.c **** 	}
 804              		.loc 1 239 87 discriminator 1 view .LVU268
 241:../Core/Src/main.c **** 		ERR_MSG("Incorrect pin\r\n");
 805              		.loc 1 241 2 discriminator 1 view .LVU269
 241:../Core/Src/main.c **** 		ERR_MSG("Incorrect pin\r\n");
 806              		.loc 1 241 24 is_stmt 0 discriminator 1 view .LVU270
 807 0036 0C9B     		ldr	r3, [sp, #48]
 241:../Core/Src/main.c **** 		ERR_MSG("Incorrect pin\r\n");
 808              		.loc 1 241 5 discriminator 1 view .LVU271
 809 0038 022B     		cmp	r3, #2
 810 003a 12D0     		beq	.L23
 811              	.L18:
ARM GAS  Build/main.s 			page 32


 242:../Core/Src/main.c **** 	}
 812              		.loc 1 242 3 is_stmt 1 discriminator 1 view .LVU272
 242:../Core/Src/main.c **** 	}
 813              		.loc 1 242 31 discriminator 1 view .LVU273
 245:../Core/Src/main.c **** 		printf("Master key exists, erase success\r\n");
 814              		.loc 1 245 2 discriminator 1 view .LVU274
 245:../Core/Src/main.c **** 		printf("Master key exists, erase success\r\n");
 815              		.loc 1 245 23 is_stmt 0 discriminator 1 view .LVU275
 816 003c 129B     		ldr	r3, [sp, #72]
 245:../Core/Src/main.c **** 		printf("Master key exists, erase success\r\n");
 817              		.loc 1 245 4 discriminator 1 view .LVU276
 818 003e 012B     		cmp	r3, #1
 819 0040 16D0     		beq	.L24
 248:../Core/Src/main.c **** 
 820              		.loc 1 248 3 is_stmt 1 view .LVU277
 821 0042 0E48     		ldr	r0, .L25+4
 822 0044 FFF7FEFF 		bl	puts
 823              	.LVL49:
 824              	.L20:
 250:../Core/Src/main.c **** }
 825              		.loc 1 250 2 view .LVU278
 251:../Core/Src/main.c **** 
 826              		.loc 1 251 1 is_stmt 0 view .LVU279
 827 0048 0020     		movs	r0, #0
 828 004a 22B0     		add	sp, sp, #136
 829              	.LCFI9:
 830              		.cfi_remember_state
 831              		.cfi_def_cfa_offset 16
 832              		@ sp needed
 833 004c 70BD     		pop	{r4, r5, r6, pc}
 834              	.LVL50:
 835              	.L22:
 836              	.LCFI10:
 837              		.cfi_restore_state
 239:../Core/Src/main.c **** 	}
 838              		.loc 1 239 3 is_stmt 1 view .LVU280
 239:../Core/Src/main.c **** 	}
 839              		.loc 1 239 3 view .LVU281
 840 004e 269A     		ldr	r2, [sp, #152]
 841 0050 0192     		str	r2, [sp, #4]
 842 0052 0090     		str	r0, [sp]
 843 0054 0A4B     		ldr	r3, .L25+8
 844 0056 EF22     		movs	r2, #239
 845 0058 0A49     		ldr	r1, .L25+12
 846 005a 0B48     		ldr	r0, .L25+16
 847              	.LVL51:
 239:../Core/Src/main.c **** 	}
 848              		.loc 1 239 3 is_stmt 0 view .LVU282
 849 005c FFF7FEFF 		bl	printf
 850              	.LVL52:
 239:../Core/Src/main.c **** 	}
 851              		.loc 1 239 3 view .LVU283
 852 0060 E9E7     		b	.L17
 853              	.L23:
 242:../Core/Src/main.c **** 	}
 854              		.loc 1 242 3 is_stmt 1 view .LVU284
 242:../Core/Src/main.c **** 	}
ARM GAS  Build/main.s 			page 33


 855              		.loc 1 242 3 view .LVU285
 856 0062 074B     		ldr	r3, .L25+8
 857 0064 F222     		movs	r2, #242
 858 0066 0749     		ldr	r1, .L25+12
 859 0068 0848     		ldr	r0, .L25+20
 860 006a FFF7FEFF 		bl	printf
 861              	.LVL53:
 862 006e E5E7     		b	.L18
 863              	.L24:
 246:../Core/Src/main.c **** 	else
 864              		.loc 1 246 3 view .LVU286
 865 0070 0748     		ldr	r0, .L25+24
 866 0072 FFF7FEFF 		bl	puts
 867              	.LVL54:
 868 0076 E7E7     		b	.L20
 869              	.L26:
 870              		.align	2
 871              	.L25:
 872 0078 00000000 		.word	.LC7
 873 007c DC000000 		.word	.LC6
 874 0080 00000000 		.word	__func__.2
 875 0084 2C000000 		.word	.LC2
 876 0088 40000000 		.word	.LC3
 877 008c 98000000 		.word	.LC4
 878 0090 2C000000 		.word	.LC8
 879              		.cfi_endproc
 880              	.LFE85:
 882              		.section	.rodata.ta_bitcoin_cmd_mnemonic_to_masterkey.str1.4,"aMS",%progbits,1
 883              		.align	2
 884              	.LC9:
 885 0000 44657269 		.ascii	"Deriving master key from your mnemonic...\015\000"
 885      76696E67 
 885      206D6173 
 885      74657220 
 885      6B657920 
 886 002b 00       		.align	2
 887              	.LC10:
 888 002c 53756363 		.ascii	"Success!\015\000"
 888      65737321 
 888      0D00
 889              		.section	.text.ta_bitcoin_cmd_mnemonic_to_masterkey,"ax",%progbits
 890              		.align	1
 891              		.syntax unified
 892              		.thumb
 893              		.thumb_func
 895              	ta_bitcoin_cmd_mnemonic_to_masterkey:
 896              	.LVL55:
 897              	.LFB83:
 167:../Core/Src/main.c **** 	TEEC_Operation op;
 898              		.loc 1 167 143 view -0
 899              		.cfi_startproc
 900              		@ args = 8, pretend = 0, frame = 128
 901              		@ frame_needed = 0, uses_anonymous_args = 0
 167:../Core/Src/main.c **** 	TEEC_Operation op;
 902              		.loc 1 167 143 is_stmt 0 view .LVU288
 903 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 904              	.LCFI11:
ARM GAS  Build/main.s 			page 34


 905              		.cfi_def_cfa_offset 20
 906              		.cfi_offset 4, -20
 907              		.cfi_offset 5, -16
 908              		.cfi_offset 6, -12
 909              		.cfi_offset 7, -8
 910              		.cfi_offset 14, -4
 911 0002 A3B0     		sub	sp, sp, #140
 912              	.LCFI12:
 913              		.cfi_def_cfa_offset 160
 914 0004 02AC     		add	r4, sp, #8
 915 0006 84E80300 		stm	r4, {r0, r1}
 916 000a 1646     		mov	r6, r2
 917 000c 1D46     		mov	r5, r3
 918 000e 299F     		ldr	r7, [sp, #164]
 168:../Core/Src/main.c **** 	TEEC_Result res;
 919              		.loc 1 168 2 is_stmt 1 view .LVU289
 169:../Core/Src/main.c **** 
 920              		.loc 1 169 2 view .LVU290
 172:../Core/Src/main.c **** 
 921              		.loc 1 172 2 view .LVU291
 922 0010 7822     		movs	r2, #120
 923              	.LVL56:
 172:../Core/Src/main.c **** 
 924              		.loc 1 172 2 is_stmt 0 view .LVU292
 925 0012 0021     		movs	r1, #0
 926 0014 04A8     		add	r0, sp, #16
 927 0016 FFF7FEFF 		bl	memset
 928              	.LVL57:
 174:../Core/Src/main.c **** 	// Defining the parameter value sent to TA, the parameter are
 929              		.loc 1 174 2 is_stmt 1 view .LVU293
 930 001a 1848     		ldr	r0, .L35
 931 001c FFF7FEFF 		bl	puts
 932              	.LVL58:
 176:../Core/Src/main.c **** 	op.params[0].value.a = pin;
 933              		.loc 1 176 2 view .LVU294
 176:../Core/Src/main.c **** 	op.params[0].value.a = pin;
 934              		.loc 1 176 16 is_stmt 0 view .LVU295
 935 0020 5323     		movs	r3, #83
 936 0022 0593     		str	r3, [sp, #20]
 177:../Core/Src/main.c **** 	op.params[0].value.b = 0; // 0---unchecked, 1---correct pin, 2---incorrect pin
 937              		.loc 1 177 2 is_stmt 1 view .LVU296
 177:../Core/Src/main.c **** 	op.params[0].value.b = 0; // 0---unchecked, 1---correct pin, 2---incorrect pin
 938              		.loc 1 177 23 is_stmt 0 view .LVU297
 939 0024 0B96     		str	r6, [sp, #44]
 178:../Core/Src/main.c **** 	op.params[1].tmpref.buffer = mnemonic;
 940              		.loc 1 178 2 is_stmt 1 view .LVU298
 178:../Core/Src/main.c **** 	op.params[1].tmpref.buffer = mnemonic;
 941              		.loc 1 178 23 is_stmt 0 view .LVU299
 942 0026 0023     		movs	r3, #0
 943 0028 0C93     		str	r3, [sp, #48]
 179:../Core/Src/main.c **** 	op.params[1].tmpref.size = strlen(mnemonic);
 944              		.loc 1 179 2 is_stmt 1 view .LVU300
 179:../Core/Src/main.c **** 	op.params[1].tmpref.size = strlen(mnemonic);
 945              		.loc 1 179 29 is_stmt 0 view .LVU301
 946 002a 0D97     		str	r7, [sp, #52]
 180:../Core/Src/main.c **** 
 947              		.loc 1 180 2 is_stmt 1 view .LVU302
ARM GAS  Build/main.s 			page 35


 180:../Core/Src/main.c **** 
 948              		.loc 1 180 29 is_stmt 0 view .LVU303
 949 002c 3846     		mov	r0, r7
 950 002e FFF7FEFF 		bl	strlen
 951              	.LVL59:
 180:../Core/Src/main.c **** 
 952              		.loc 1 180 27 view .LVU304
 953 0032 0E90     		str	r0, [sp, #56]
 182:../Core/Src/main.c **** 	if (res != TEEC_SUCCESS) {
 954              		.loc 1 182 2 is_stmt 1 view .LVU305
 182:../Core/Src/main.c **** 	if (res != TEEC_SUCCESS) {
 955              		.loc 1 182 8 is_stmt 0 view .LVU306
 956 0034 28AB     		add	r3, sp, #160
 957              	.LVL60:
 182:../Core/Src/main.c **** 	if (res != TEEC_SUCCESS) {
 958              		.loc 1 182 8 view .LVU307
 959 0036 04AA     		add	r2, sp, #16
 960 0038 2946     		mov	r1, r5
 961 003a 2046     		mov	r0, r4
 962 003c FFF7FEFF 		bl	TEEC_InvokeCommand
 963              	.LVL61:
 183:../Core/Src/main.c **** 		ERR_MSG("TEEC_InvokeCommand failed with code 0x%x origin 0x%x\r\n", res, err_origin);
 964              		.loc 1 183 2 is_stmt 1 view .LVU308
 183:../Core/Src/main.c **** 		ERR_MSG("TEEC_InvokeCommand failed with code 0x%x origin 0x%x\r\n", res, err_origin);
 965              		.loc 1 183 5 is_stmt 0 view .LVU309
 966 0040 0446     		mov	r4, r0
 967 0042 30B9     		cbnz	r0, .L32
 968              	.LVL62:
 969              	.L28:
 184:../Core/Src/main.c **** 	}
 970              		.loc 1 184 3 is_stmt 1 discriminator 1 view .LVU310
 184:../Core/Src/main.c **** 	}
 971              		.loc 1 184 87 discriminator 1 view .LVU311
 186:../Core/Src/main.c **** 		ERR_MSG("Incorrect pin\r\n");
 972              		.loc 1 186 2 discriminator 1 view .LVU312
 186:../Core/Src/main.c **** 		ERR_MSG("Incorrect pin\r\n");
 973              		.loc 1 186 24 is_stmt 0 discriminator 1 view .LVU313
 974 0044 0C9B     		ldr	r3, [sp, #48]
 186:../Core/Src/main.c **** 		ERR_MSG("Incorrect pin\r\n");
 975              		.loc 1 186 5 discriminator 1 view .LVU314
 976 0046 022B     		cmp	r3, #2
 977 0048 0DD0     		beq	.L33
 978              	.L29:
 187:../Core/Src/main.c **** 	}
 979              		.loc 1 187 3 is_stmt 1 discriminator 1 view .LVU315
 187:../Core/Src/main.c **** 	}
 980              		.loc 1 187 31 discriminator 1 view .LVU316
 189:../Core/Src/main.c **** 		printf("Success!\r\n");
 981              		.loc 1 189 2 discriminator 1 view .LVU317
 189:../Core/Src/main.c **** 		printf("Success!\r\n");
 982              		.loc 1 189 5 is_stmt 0 discriminator 1 view .LVU318
 983 004a 9CB1     		cbz	r4, .L34
 984              	.L30:
 192:../Core/Src/main.c **** }
 985              		.loc 1 192 2 is_stmt 1 view .LVU319
 193:../Core/Src/main.c **** 
 986              		.loc 1 193 1 is_stmt 0 view .LVU320
ARM GAS  Build/main.s 			page 36


 987 004c 0020     		movs	r0, #0
 988 004e 23B0     		add	sp, sp, #140
 989              	.LCFI13:
 990              		.cfi_remember_state
 991              		.cfi_def_cfa_offset 20
 992              		@ sp needed
 993 0050 F0BD     		pop	{r4, r5, r6, r7, pc}
 994              	.LVL63:
 995              	.L32:
 996              	.LCFI14:
 997              		.cfi_restore_state
 184:../Core/Src/main.c **** 	}
 998              		.loc 1 184 3 is_stmt 1 view .LVU321
 184:../Core/Src/main.c **** 	}
 999              		.loc 1 184 3 view .LVU322
 1000 0052 289B     		ldr	r3, [sp, #160]
 1001 0054 0193     		str	r3, [sp, #4]
 1002 0056 0090     		str	r0, [sp]
 1003 0058 094B     		ldr	r3, .L35+4
 1004 005a B822     		movs	r2, #184
 1005 005c 0949     		ldr	r1, .L35+8
 1006 005e 0A48     		ldr	r0, .L35+12
 1007              	.LVL64:
 184:../Core/Src/main.c **** 	}
 1008              		.loc 1 184 3 is_stmt 0 view .LVU323
 1009 0060 FFF7FEFF 		bl	printf
 1010              	.LVL65:
 1011 0064 EEE7     		b	.L28
 1012              	.L33:
 187:../Core/Src/main.c **** 	}
 1013              		.loc 1 187 3 is_stmt 1 view .LVU324
 187:../Core/Src/main.c **** 	}
 1014              		.loc 1 187 3 view .LVU325
 1015 0066 064B     		ldr	r3, .L35+4
 1016 0068 BB22     		movs	r2, #187
 1017 006a 0649     		ldr	r1, .L35+8
 1018 006c 0748     		ldr	r0, .L35+16
 1019 006e FFF7FEFF 		bl	printf
 1020              	.LVL66:
 1021 0072 EAE7     		b	.L29
 1022              	.L34:
 190:../Core/Src/main.c **** 	}
 1023              		.loc 1 190 3 view .LVU326
 1024 0074 0648     		ldr	r0, .L35+20
 1025 0076 FFF7FEFF 		bl	puts
 1026              	.LVL67:
 1027 007a E7E7     		b	.L30
 1028              	.L36:
 1029              		.align	2
 1030              	.L35:
 1031 007c 00000000 		.word	.LC9
 1032 0080 00000000 		.word	__func__.3
 1033 0084 2C000000 		.word	.LC2
 1034 0088 40000000 		.word	.LC3
 1035 008c 98000000 		.word	.LC4
 1036 0090 2C000000 		.word	.LC10
 1037              		.cfi_endproc
ARM GAS  Build/main.s 			page 37


 1038              	.LFE83:
 1040              		.section	.rodata.ta_bitcoin_cmd_generate_new_masterkey.str1.4,"aMS",%progbits,1
 1041              		.align	2
 1042              	.LC11:
 1043 0000 47656E65 		.ascii	"Generating new master key...\015\000"
 1043      72617469 
 1043      6E67206E 
 1043      6577206D 
 1043      61737465 
 1044 001e 0000     		.align	2
 1045              	.LC12:
 1046 0020 0D486572 		.ascii	"\015Here's your wallet mnemonic!\015\000"
 1046      65277320 
 1046      796F7572 
 1046      2077616C 
 1046      6C657420 
 1047 003f 00       		.align	2
 1048              	.LC13:
 1049 0040 2A25732A 		.ascii	"*%s*\012\000"
 1049      0A00
 1050              		.section	.text.ta_bitcoin_cmd_generate_new_masterkey,"ax",%progbits
 1051              		.align	1
 1052              		.syntax unified
 1053              		.thumb
 1054              		.thumb_func
 1056              	ta_bitcoin_cmd_generate_new_masterkey:
 1057              	.LVL68:
 1058              	.LFB82:
 130:../Core/Src/main.c **** 	TEEC_Operation op;
 1059              		.loc 1 130 144 view -0
 1060              		.cfi_startproc
 1061              		@ args = 8, pretend = 0, frame = 128
 1062              		@ frame_needed = 0, uses_anonymous_args = 0
 130:../Core/Src/main.c **** 	TEEC_Operation op;
 1063              		.loc 1 130 144 is_stmt 0 view .LVU328
 1064 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1065              	.LCFI15:
 1066              		.cfi_def_cfa_offset 20
 1067              		.cfi_offset 4, -20
 1068              		.cfi_offset 5, -16
 1069              		.cfi_offset 6, -12
 1070              		.cfi_offset 7, -8
 1071              		.cfi_offset 14, -4
 1072 0002 A3B0     		sub	sp, sp, #140
 1073              	.LCFI16:
 1074              		.cfi_def_cfa_offset 160
 1075 0004 02AC     		add	r4, sp, #8
 1076 0006 84E80300 		stm	r4, {r0, r1}
 1077 000a 1746     		mov	r7, r2
 1078 000c 1D46     		mov	r5, r3
 1079 000e 299E     		ldr	r6, [sp, #164]
 131:../Core/Src/main.c **** 	TEEC_Result res;
 1080              		.loc 1 131 2 is_stmt 1 view .LVU329
 132:../Core/Src/main.c **** 
 1081              		.loc 1 132 2 view .LVU330
 135:../Core/Src/main.c **** 
 1082              		.loc 1 135 2 view .LVU331
ARM GAS  Build/main.s 			page 38


 1083 0010 7822     		movs	r2, #120
 1084              	.LVL69:
 135:../Core/Src/main.c **** 
 1085              		.loc 1 135 2 is_stmt 0 view .LVU332
 1086 0012 0021     		movs	r1, #0
 1087 0014 04A8     		add	r0, sp, #16
 1088 0016 FFF7FEFF 		bl	memset
 1089              	.LVL70:
 137:../Core/Src/main.c **** 	// Defining the parameter value sent to TA, the parameter are
 1090              		.loc 1 137 2 is_stmt 1 view .LVU333
 1091 001a 2448     		ldr	r0, .L47
 1092 001c FFF7FEFF 		bl	puts
 1093              	.LVL71:
 139:../Core/Src/main.c **** 	op.params[0].value.a = pin;
 1094              		.loc 1 139 2 view .LVU334
 139:../Core/Src/main.c **** 	op.params[0].value.a = pin;
 1095              		.loc 1 139 16 is_stmt 0 view .LVU335
 1096 0020 6323     		movs	r3, #99
 1097 0022 0593     		str	r3, [sp, #20]
 140:../Core/Src/main.c **** 	op.params[0].value.b = 0; // 0---unchecked, 1---correct pin, 2---incorrect pin
 1098              		.loc 1 140 2 is_stmt 1 view .LVU336
 140:../Core/Src/main.c **** 	op.params[0].value.b = 0; // 0---unchecked, 1---correct pin, 2---incorrect pin
 1099              		.loc 1 140 23 is_stmt 0 view .LVU337
 1100 0024 0B97     		str	r7, [sp, #44]
 141:../Core/Src/main.c **** 	op.params[1].tmpref.buffer = malloc(240);
 1101              		.loc 1 141 2 is_stmt 1 view .LVU338
 141:../Core/Src/main.c **** 	op.params[1].tmpref.buffer = malloc(240);
 1102              		.loc 1 141 23 is_stmt 0 view .LVU339
 1103 0026 0023     		movs	r3, #0
 1104 0028 0C93     		str	r3, [sp, #48]
 142:../Core/Src/main.c **** 	op.params[1].tmpref.size = 240;
 1105              		.loc 1 142 2 is_stmt 1 view .LVU340
 142:../Core/Src/main.c **** 	op.params[1].tmpref.size = 240;
 1106              		.loc 1 142 31 is_stmt 0 view .LVU341
 1107 002a F020     		movs	r0, #240
 1108 002c FFF7FEFF 		bl	malloc
 1109              	.LVL72:
 142:../Core/Src/main.c **** 	op.params[1].tmpref.size = 240;
 1110              		.loc 1 142 29 view .LVU342
 1111 0030 0D90     		str	r0, [sp, #52]
 143:../Core/Src/main.c **** 
 1112              		.loc 1 143 2 is_stmt 1 view .LVU343
 143:../Core/Src/main.c **** 
 1113              		.loc 1 143 27 is_stmt 0 view .LVU344
 1114 0032 F023     		movs	r3, #240
 1115 0034 0E93     		str	r3, [sp, #56]
 145:../Core/Src/main.c **** 	if (res != TEEC_SUCCESS) {
 1116              		.loc 1 145 2 is_stmt 1 view .LVU345
 145:../Core/Src/main.c **** 	if (res != TEEC_SUCCESS) {
 1117              		.loc 1 145 8 is_stmt 0 view .LVU346
 1118 0036 28AB     		add	r3, sp, #160
 1119              	.LVL73:
 145:../Core/Src/main.c **** 	if (res != TEEC_SUCCESS) {
 1120              		.loc 1 145 8 view .LVU347
 1121 0038 04AA     		add	r2, sp, #16
 1122 003a 2946     		mov	r1, r5
 1123 003c 2046     		mov	r0, r4
ARM GAS  Build/main.s 			page 39


 1124 003e FFF7FEFF 		bl	TEEC_InvokeCommand
 1125              	.LVL74:
 146:../Core/Src/main.c **** 		ERR_MSG("TEEC_InvokeCommand failed with code 0x%x origin 0x%x\r\n", res, err_origin);
 1126              		.loc 1 146 2 is_stmt 1 view .LVU348
 146:../Core/Src/main.c **** 		ERR_MSG("TEEC_InvokeCommand failed with code 0x%x origin 0x%x\r\n", res, err_origin);
 1127              		.loc 1 146 5 is_stmt 0 view .LVU349
 1128 0042 0446     		mov	r4, r0
 1129 0044 30B9     		cbnz	r0, .L44
 1130              	.LVL75:
 1131              	.L38:
 147:../Core/Src/main.c **** 	}
 1132              		.loc 1 147 3 is_stmt 1 discriminator 1 view .LVU350
 147:../Core/Src/main.c **** 	}
 1133              		.loc 1 147 87 discriminator 1 view .LVU351
 150:../Core/Src/main.c **** 		ERR_MSG("Incorrect pin\r\n");
 1134              		.loc 1 150 2 discriminator 1 view .LVU352
 150:../Core/Src/main.c **** 		ERR_MSG("Incorrect pin\r\n");
 1135              		.loc 1 150 24 is_stmt 0 discriminator 1 view .LVU353
 1136 0046 0C9B     		ldr	r3, [sp, #48]
 150:../Core/Src/main.c **** 		ERR_MSG("Incorrect pin\r\n");
 1137              		.loc 1 150 5 discriminator 1 view .LVU354
 1138 0048 022B     		cmp	r3, #2
 1139 004a 0DD0     		beq	.L45
 1140              	.L39:
 151:../Core/Src/main.c **** 	}
 1141              		.loc 1 151 3 is_stmt 1 discriminator 1 view .LVU355
 151:../Core/Src/main.c **** 	}
 1142              		.loc 1 151 31 discriminator 1 view .LVU356
 154:../Core/Src/main.c **** 		printf("\rHere's your wallet mnemonic!\r\n");
 1143              		.loc 1 154 2 discriminator 1 view .LVU357
 154:../Core/Src/main.c **** 		printf("\rHere's your wallet mnemonic!\r\n");
 1144              		.loc 1 154 5 is_stmt 0 discriminator 1 view .LVU358
 1145 004c 9CB1     		cbz	r4, .L46
 1146              	.LVL76:
 1147              	.L40:
 164:../Core/Src/main.c **** }
 1148              		.loc 1 164 2 is_stmt 1 view .LVU359
 165:../Core/Src/main.c **** 
 1149              		.loc 1 165 1 is_stmt 0 view .LVU360
 1150 004e 0020     		movs	r0, #0
 1151 0050 23B0     		add	sp, sp, #140
 1152              	.LCFI17:
 1153              		.cfi_remember_state
 1154              		.cfi_def_cfa_offset 20
 1155              		@ sp needed
 1156 0052 F0BD     		pop	{r4, r5, r6, r7, pc}
 1157              	.LVL77:
 1158              	.L44:
 1159              	.LCFI18:
 1160              		.cfi_restore_state
 147:../Core/Src/main.c **** 	}
 1161              		.loc 1 147 3 is_stmt 1 view .LVU361
 147:../Core/Src/main.c **** 	}
 1162              		.loc 1 147 3 view .LVU362
 1163 0054 289B     		ldr	r3, [sp, #160]
 1164 0056 0193     		str	r3, [sp, #4]
 1165 0058 0090     		str	r0, [sp]
ARM GAS  Build/main.s 			page 40


 1166 005a 154B     		ldr	r3, .L47+4
 1167 005c 9322     		movs	r2, #147
 1168 005e 1549     		ldr	r1, .L47+8
 1169 0060 1548     		ldr	r0, .L47+12
 1170              	.LVL78:
 147:../Core/Src/main.c **** 	}
 1171              		.loc 1 147 3 is_stmt 0 view .LVU363
 1172 0062 FFF7FEFF 		bl	printf
 1173              	.LVL79:
 1174 0066 EEE7     		b	.L38
 1175              	.L45:
 151:../Core/Src/main.c **** 	}
 1176              		.loc 1 151 3 is_stmt 1 view .LVU364
 151:../Core/Src/main.c **** 	}
 1177              		.loc 1 151 3 view .LVU365
 1178 0068 114B     		ldr	r3, .L47+4
 1179 006a 9722     		movs	r2, #151
 1180 006c 1149     		ldr	r1, .L47+8
 1181 006e 1348     		ldr	r0, .L47+16
 1182 0070 FFF7FEFF 		bl	printf
 1183              	.LVL80:
 1184 0074 EAE7     		b	.L39
 1185              	.L46:
 155:../Core/Src/main.c **** 		printf("*%s*\n", (char*)op.params[1].tmpref.buffer);
 1186              		.loc 1 155 3 view .LVU366
 1187 0076 1248     		ldr	r0, .L47+20
 1188 0078 FFF7FEFF 		bl	puts
 1189              	.LVL81:
 156:../Core/Src/main.c **** 		for (uint8_t i = 0; i < strlen(op.params[1].tmpref.buffer); i++)
 1190              		.loc 1 156 3 view .LVU367
 1191 007c 0D99     		ldr	r1, [sp, #52]
 1192 007e 1148     		ldr	r0, .L47+24
 1193 0080 FFF7FEFF 		bl	printf
 1194              	.LVL82:
 157:../Core/Src/main.c **** 		{
 1195              		.loc 1 157 3 view .LVU368
 1196              	.LBB9:
 157:../Core/Src/main.c **** 		{
 1197              		.loc 1 157 8 view .LVU369
 157:../Core/Src/main.c **** 		{
 1198              		.loc 1 157 3 is_stmt 0 view .LVU370
 1199 0084 03E0     		b	.L41
 1200              	.LVL83:
 1201              	.L42:
 159:../Core/Src/main.c **** 		}
 1202              		.loc 1 159 4 is_stmt 1 discriminator 3 view .LVU371
 159:../Core/Src/main.c **** 		}
 1203              		.loc 1 159 18 is_stmt 0 discriminator 3 view .LVU372
 1204 0086 2B5D     		ldrb	r3, [r5, r4]	@ zero_extendqisi2
 159:../Core/Src/main.c **** 		}
 1205              		.loc 1 159 16 discriminator 3 view .LVU373
 1206 0088 3355     		strb	r3, [r6, r4]
 157:../Core/Src/main.c **** 		{
 1207              		.loc 1 157 64 is_stmt 1 discriminator 3 view .LVU374
 1208 008a 0134     		adds	r4, r4, #1
 1209              	.LVL84:
 157:../Core/Src/main.c **** 		{
ARM GAS  Build/main.s 			page 41


 1210              		.loc 1 157 64 is_stmt 0 discriminator 3 view .LVU375
 1211 008c E4B2     		uxtb	r4, r4
 1212              	.LVL85:
 1213              	.L41:
 157:../Core/Src/main.c **** 		{
 1214              		.loc 1 157 25 is_stmt 1 discriminator 1 view .LVU376
 157:../Core/Src/main.c **** 		{
 1215              		.loc 1 157 53 is_stmt 0 discriminator 1 view .LVU377
 1216 008e 0D9D     		ldr	r5, [sp, #52]
 157:../Core/Src/main.c **** 		{
 1217              		.loc 1 157 27 discriminator 1 view .LVU378
 1218 0090 2846     		mov	r0, r5
 1219 0092 FFF7FEFF 		bl	strlen
 1220              	.LVL86:
 157:../Core/Src/main.c **** 		{
 1221              		.loc 1 157 25 discriminator 1 view .LVU379
 1222 0096 8442     		cmp	r4, r0
 1223 0098 F5D3     		bcc	.L42
 1224              	.LBE9:
 161:../Core/Src/main.c **** 		memset(op.params[1].tmpref.buffer, 0, op.params[1].tmpref.size);
 1225              		.loc 1 161 3 is_stmt 1 view .LVU380
 1226 009a 0A20     		movs	r0, #10
 1227 009c FFF7FEFF 		bl	putchar
 1228              	.LVL87:
 162:../Core/Src/main.c **** 	}
 1229              		.loc 1 162 3 view .LVU381
 1230 00a0 0E9A     		ldr	r2, [sp, #56]
 1231 00a2 0021     		movs	r1, #0
 1232 00a4 0D98     		ldr	r0, [sp, #52]
 1233 00a6 FFF7FEFF 		bl	memset
 1234              	.LVL88:
 1235 00aa D0E7     		b	.L40
 1236              	.L48:
 1237              		.align	2
 1238              	.L47:
 1239 00ac 00000000 		.word	.LC11
 1240 00b0 00000000 		.word	__func__.4
 1241 00b4 2C000000 		.word	.LC2
 1242 00b8 40000000 		.word	.LC3
 1243 00bc 98000000 		.word	.LC4
 1244 00c0 20000000 		.word	.LC12
 1245 00c4 40000000 		.word	.LC13
 1246              		.cfi_endproc
 1247              	.LFE82:
 1249              		.section	.rodata.print_uint8.str1.4,"aMS",%progbits,1
 1250              		.align	2
 1251              	.LC14:
 1252 0000 257800   		.ascii	"%x\000"
 1253              		.section	.text.print_uint8,"ax",%progbits
 1254              		.align	1
 1255              		.syntax unified
 1256              		.thumb
 1257              		.thumb_func
 1259              	print_uint8:
 1260              	.LVL89:
 1261              	.LFB81:
 110:../Core/Src/main.c **** 	uint32_t i;
ARM GAS  Build/main.s 			page 42


 1262              		.loc 1 110 60 view -0
 1263              		.cfi_startproc
 1264              		@ args = 0, pretend = 0, frame = 0
 1265              		@ frame_needed = 0, uses_anonymous_args = 0
 110:../Core/Src/main.c **** 	uint32_t i;
 1266              		.loc 1 110 60 is_stmt 0 view .LVU383
 1267 0000 70B5     		push	{r4, r5, r6, lr}
 1268              	.LCFI19:
 1269              		.cfi_def_cfa_offset 16
 1270              		.cfi_offset 4, -16
 1271              		.cfi_offset 5, -12
 1272              		.cfi_offset 6, -8
 1273              		.cfi_offset 14, -4
 1274 0002 0646     		mov	r6, r0
 1275 0004 0D46     		mov	r5, r1
 111:../Core/Src/main.c **** 	for(i=0; i<array_len; i++){
 1276              		.loc 1 111 2 is_stmt 1 view .LVU384
 112:../Core/Src/main.c **** 		printf("%x", array[i]);
 1277              		.loc 1 112 2 view .LVU385
 1278              	.LVL90:
 112:../Core/Src/main.c **** 		printf("%x", array[i]);
 1279              		.loc 1 112 7 is_stmt 0 view .LVU386
 1280 0006 0024     		movs	r4, #0
 112:../Core/Src/main.c **** 		printf("%x", array[i]);
 1281              		.loc 1 112 2 view .LVU387
 1282 0008 04E0     		b	.L50
 1283              	.LVL91:
 1284              	.L51:
 113:../Core/Src/main.c **** 	}
 1285              		.loc 1 113 3 is_stmt 1 discriminator 3 view .LVU388
 1286 000a 315D     		ldrb	r1, [r6, r4]	@ zero_extendqisi2
 1287 000c 0448     		ldr	r0, .L53
 1288 000e FFF7FEFF 		bl	printf
 1289              	.LVL92:
 112:../Core/Src/main.c **** 		printf("%x", array[i]);
 1290              		.loc 1 112 25 discriminator 3 view .LVU389
 1291 0012 0134     		adds	r4, r4, #1
 1292              	.LVL93:
 1293              	.L50:
 112:../Core/Src/main.c **** 		printf("%x", array[i]);
 1294              		.loc 1 112 12 discriminator 1 view .LVU390
 1295 0014 AC42     		cmp	r4, r5
 1296 0016 F8D3     		bcc	.L51
 115:../Core/Src/main.c **** }
 1297              		.loc 1 115 2 view .LVU391
 1298 0018 0A20     		movs	r0, #10
 1299 001a FFF7FEFF 		bl	putchar
 1300              	.LVL94:
 116:../Core/Src/main.c **** 
 1301              		.loc 1 116 1 is_stmt 0 view .LVU392
 1302 001e 70BD     		pop	{r4, r5, r6, pc}
 1303              	.LVL95:
 1304              	.L54:
 116:../Core/Src/main.c **** 
 1305              		.loc 1 116 1 view .LVU393
 1306              		.align	2
 1307              	.L53:
ARM GAS  Build/main.s 			page 43


 1308 0020 00000000 		.word	.LC14
 1309              		.cfi_endproc
 1310              	.LFE81:
 1312              		.section	.rodata.ta_bitcoin_cmd_get_bitcoin_address.str1.4,"aMS",%progbits,1
 1313              		.align	2
 1314              	.LC15:
 1315 0000 47657474 		.ascii	"Getting bitcoin address...\000"
 1315      696E6720 
 1315      62697463 
 1315      6F696E20 
 1315      61646472 
 1316 001b 00       		.align	2
 1317              	.LC16:
 1318 001c 1B5B303B 		.ascii	"\033[0;31mERROR: %s:%d:%s(): \"TEEC_InvokeCommand f"
 1318      33316D45 
 1318      52524F52 
 1318      3A202573 
 1318      3A25643A 
 1319 004b 61696C65 		.ascii	"ailed with code 0x%x origin 0x%x\"\015\012\000"
 1319      64207769 
 1319      74682063 
 1319      6F646520 
 1319      30782578 
 1320 006f 00       		.align	2
 1321              	.LC17:
 1322 0070 1B5B303B 		.ascii	"\033[0;31mERROR: %s:%d:%s(): \"Incorrect pin\"\015\012"
 1322      33316D45 
 1322      52524F52 
 1322      3A202573 
 1322      3A25643A 
 1323 009b 00       		.ascii	"\000"
 1324              		.section	.text.ta_bitcoin_cmd_get_bitcoin_address,"ax",%progbits
 1325              		.align	1
 1326              		.syntax unified
 1327              		.thumb
 1328              		.thumb_func
 1330              	ta_bitcoin_cmd_get_bitcoin_address:
 1331              	.LVL96:
 1332              	.LFB87:
 323:../Core/Src/main.c **** 	TEEC_Operation op;
 1333              		.loc 1 323 146 is_stmt 1 view -0
 1334              		.cfi_startproc
 1335              		@ args = 8, pretend = 0, frame = 128
 1336              		@ frame_needed = 0, uses_anonymous_args = 0
 323:../Core/Src/main.c **** 	TEEC_Operation op;
 1337              		.loc 1 323 146 is_stmt 0 view .LVU395
 1338 0000 70B5     		push	{r4, r5, r6, lr}
 1339              	.LCFI20:
 1340              		.cfi_def_cfa_offset 16
 1341              		.cfi_offset 4, -16
 1342              		.cfi_offset 5, -12
 1343              		.cfi_offset 6, -8
 1344              		.cfi_offset 14, -4
 1345 0002 A2B0     		sub	sp, sp, #136
 1346              	.LCFI21:
 1347              		.cfi_def_cfa_offset 152
 1348 0004 02AC     		add	r4, sp, #8
ARM GAS  Build/main.s 			page 44


 1349 0006 84E80300 		stm	r4, {r0, r1}
 1350 000a 1646     		mov	r6, r2
 1351 000c 1D46     		mov	r5, r3
 324:../Core/Src/main.c **** 	TEEC_Result res;
 1352              		.loc 1 324 2 is_stmt 1 view .LVU396
 325:../Core/Src/main.c **** 
 1353              		.loc 1 325 2 view .LVU397
 328:../Core/Src/main.c **** 
 1354              		.loc 1 328 2 view .LVU398
 1355 000e 7822     		movs	r2, #120
 1356              	.LVL97:
 328:../Core/Src/main.c **** 
 1357              		.loc 1 328 2 is_stmt 0 view .LVU399
 1358 0010 0021     		movs	r1, #0
 1359 0012 04A8     		add	r0, sp, #16
 1360 0014 FFF7FEFF 		bl	memset
 1361              	.LVL98:
 330:../Core/Src/main.c **** 	// Defining the parameter value sent to TA, the parameter are
 1362              		.loc 1 330 2 is_stmt 1 view .LVU400
 1363 0018 1A48     		ldr	r0, .L61
 1364 001a FFF7FEFF 		bl	puts
 1365              	.LVL99:
 332:../Core/Src/main.c **** 	op.params[0].value.a = pin;
 1366              		.loc 1 332 2 view .LVU401
 332:../Core/Src/main.c **** 	op.params[0].value.a = pin;
 1367              		.loc 1 332 16 is_stmt 0 view .LVU402
 1368 001e 40F21363 		movw	r3, #1555
 1369 0022 0593     		str	r3, [sp, #20]
 333:../Core/Src/main.c **** 	op.params[0].value.b = 0; // 0---unchecked, 1---correct pin, 2---incorrect pin
 1370              		.loc 1 333 2 is_stmt 1 view .LVU403
 333:../Core/Src/main.c **** 	op.params[0].value.b = 0; // 0---unchecked, 1---correct pin, 2---incorrect pin
 1371              		.loc 1 333 23 is_stmt 0 view .LVU404
 1372 0024 0B96     		str	r6, [sp, #44]
 334:../Core/Src/main.c **** 	op.params[1].value.a = account_id;
 1373              		.loc 1 334 2 is_stmt 1 view .LVU405
 334:../Core/Src/main.c **** 	op.params[1].value.a = account_id;
 1374              		.loc 1 334 23 is_stmt 0 view .LVU406
 1375 0026 0023     		movs	r3, #0
 1376 0028 0C93     		str	r3, [sp, #48]
 335:../Core/Src/main.c **** 	op.params[2].tmpref.buffer = malloc(25);
 1377              		.loc 1 335 2 is_stmt 1 view .LVU407
 335:../Core/Src/main.c **** 	op.params[2].tmpref.buffer = malloc(25);
 1378              		.loc 1 335 23 is_stmt 0 view .LVU408
 1379 002a 279B     		ldr	r3, [sp, #156]
 1380 002c 1293     		str	r3, [sp, #72]
 336:../Core/Src/main.c **** 	op.params[2].tmpref.size = 25;
 1381              		.loc 1 336 2 is_stmt 1 view .LVU409
 336:../Core/Src/main.c **** 	op.params[2].tmpref.size = 25;
 1382              		.loc 1 336 31 is_stmt 0 view .LVU410
 1383 002e 1920     		movs	r0, #25
 1384 0030 FFF7FEFF 		bl	malloc
 1385              	.LVL100:
 336:../Core/Src/main.c **** 	op.params[2].tmpref.size = 25;
 1386              		.loc 1 336 29 view .LVU411
 1387 0034 1490     		str	r0, [sp, #80]
 337:../Core/Src/main.c **** 
 1388              		.loc 1 337 2 is_stmt 1 view .LVU412
ARM GAS  Build/main.s 			page 45


 337:../Core/Src/main.c **** 
 1389              		.loc 1 337 27 is_stmt 0 view .LVU413
 1390 0036 1923     		movs	r3, #25
 1391 0038 1593     		str	r3, [sp, #84]
 339:../Core/Src/main.c **** 	if (res != TEEC_SUCCESS) {
 1392              		.loc 1 339 2 is_stmt 1 view .LVU414
 339:../Core/Src/main.c **** 	if (res != TEEC_SUCCESS) {
 1393              		.loc 1 339 8 is_stmt 0 view .LVU415
 1394 003a 26AB     		add	r3, sp, #152
 1395              	.LVL101:
 339:../Core/Src/main.c **** 	if (res != TEEC_SUCCESS) {
 1396              		.loc 1 339 8 view .LVU416
 1397 003c 04AA     		add	r2, sp, #16
 1398 003e 2946     		mov	r1, r5
 1399 0040 2046     		mov	r0, r4
 1400 0042 FFF7FEFF 		bl	TEEC_InvokeCommand
 1401              	.LVL102:
 340:../Core/Src/main.c **** 		ERR_MSG("TEEC_InvokeCommand failed with code 0x%x origin 0x%x", res, err_origin);
 1402              		.loc 1 340 2 is_stmt 1 view .LVU417
 340:../Core/Src/main.c **** 		ERR_MSG("TEEC_InvokeCommand failed with code 0x%x origin 0x%x", res, err_origin);
 1403              		.loc 1 340 5 is_stmt 0 view .LVU418
 1404 0046 48B9     		cbnz	r0, .L59
 1405              	.LVL103:
 1406              	.L56:
 341:../Core/Src/main.c **** 	}
 1407              		.loc 1 341 3 is_stmt 1 discriminator 1 view .LVU419
 341:../Core/Src/main.c **** 	}
 1408              		.loc 1 341 83 discriminator 1 view .LVU420
 343:../Core/Src/main.c **** 		ERR_MSG("Incorrect pin");
 1409              		.loc 1 343 2 discriminator 1 view .LVU421
 343:../Core/Src/main.c **** 		ERR_MSG("Incorrect pin");
 1410              		.loc 1 343 24 is_stmt 0 discriminator 1 view .LVU422
 1411 0048 0C9B     		ldr	r3, [sp, #48]
 343:../Core/Src/main.c **** 		ERR_MSG("Incorrect pin");
 1412              		.loc 1 343 5 discriminator 1 view .LVU423
 1413 004a 022B     		cmp	r3, #2
 1414 004c 11D0     		beq	.L60
 1415              	.L57:
 344:../Core/Src/main.c **** 	}
 1416              		.loc 1 344 3 is_stmt 1 discriminator 1 view .LVU424
 344:../Core/Src/main.c **** 	}
 1417              		.loc 1 344 27 discriminator 1 view .LVU425
 348:../Core/Src/main.c **** 	return TEEC_SUCCESS;
 1418              		.loc 1 348 2 discriminator 1 view .LVU426
 1419 004e 1921     		movs	r1, #25
 1420 0050 1498     		ldr	r0, [sp, #80]
 1421 0052 FFF7FEFF 		bl	print_uint8
 1422              	.LVL104:
 349:../Core/Src/main.c **** }
 1423              		.loc 1 349 2 discriminator 1 view .LVU427
 350:../Core/Src/main.c **** 
 1424              		.loc 1 350 1 is_stmt 0 discriminator 1 view .LVU428
 1425 0056 0020     		movs	r0, #0
 1426 0058 22B0     		add	sp, sp, #136
 1427              	.LCFI22:
 1428              		.cfi_remember_state
 1429              		.cfi_def_cfa_offset 16
ARM GAS  Build/main.s 			page 46


 1430              		@ sp needed
 1431 005a 70BD     		pop	{r4, r5, r6, pc}
 1432              	.LVL105:
 1433              	.L59:
 1434              	.LCFI23:
 1435              		.cfi_restore_state
 341:../Core/Src/main.c **** 	}
 1436              		.loc 1 341 3 is_stmt 1 view .LVU429
 341:../Core/Src/main.c **** 	}
 1437              		.loc 1 341 3 view .LVU430
 1438 005c 269A     		ldr	r2, [sp, #152]
 1439 005e 0192     		str	r2, [sp, #4]
 1440 0060 0090     		str	r0, [sp]
 1441 0062 094B     		ldr	r3, .L61+4
 1442 0064 40F25512 		movw	r2, #341
 1443 0068 0849     		ldr	r1, .L61+8
 1444 006a 0948     		ldr	r0, .L61+12
 1445              	.LVL106:
 341:../Core/Src/main.c **** 	}
 1446              		.loc 1 341 3 is_stmt 0 view .LVU431
 1447 006c FFF7FEFF 		bl	printf
 1448              	.LVL107:
 341:../Core/Src/main.c **** 	}
 1449              		.loc 1 341 3 view .LVU432
 1450 0070 EAE7     		b	.L56
 1451              	.L60:
 344:../Core/Src/main.c **** 	}
 1452              		.loc 1 344 3 is_stmt 1 view .LVU433
 344:../Core/Src/main.c **** 	}
 1453              		.loc 1 344 3 view .LVU434
 1454 0072 054B     		ldr	r3, .L61+4
 1455 0074 4FF4AC72 		mov	r2, #344
 1456 0078 0449     		ldr	r1, .L61+8
 1457 007a 0648     		ldr	r0, .L61+16
 1458 007c FFF7FEFF 		bl	printf
 1459              	.LVL108:
 1460 0080 E5E7     		b	.L57
 1461              	.L62:
 1462 0082 00BF     		.align	2
 1463              	.L61:
 1464 0084 00000000 		.word	.LC15
 1465 0088 00000000 		.word	__func__.0
 1466 008c 2C000000 		.word	.LC2
 1467 0090 1C000000 		.word	.LC16
 1468 0094 70000000 		.word	.LC17
 1469              		.cfi_endproc
 1470              	.LFE87:
 1472              		.section	.rodata.ta_bitcoin_cmd_issue_transactions.str1.4,"aMS",%progbits,1
 1473              		.align	2
 1474              	.LC21:
 1475 0000 53656E64 		.ascii	"Sending transaction for signing.\000"
 1475      696E6720 
 1475      7472616E 
 1475      73616374 
 1475      696F6E20 
 1476 0021 000000   		.align	2
 1477              	.LC22:
ARM GAS  Build/main.s 			page 47


 1478 0024 41747465 		.ascii	"Attempt to issue transactions from %d child account"
 1478      6D707420 
 1478      746F2069 
 1478      73737565 
 1478      20747261 
 1479 0057 2E2E2E0A 		.ascii	"...\012\000"
 1479      00
 1480              		.align	2
 1481              	.LC23:
 1482 005c 52657472 		.ascii	"Retrieved signed transaction\000"
 1482      69657665 
 1482      64207369 
 1482      676E6564 
 1482      20747261 
 1483 0079 000000   		.align	2
 1484              	.LC24:
 1485 007c 25303278 		.ascii	"%02x\000"
 1485      00
 1486 0081 000000   		.align	2
 1487              	.LC19:
 1488 0084 76A9462C 		.ascii	"v\251F,\",\272\254@\237w;L\016\312\231\031\004\302\273"
 1488      222CBAAC 
 1488      409F773B 
 1488      4C0ECA99 
 1488      1904C2BB 
 1489 0098 20738800 		.ascii	" s\210\000"
 1490              		.section	.text.ta_bitcoin_cmd_issue_transactions,"ax",%progbits
 1491              		.align	1
 1492              		.syntax unified
 1493              		.thumb
 1494              		.thumb_func
 1496              	ta_bitcoin_cmd_issue_transactions:
 1497              	.LVL109:
 1498              	.LFB86:
 253:../Core/Src/main.c **** 
 1499              		.loc 1 253 145 view -0
 1500              		.cfi_startproc
 1501              		@ args = 8, pretend = 0, frame = 192
 1502              		@ frame_needed = 0, uses_anonymous_args = 0
 253:../Core/Src/main.c **** 
 1503              		.loc 1 253 145 is_stmt 0 view .LVU436
 1504 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 1505              	.LCFI24:
 1506              		.cfi_def_cfa_offset 32
 1507              		.cfi_offset 4, -32
 1508              		.cfi_offset 5, -28
 1509              		.cfi_offset 6, -24
 1510              		.cfi_offset 7, -20
 1511              		.cfi_offset 8, -16
 1512              		.cfi_offset 9, -12
 1513              		.cfi_offset 10, -8
 1514              		.cfi_offset 14, -4
 1515 0004 B2B0     		sub	sp, sp, #200
 1516              	.LCFI25:
 1517              		.cfi_def_cfa_offset 232
 1518 0006 02AE     		add	r6, sp, #8
 1519 0008 86E80300 		stm	r6, {r0, r1}
ARM GAS  Build/main.s 			page 48


 1520 000c 9046     		mov	r8, r2
 1521 000e 1F46     		mov	r7, r3
 1522 0010 DDF8EC90 		ldr	r9, [sp, #236]
 255:../Core/Src/main.c **** 	TEEC_Result res;
 1523              		.loc 1 255 2 is_stmt 1 view .LVU437
 256:../Core/Src/main.c **** 
 1524              		.loc 1 256 2 view .LVU438
 259:../Core/Src/main.c **** 							0x91,0x16,0x3c,0xad,0xdb,0x76,0x57,0x5f,0xf5,0x5f,0x62,
 1525              		.loc 1 259 2 view .LVU439
 259:../Core/Src/main.c **** 							0x91,0x16,0x3c,0xad,0xdb,0x76,0x57,0x5f,0xf5,0x5f,0x62,
 1526              		.loc 1 259 16 is_stmt 0 view .LVU440
 1527 0014 DFF818C1 		ldr	ip, .L71
 1528 0018 0CAC     		add	r4, sp, #48
 1529 001a 6546     		mov	r5, ip
 1530 001c 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1531              	.LVL110:
 259:../Core/Src/main.c **** 							0x91,0x16,0x3c,0xad,0xdb,0x76,0x57,0x5f,0xf5,0x5f,0x62,
 1532              		.loc 1 259 16 view .LVU441
 1533 001e 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1534 0020 95E80F00 		ldm	r5, {r0, r1, r2, r3}
 1535 0024 84E80F00 		stm	r4, {r0, r1, r2, r3}
 263:../Core/Src/main.c **** 							  0x9f,0x77,0x3b,0x4c,0x0e,0xca,0x99,0x19,0x04,0xc2,0xbb,
 1536              		.loc 1 263 2 is_stmt 1 view .LVU442
 263:../Core/Src/main.c **** 							  0x9f,0x77,0x3b,0x4c,0x0e,0xca,0x99,0x19,0x04,0xc2,0xbb,
 1537              		.loc 1 263 16 is_stmt 0 view .LVU443
 1538 0028 06AC     		add	r4, sp, #24
 1539 002a 424D     		ldr	r5, .L71+4
 1540 002c 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1541 002e 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1542 0030 95E80300 		ldm	r5, {r0, r1}
 1543 0034 44F8040B 		str	r0, [r4], #4
 1544 0038 24F8021B 		strh	r1, [r4], #2	@ movhi
 1545 003c 090C     		lsrs	r1, r1, #16
 1546 003e 2170     		strb	r1, [r4]
 269:../Core/Src/main.c **** 	uint8_t *out;
 1547              		.loc 1 269 2 is_stmt 1 view .LVU444
 269:../Core/Src/main.c **** 	uint8_t *out;
 1548              		.loc 1 269 16 is_stmt 0 view .LVU445
 1549 0040 04AD     		add	r5, sp, #16
 1550 0042 0CF1200C 		add	ip, ip, #32
 1551 0046 9CE80300 		ldm	ip, {r0, r1}
 1552 004a 85E80300 		stm	r5, {r0, r1}
 270:../Core/Src/main.c **** 
 1553              		.loc 1 270 2 is_stmt 1 view .LVU446
 272:../Core/Src/main.c **** 	OUTTX outtx = NULL;
 1554              		.loc 1 272 2 view .LVU447
 1555              	.LVL111:
 273:../Core/Src/main.c **** 	TX tx = NULL;
 1556              		.loc 1 273 2 view .LVU448
 274:../Core/Src/main.c **** 	TXBUF buf = NULL;
 1557              		.loc 1 274 2 view .LVU449
 275:../Core/Src/main.c **** 
 1558              		.loc 1 275 2 view .LVU450
 277:../Core/Src/main.c **** 	outtx = new_outtx(txval, tmpsig);
 1559              		.loc 1 277 2 view .LVU451
 277:../Core/Src/main.c **** 	outtx = new_outtx(txval, tmpsig);
 1560              		.loc 1 277 9 is_stmt 0 view .LVU452
ARM GAS  Build/main.s 			page 49


 1561 004e 06A9     		add	r1, sp, #24
 1562 0050 0CA8     		add	r0, sp, #48
 1563 0052 FFF7FEFF 		bl	new_intx
 1564              	.LVL112:
 277:../Core/Src/main.c **** 	outtx = new_outtx(txval, tmpsig);
 1565              		.loc 1 277 9 view .LVU453
 1566 0056 0446     		mov	r4, r0
 1567              	.LVL113:
 278:../Core/Src/main.c **** 	tx = new_tx(intx, outtx);
 1568              		.loc 1 278 2 is_stmt 1 view .LVU454
 278:../Core/Src/main.c **** 	tx = new_tx(intx, outtx);
 1569              		.loc 1 278 10 is_stmt 0 view .LVU455
 1570 0058 06A9     		add	r1, sp, #24
 1571 005a 2846     		mov	r0, r5
 1572              	.LVL114:
 278:../Core/Src/main.c **** 	tx = new_tx(intx, outtx);
 1573              		.loc 1 278 10 view .LVU456
 1574 005c FFF7FEFF 		bl	new_outtx
 1575              	.LVL115:
 1576 0060 0146     		mov	r1, r0
 1577              	.LVL116:
 279:../Core/Src/main.c **** 	buf = new_txbuf();
 1578              		.loc 1 279 2 is_stmt 1 view .LVU457
 279:../Core/Src/main.c **** 	buf = new_txbuf();
 1579              		.loc 1 279 7 is_stmt 0 view .LVU458
 1580 0062 2046     		mov	r0, r4
 1581              	.LVL117:
 279:../Core/Src/main.c **** 	buf = new_txbuf();
 1582              		.loc 1 279 7 view .LVU459
 1583 0064 FFF7FEFF 		bl	new_tx
 1584              	.LVL118:
 279:../Core/Src/main.c **** 	buf = new_txbuf();
 1585              		.loc 1 279 7 view .LVU460
 1586 0068 8246     		mov	r10, r0
 1587              	.LVL119:
 280:../Core/Src/main.c **** 	out = malloc(72);
 1588              		.loc 1 280 2 is_stmt 1 view .LVU461
 280:../Core/Src/main.c **** 	out = malloc(72);
 1589              		.loc 1 280 8 is_stmt 0 view .LVU462
 1590 006a FFF7FEFF 		bl	new_txbuf
 1591              	.LVL120:
 280:../Core/Src/main.c **** 	out = malloc(72);
 1592              		.loc 1 280 8 view .LVU463
 1593 006e 0446     		mov	r4, r0
 1594              	.LVL121:
 281:../Core/Src/main.c **** 
 1595              		.loc 1 281 2 is_stmt 1 view .LVU464
 281:../Core/Src/main.c **** 
 1596              		.loc 1 281 8 is_stmt 0 view .LVU465
 1597 0070 4820     		movs	r0, #72
 1598              	.LVL122:
 281:../Core/Src/main.c **** 
 1599              		.loc 1 281 8 view .LVU466
 1600 0072 FFF7FEFF 		bl	malloc
 1601              	.LVL123:
 1602 0076 0546     		mov	r5, r0
 1603              	.LVL124:
ARM GAS  Build/main.s 			page 50


 284:../Core/Src/main.c **** 	//print_ser_bytes(buf);
 1604              		.loc 1 284 2 is_stmt 1 view .LVU467
 1605 0078 2146     		mov	r1, r4
 1606 007a 5046     		mov	r0, r10
 1607              	.LVL125:
 284:../Core/Src/main.c **** 	//print_ser_bytes(buf);
 1608              		.loc 1 284 2 is_stmt 0 view .LVU468
 1609 007c FFF7FEFF 		bl	serialize_tx
 1610              	.LVL126:
 286:../Core/Src/main.c **** 
 1611              		.loc 1 286 2 is_stmt 1 view .LVU469
 1612 0080 2D48     		ldr	r0, .L71+8
 1613 0082 FFF7FEFF 		bl	puts
 1614              	.LVL127:
 289:../Core/Src/main.c **** 
 1615              		.loc 1 289 2 view .LVU470
 1616 0086 7822     		movs	r2, #120
 1617 0088 0021     		movs	r1, #0
 1618 008a 14A8     		add	r0, sp, #80
 1619 008c FFF7FEFF 		bl	memset
 1620              	.LVL128:
 291:../Core/Src/main.c **** 	// Defining the parameter value sent to TA, the parameter are
 1621              		.loc 1 291 2 view .LVU471
 1622 0090 4946     		mov	r1, r9
 1623 0092 2A48     		ldr	r0, .L71+12
 1624 0094 FFF7FEFF 		bl	printf
 1625              	.LVL129:
 293:../Core/Src/main.c **** 	op.params[0].value.a = pin;
 1626              		.loc 1 293 2 view .LVU472
 293:../Core/Src/main.c **** 	op.params[0].value.a = pin;
 1627              		.loc 1 293 16 is_stmt 0 view .LVU473
 1628 0098 41F25363 		movw	r3, #5715
 1629 009c 1593     		str	r3, [sp, #84]
 294:../Core/Src/main.c **** 	op.params[0].value.b = 0; // 0---unchecked, 1---correct pin, 2---incorrect pin
 1630              		.loc 1 294 2 is_stmt 1 view .LVU474
 294:../Core/Src/main.c **** 	op.params[0].value.b = 0; // 0---unchecked, 1---correct pin, 2---incorrect pin
 1631              		.loc 1 294 23 is_stmt 0 view .LVU475
 1632 009e CDF86C80 		str	r8, [sp, #108]
 295:../Core/Src/main.c **** 	op.params[1].tmpref.buffer = get_txbuf_data(buf);
 1633              		.loc 1 295 2 is_stmt 1 view .LVU476
 295:../Core/Src/main.c **** 	op.params[1].tmpref.buffer = get_txbuf_data(buf);
 1634              		.loc 1 295 23 is_stmt 0 view .LVU477
 1635 00a2 0023     		movs	r3, #0
 1636 00a4 1C93     		str	r3, [sp, #112]
 296:../Core/Src/main.c **** 	op.params[1].tmpref.size = get_txbuf_next(buf);
 1637              		.loc 1 296 2 is_stmt 1 view .LVU478
 296:../Core/Src/main.c **** 	op.params[1].tmpref.size = get_txbuf_next(buf);
 1638              		.loc 1 296 31 is_stmt 0 view .LVU479
 1639 00a6 2046     		mov	r0, r4
 1640 00a8 FFF7FEFF 		bl	get_txbuf_data
 1641              	.LVL130:
 296:../Core/Src/main.c **** 	op.params[1].tmpref.size = get_txbuf_next(buf);
 1642              		.loc 1 296 29 view .LVU480
 1643 00ac 1D90     		str	r0, [sp, #116]
 297:../Core/Src/main.c **** 	op.params[2].tmpref.buffer = out;
 1644              		.loc 1 297 2 is_stmt 1 view .LVU481
 297:../Core/Src/main.c **** 	op.params[2].tmpref.buffer = out;
ARM GAS  Build/main.s 			page 51


 1645              		.loc 1 297 29 is_stmt 0 view .LVU482
 1646 00ae 2046     		mov	r0, r4
 1647 00b0 FFF7FEFF 		bl	get_txbuf_next
 1648              	.LVL131:
 297:../Core/Src/main.c **** 	op.params[2].tmpref.buffer = out;
 1649              		.loc 1 297 27 view .LVU483
 1650 00b4 1E90     		str	r0, [sp, #120]
 298:../Core/Src/main.c **** 	op.params[2].tmpref.size = 72;
 1651              		.loc 1 298 2 is_stmt 1 view .LVU484
 298:../Core/Src/main.c **** 	op.params[2].tmpref.size = 72;
 1652              		.loc 1 298 29 is_stmt 0 view .LVU485
 1653 00b6 2495     		str	r5, [sp, #144]
 299:../Core/Src/main.c **** 	op.params[3].value.a = account_id;
 1654              		.loc 1 299 2 is_stmt 1 view .LVU486
 299:../Core/Src/main.c **** 	op.params[3].value.a = account_id;
 1655              		.loc 1 299 27 is_stmt 0 view .LVU487
 1656 00b8 4823     		movs	r3, #72
 1657 00ba 2593     		str	r3, [sp, #148]
 300:../Core/Src/main.c **** 
 1658              		.loc 1 300 2 is_stmt 1 view .LVU488
 300:../Core/Src/main.c **** 
 1659              		.loc 1 300 23 is_stmt 0 view .LVU489
 1660 00bc CDF8C090 		str	r9, [sp, #192]
 302:../Core/Src/main.c **** 	if (res != TEEC_SUCCESS) {
 1661              		.loc 1 302 2 is_stmt 1 view .LVU490
 302:../Core/Src/main.c **** 	if (res != TEEC_SUCCESS) {
 1662              		.loc 1 302 8 is_stmt 0 view .LVU491
 1663 00c0 3AAB     		add	r3, sp, #232
 1664              	.LVL132:
 302:../Core/Src/main.c **** 	if (res != TEEC_SUCCESS) {
 1665              		.loc 1 302 8 view .LVU492
 1666 00c2 14AA     		add	r2, sp, #80
 1667 00c4 3946     		mov	r1, r7
 1668 00c6 3046     		mov	r0, r6
 1669 00c8 FFF7FEFF 		bl	TEEC_InvokeCommand
 1670              	.LVL133:
 303:../Core/Src/main.c **** 		ERR_MSG("TEEC_InvokeCommand failed with code 0x%x origin 0x%x", res, err_origin);
 1671              		.loc 1 303 2 is_stmt 1 view .LVU493
 303:../Core/Src/main.c **** 		ERR_MSG("TEEC_InvokeCommand failed with code 0x%x origin 0x%x", res, err_origin);
 1672              		.loc 1 303 5 is_stmt 0 view .LVU494
 1673 00cc 0646     		mov	r6, r0
 1674 00ce 68B9     		cbnz	r0, .L69
 1675              	.LVL134:
 1676              	.L64:
 304:../Core/Src/main.c **** 	}
 1677              		.loc 1 304 3 is_stmt 1 discriminator 1 view .LVU495
 304:../Core/Src/main.c **** 	}
 1678              		.loc 1 304 83 discriminator 1 view .LVU496
 306:../Core/Src/main.c **** 		ERR_MSG("Incorrect pin");
 1679              		.loc 1 306 2 discriminator 1 view .LVU497
 306:../Core/Src/main.c **** 		ERR_MSG("Incorrect pin");
 1680              		.loc 1 306 24 is_stmt 0 discriminator 1 view .LVU498
 1681 00d0 1C9B     		ldr	r3, [sp, #112]
 306:../Core/Src/main.c **** 		ERR_MSG("Incorrect pin");
 1682              		.loc 1 306 5 discriminator 1 view .LVU499
 1683 00d2 022B     		cmp	r3, #2
 1684 00d4 15D0     		beq	.L70
ARM GAS  Build/main.s 			page 52


 1685              	.L65:
 307:../Core/Src/main.c **** 	}
 1686              		.loc 1 307 3 is_stmt 1 discriminator 1 view .LVU500
 307:../Core/Src/main.c **** 	}
 1687              		.loc 1 307 27 discriminator 1 view .LVU501
 310:../Core/Src/main.c **** 	free_txbuf(buf);
 1688              		.loc 1 310 2 discriminator 1 view .LVU502
 1689 00d6 5046     		mov	r0, r10
 1690 00d8 FFF7FEFF 		bl	free_tx
 1691              	.LVL135:
 311:../Core/Src/main.c **** 
 1692              		.loc 1 311 2 discriminator 1 view .LVU503
 1693 00dc 2046     		mov	r0, r4
 1694 00de FFF7FEFF 		bl	free_txbuf
 1695              	.LVL136:
 313:../Core/Src/main.c **** 	for (uint32_t i = 0; i < op.params[2].tmpref.size; i++) {
 1696              		.loc 1 313 2 discriminator 1 view .LVU504
 1697 00e2 1748     		ldr	r0, .L71+16
 1698 00e4 FFF7FEFF 		bl	puts
 1699              	.LVL137:
 314:../Core/Src/main.c **** 		printf("%02x", out[i]);
 1700              		.loc 1 314 2 discriminator 1 view .LVU505
 1701              	.LBB10:
 314:../Core/Src/main.c **** 		printf("%02x", out[i]);
 1702              		.loc 1 314 7 discriminator 1 view .LVU506
 314:../Core/Src/main.c **** 		printf("%02x", out[i]);
 1703              		.loc 1 314 16 is_stmt 0 discriminator 1 view .LVU507
 1704 00e8 0024     		movs	r4, #0
 1705              	.LVL138:
 314:../Core/Src/main.c **** 		printf("%02x", out[i]);
 1706              		.loc 1 314 2 discriminator 1 view .LVU508
 1707 00ea 17E0     		b	.L66
 1708              	.LVL139:
 1709              	.L69:
 314:../Core/Src/main.c **** 		printf("%02x", out[i]);
 1710              		.loc 1 314 2 discriminator 1 view .LVU509
 1711              	.LBE10:
 304:../Core/Src/main.c **** 	}
 1712              		.loc 1 304 3 is_stmt 1 view .LVU510
 304:../Core/Src/main.c **** 	}
 1713              		.loc 1 304 3 view .LVU511
 1714 00ec 3A9B     		ldr	r3, [sp, #232]
 1715 00ee 0193     		str	r3, [sp, #4]
 1716 00f0 0090     		str	r0, [sp]
 1717 00f2 144B     		ldr	r3, .L71+20
 1718 00f4 4FF49872 		mov	r2, #304
 1719 00f8 1349     		ldr	r1, .L71+24
 1720 00fa 1448     		ldr	r0, .L71+28
 1721              	.LVL140:
 304:../Core/Src/main.c **** 	}
 1722              		.loc 1 304 3 is_stmt 0 view .LVU512
 1723 00fc FFF7FEFF 		bl	printf
 1724              	.LVL141:
 1725 0100 E6E7     		b	.L64
 1726              	.L70:
 307:../Core/Src/main.c **** 	}
 1727              		.loc 1 307 3 is_stmt 1 view .LVU513
ARM GAS  Build/main.s 			page 53


 307:../Core/Src/main.c **** 	}
 1728              		.loc 1 307 3 view .LVU514
 1729 0102 104B     		ldr	r3, .L71+20
 1730 0104 40F23312 		movw	r2, #307
 1731 0108 0F49     		ldr	r1, .L71+24
 1732 010a 1148     		ldr	r0, .L71+32
 1733 010c FFF7FEFF 		bl	printf
 1734              	.LVL142:
 1735 0110 E1E7     		b	.L65
 1736              	.LVL143:
 1737              	.L67:
 1738              	.LBB11:
 315:../Core/Src/main.c **** 	}
 1739              		.loc 1 315 3 discriminator 3 view .LVU515
 1740 0112 295D     		ldrb	r1, [r5, r4]	@ zero_extendqisi2
 1741 0114 0F48     		ldr	r0, .L71+36
 1742 0116 FFF7FEFF 		bl	printf
 1743              	.LVL144:
 314:../Core/Src/main.c **** 		printf("%02x", out[i]);
 1744              		.loc 1 314 54 discriminator 3 view .LVU516
 1745 011a 0134     		adds	r4, r4, #1
 1746              	.LVL145:
 1747              	.L66:
 314:../Core/Src/main.c **** 		printf("%02x", out[i]);
 1748              		.loc 1 314 25 discriminator 1 view .LVU517
 314:../Core/Src/main.c **** 		printf("%02x", out[i]);
 1749              		.loc 1 314 46 is_stmt 0 discriminator 1 view .LVU518
 1750 011c 259B     		ldr	r3, [sp, #148]
 314:../Core/Src/main.c **** 		printf("%02x", out[i]);
 1751              		.loc 1 314 25 discriminator 1 view .LVU519
 1752 011e A342     		cmp	r3, r4
 1753 0120 F7D8     		bhi	.L67
 1754              	.LBE11:
 317:../Core/Src/main.c **** 
 1755              		.loc 1 317 2 is_stmt 1 view .LVU520
 1756 0122 0A20     		movs	r0, #10
 1757 0124 FFF7FEFF 		bl	putchar
 1758              	.LVL146:
 319:../Core/Src/main.c **** }
 1759              		.loc 1 319 2 view .LVU521
 320:../Core/Src/main.c **** 
 1760              		.loc 1 320 1 is_stmt 0 view .LVU522
 1761 0128 3046     		mov	r0, r6
 1762 012a 32B0     		add	sp, sp, #200
 1763              	.LCFI26:
 1764              		.cfi_def_cfa_offset 32
 1765              		@ sp needed
 1766 012c BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 1767              	.LVL147:
 1768              	.L72:
 320:../Core/Src/main.c **** 
 1769              		.loc 1 320 1 view .LVU523
 1770              		.align	2
 1771              	.L71:
 1772 0130 00000000 		.word	.LANCHOR0
 1773 0134 84000000 		.word	.LC19
 1774 0138 00000000 		.word	.LC21
ARM GAS  Build/main.s 			page 54


 1775 013c 24000000 		.word	.LC22
 1776 0140 5C000000 		.word	.LC23
 1777 0144 00000000 		.word	__func__.1
 1778 0148 2C000000 		.word	.LC2
 1779 014c 1C000000 		.word	.LC16
 1780 0150 70000000 		.word	.LC17
 1781 0154 7C000000 		.word	.LC24
 1782              		.cfi_endproc
 1783              	.LFE86:
 1785              		.section	.text.__io_putchar,"ax",%progbits
 1786              		.align	1
 1787              		.global	__io_putchar
 1788              		.syntax unified
 1789              		.thumb
 1790              		.thumb_func
 1792              	__io_putchar:
 1793              	.LVL148:
 1794              	.LFB77:
  69:../Core/Src/main.c ****     HAL_UART_Transmit(&huart1, (uint8_t *) &ch, 1, HAL_MAX_DELAY);
 1795              		.loc 1 69 25 is_stmt 1 view -0
 1796              		.cfi_startproc
 1797              		@ args = 0, pretend = 0, frame = 8
 1798              		@ frame_needed = 0, uses_anonymous_args = 0
  69:../Core/Src/main.c ****     HAL_UART_Transmit(&huart1, (uint8_t *) &ch, 1, HAL_MAX_DELAY);
 1799              		.loc 1 69 25 is_stmt 0 view .LVU525
 1800 0000 00B5     		push	{lr}
 1801              	.LCFI27:
 1802              		.cfi_def_cfa_offset 4
 1803              		.cfi_offset 14, -4
 1804 0002 83B0     		sub	sp, sp, #12
 1805              	.LCFI28:
 1806              		.cfi_def_cfa_offset 16
 1807 0004 0190     		str	r0, [sp, #4]
  70:../Core/Src/main.c ****     return ch;
 1808              		.loc 1 70 5 is_stmt 1 view .LVU526
 1809 0006 4FF0FF33 		mov	r3, #-1
 1810 000a 0122     		movs	r2, #1
 1811 000c 01A9     		add	r1, sp, #4
 1812 000e 0348     		ldr	r0, .L75
 1813              	.LVL149:
  70:../Core/Src/main.c ****     return ch;
 1814              		.loc 1 70 5 is_stmt 0 view .LVU527
 1815 0010 FFF7FEFF 		bl	HAL_UART_Transmit
 1816              	.LVL150:
  71:../Core/Src/main.c **** }
 1817              		.loc 1 71 5 is_stmt 1 view .LVU528
  72:../Core/Src/main.c **** 
 1818              		.loc 1 72 1 is_stmt 0 view .LVU529
 1819 0014 0198     		ldr	r0, [sp, #4]
 1820 0016 03B0     		add	sp, sp, #12
 1821              	.LCFI29:
 1822              		.cfi_def_cfa_offset 4
 1823              		@ sp needed
 1824 0018 5DF804FB 		ldr	pc, [sp], #4
 1825              	.L76:
 1826              		.align	2
 1827              	.L75:
ARM GAS  Build/main.s 			page 55


 1828 001c 00000000 		.word	huart1
 1829              		.cfi_endproc
 1830              	.LFE77:
 1832              		.section	.text.rng_init,"ax",%progbits
 1833              		.align	1
 1834              		.global	rng_init
 1835              		.syntax unified
 1836              		.thumb
 1837              		.thumb_func
 1839              	rng_init:
 1840              	.LFB78:
  75:../Core/Src/main.c **** 	/* Enable RNG clock source */
 1841              		.loc 1 75 1 is_stmt 1 view -0
 1842              		.cfi_startproc
 1843              		@ args = 0, pretend = 0, frame = 8
 1844              		@ frame_needed = 0, uses_anonymous_args = 0
 1845              		@ link register save eliminated.
 1846 0000 82B0     		sub	sp, sp, #8
 1847              	.LCFI30:
 1848              		.cfi_def_cfa_offset 8
  77:../Core/Src/main.c **** 
 1849              		.loc 1 77 2 view .LVU531
 1850              	.LBB12:
  77:../Core/Src/main.c **** 
 1851              		.loc 1 77 2 view .LVU532
  77:../Core/Src/main.c **** 
 1852              		.loc 1 77 2 view .LVU533
 1853 0002 084B     		ldr	r3, .L79
 1854 0004 DA6C     		ldr	r2, [r3, #76]
 1855 0006 42F48022 		orr	r2, r2, #262144
 1856 000a DA64     		str	r2, [r3, #76]
  77:../Core/Src/main.c **** 
 1857              		.loc 1 77 2 view .LVU534
 1858 000c DB6C     		ldr	r3, [r3, #76]
 1859 000e 03F48023 		and	r3, r3, #262144
 1860 0012 0193     		str	r3, [sp, #4]
  77:../Core/Src/main.c **** 
 1861              		.loc 1 77 2 view .LVU535
 1862 0014 019B     		ldr	r3, [sp, #4]
 1863              	.LBE12:
  77:../Core/Src/main.c **** 
 1864              		.loc 1 77 2 view .LVU536
  80:../Core/Src/main.c **** }
 1865              		.loc 1 80 2 view .LVU537
  80:../Core/Src/main.c **** }
 1866              		.loc 1 80 5 is_stmt 0 view .LVU538
 1867 0016 044A     		ldr	r2, .L79+4
 1868 0018 1368     		ldr	r3, [r2]
  80:../Core/Src/main.c **** }
 1869              		.loc 1 80 10 view .LVU539
 1870 001a 43F00403 		orr	r3, r3, #4
 1871 001e 1360     		str	r3, [r2]
  81:../Core/Src/main.c **** 
 1872              		.loc 1 81 1 view .LVU540
 1873 0020 02B0     		add	sp, sp, #8
 1874              	.LCFI31:
 1875              		.cfi_def_cfa_offset 0
ARM GAS  Build/main.s 			page 56


 1876              		@ sp needed
 1877 0022 7047     		bx	lr
 1878              	.L80:
 1879              		.align	2
 1880              	.L79:
 1881 0024 00100240 		.word	1073876992
 1882 0028 00080650 		.word	1342572544
 1883              		.cfi_endproc
 1884              	.LFE78:
 1886              		.section	.text.rng_deinit,"ax",%progbits
 1887              		.align	1
 1888              		.global	rng_deinit
 1889              		.syntax unified
 1890              		.thumb
 1891              		.thumb_func
 1893              	rng_deinit:
 1894              	.LFB79:
  84:../Core/Src/main.c **** 	/* Disable RNG peripheral */
 1895              		.loc 1 84 1 is_stmt 1 view -0
 1896              		.cfi_startproc
 1897              		@ args = 0, pretend = 0, frame = 0
 1898              		@ frame_needed = 0, uses_anonymous_args = 0
 1899              		@ link register save eliminated.
  86:../Core/Src/main.c **** 
 1900              		.loc 1 86 2 view .LVU542
  86:../Core/Src/main.c **** 
 1901              		.loc 1 86 5 is_stmt 0 view .LVU543
 1902 0000 064A     		ldr	r2, .L82
 1903 0002 1368     		ldr	r3, [r2]
  86:../Core/Src/main.c **** 
 1904              		.loc 1 86 10 view .LVU544
 1905 0004 23F00403 		bic	r3, r3, #4
 1906 0008 1360     		str	r3, [r2]
  89:../Core/Src/main.c **** }
 1907              		.loc 1 89 2 is_stmt 1 view .LVU545
 1908 000a 02F17042 		add	r2, r2, #-268435456
 1909 000e A2F57E32 		sub	r2, r2, #260096
 1910 0012 D36C     		ldr	r3, [r2, #76]
 1911 0014 23F48023 		bic	r3, r3, #262144
 1912 0018 D364     		str	r3, [r2, #76]
  90:../Core/Src/main.c **** 
 1913              		.loc 1 90 1 is_stmt 0 view .LVU546
 1914 001a 7047     		bx	lr
 1915              	.L83:
 1916              		.align	2
 1917              	.L82:
 1918 001c 00080650 		.word	1342572544
 1919              		.cfi_endproc
 1920              	.LFE79:
 1922              		.section	.text.rng_get,"ax",%progbits
 1923              		.align	1
 1924              		.global	rng_get
 1925              		.syntax unified
 1926              		.thumb
 1927              		.thumb_func
 1929              	rng_get:
 1930              	.LFB80:
ARM GAS  Build/main.s 			page 57


  93:../Core/Src/main.c **** 	/* Wait until one RNG number is ready */
 1931              		.loc 1 93 1 is_stmt 1 view -0
 1932              		.cfi_startproc
 1933              		@ args = 0, pretend = 0, frame = 0
 1934              		@ frame_needed = 0, uses_anonymous_args = 0
 1935              		@ link register save eliminated.
 1936              	.L85:
  95:../Core/Src/main.c **** 
 1937              		.loc 1 95 9 discriminator 1 view .LVU548
  95:../Core/Src/main.c **** 
 1938              		.loc 1 95 14 is_stmt 0 discriminator 1 view .LVU549
 1939 0000 034B     		ldr	r3, .L86
 1940 0002 5B68     		ldr	r3, [r3, #4]
  95:../Core/Src/main.c **** 
 1941              		.loc 1 95 9 discriminator 1 view .LVU550
 1942 0004 13F0010F 		tst	r3, #1
 1943 0008 FAD0     		beq	.L85
  98:../Core/Src/main.c **** }
 1944              		.loc 1 98 2 is_stmt 1 view .LVU551
  98:../Core/Src/main.c **** }
 1945              		.loc 1 98 12 is_stmt 0 view .LVU552
 1946 000a 014B     		ldr	r3, .L86
 1947 000c 9868     		ldr	r0, [r3, #8]
  99:../Core/Src/main.c **** 
 1948              		.loc 1 99 1 view .LVU553
 1949 000e 7047     		bx	lr
 1950              	.L87:
 1951              		.align	2
 1952              	.L86:
 1953 0010 00080650 		.word	1342572544
 1954              		.cfi_endproc
 1955              	.LFE80:
 1957              		.section	.text.Error_Handler,"ax",%progbits
 1958              		.align	1
 1959              		.global	Error_Handler
 1960              		.syntax unified
 1961              		.thumb
 1962              		.thumb_func
 1964              	Error_Handler:
 1965              	.LFB94:
 867:../Core/Src/main.c **** 
 868:../Core/Src/main.c **** /* USER CODE BEGIN 4 */
 869:../Core/Src/main.c **** 
 870:../Core/Src/main.c **** 
 871:../Core/Src/main.c **** /* USER CODE END 4 */
 872:../Core/Src/main.c **** 
 873:../Core/Src/main.c **** /**
 874:../Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 875:../Core/Src/main.c ****   * @retval None
 876:../Core/Src/main.c ****   */
 877:../Core/Src/main.c **** void Error_Handler(void)
 878:../Core/Src/main.c **** {
 1966              		.loc 1 878 1 is_stmt 1 view -0
 1967              		.cfi_startproc
 1968              		@ Volatile: function does not return.
 1969              		@ args = 0, pretend = 0, frame = 0
 1970              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  Build/main.s 			page 58


 1971              		@ link register save eliminated.
 879:../Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 880:../Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 881:../Core/Src/main.c ****   __disable_irq();
 1972              		.loc 1 881 3 view .LVU555
 1973              	.LBB13:
 1974              	.LBI13:
 1975              		.file 2 "../Drivers/CMSIS/Include/cmsis_gcc.h"
   1:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:../Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:../Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:../Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.2.0
   5:../Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     08. May 2019
   6:../Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:../Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:../Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:../Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:../Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:../Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:../Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:../Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:../Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:../Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:../Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:../Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:../Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:../Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:../Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:../Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:../Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:../Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:../Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:../Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:../Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:../Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:../Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:../Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:../Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
ARM GAS  Build/main.s 			page 59


  50:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:../Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
ARM GAS  Build/main.s 			page 60


 107:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:../Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:../Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:../Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:../Drivers/CMSIS/Include/cmsis_gcc.h ****   
 130:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:../Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:../Drivers/CMSIS/Include/cmsis_gcc.h ****   
 135:../Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:../Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:../Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:../Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:../Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:../Drivers/CMSIS/Include/cmsis_gcc.h ****   
 141:../Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:../Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:../Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:../Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:../Drivers/CMSIS/Include/cmsis_gcc.h ****   
 146:../Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:../Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:../Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:../Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:../Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:../Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:../Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:../Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:../Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:../Drivers/CMSIS/Include/cmsis_gcc.h ****  
 157:../Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:../Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:../Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:../Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:../Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:../Drivers/CMSIS/Include/cmsis_gcc.h ****  
 163:../Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
ARM GAS  Build/main.s 			page 61


 164:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:../Drivers/CMSIS/Include/cmsis_gcc.h ****   
 166:../Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:../Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:../Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:../Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:../Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:../Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:../Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:../Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:../Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 189:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 190:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 191:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 192:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:../Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 196:../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 198:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 200:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 201:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 202:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 203:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:../Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 207:../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 1976              		.loc 2 207 27 view .LVU556
 1977              	.LBB14:
 208:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 209:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 1978              		.loc 2 209 3 view .LVU557
 1979              		.syntax unified
 1980              	@ 209 "../Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1981 0000 00DF     		svc 0
 1982 0002 72B6     		cpsid i 
 1983              	@ 0 "" 2
 1984              		.thumb
 1985              		.syntax unified
 1986              	.L89:
ARM GAS  Build/main.s 			page 62


 1987              	.LBE14:
 1988              	.LBE13:
 882:../Core/Src/main.c ****   while (1)
 1989              		.loc 1 882 3 discriminator 1 view .LVU558
 883:../Core/Src/main.c ****   {
 884:../Core/Src/main.c ****   }
 1990              		.loc 1 884 3 discriminator 1 view .LVU559
 882:../Core/Src/main.c ****   while (1)
 1991              		.loc 1 882 9 discriminator 1 view .LVU560
 1992 0004 FEE7     		b	.L89
 1993              		.cfi_endproc
 1994              	.LFE94:
 1996              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
 1997              		.align	1
 1998              		.syntax unified
 1999              		.thumb
 2000              		.thumb_func
 2002              	MX_USART1_UART_Init:
 2003              	.LFB92:
 648:../Core/Src/main.c **** 
 2004              		.loc 1 648 1 view -0
 2005              		.cfi_startproc
 2006              		@ args = 0, pretend = 0, frame = 0
 2007              		@ frame_needed = 0, uses_anonymous_args = 0
 2008 0000 08B5     		push	{r3, lr}
 2009              	.LCFI32:
 2010              		.cfi_def_cfa_offset 8
 2011              		.cfi_offset 3, -8
 2012              		.cfi_offset 14, -4
 657:../Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 2013              		.loc 1 657 3 view .LVU562
 657:../Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 2014              		.loc 1 657 19 is_stmt 0 view .LVU563
 2015 0002 0B48     		ldr	r0, .L94
 2016 0004 0B4B     		ldr	r3, .L94+4
 2017 0006 0360     		str	r3, [r0]
 658:../Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 2018              		.loc 1 658 3 is_stmt 1 view .LVU564
 658:../Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 2019              		.loc 1 658 24 is_stmt 0 view .LVU565
 2020 0008 4FF4E133 		mov	r3, #115200
 2021 000c 4360     		str	r3, [r0, #4]
 659:../Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 2022              		.loc 1 659 3 is_stmt 1 view .LVU566
 659:../Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 2023              		.loc 1 659 26 is_stmt 0 view .LVU567
 2024 000e 0023     		movs	r3, #0
 2025 0010 8360     		str	r3, [r0, #8]
 660:../Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 2026              		.loc 1 660 3 is_stmt 1 view .LVU568
 660:../Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 2027              		.loc 1 660 24 is_stmt 0 view .LVU569
 2028 0012 C360     		str	r3, [r0, #12]
 661:../Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 2029              		.loc 1 661 3 is_stmt 1 view .LVU570
 661:../Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 2030              		.loc 1 661 22 is_stmt 0 view .LVU571
ARM GAS  Build/main.s 			page 63


 2031 0014 0361     		str	r3, [r0, #16]
 662:../Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 2032              		.loc 1 662 3 is_stmt 1 view .LVU572
 662:../Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 2033              		.loc 1 662 20 is_stmt 0 view .LVU573
 2034 0016 0C22     		movs	r2, #12
 2035 0018 4261     		str	r2, [r0, #20]
 663:../Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 2036              		.loc 1 663 3 is_stmt 1 view .LVU574
 663:../Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 2037              		.loc 1 663 25 is_stmt 0 view .LVU575
 2038 001a 8361     		str	r3, [r0, #24]
 664:../Core/Src/main.c ****   huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 2039              		.loc 1 664 3 is_stmt 1 view .LVU576
 664:../Core/Src/main.c ****   huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 2040              		.loc 1 664 28 is_stmt 0 view .LVU577
 2041 001c C361     		str	r3, [r0, #28]
 665:../Core/Src/main.c ****   huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 2042              		.loc 1 665 3 is_stmt 1 view .LVU578
 665:../Core/Src/main.c ****   huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 2043              		.loc 1 665 30 is_stmt 0 view .LVU579
 2044 001e 0362     		str	r3, [r0, #32]
 666:../Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 2045              		.loc 1 666 3 is_stmt 1 view .LVU580
 666:../Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 2046              		.loc 1 666 38 is_stmt 0 view .LVU581
 2047 0020 4362     		str	r3, [r0, #36]
 667:../Core/Src/main.c ****   {
 2048              		.loc 1 667 3 is_stmt 1 view .LVU582
 667:../Core/Src/main.c ****   {
 2049              		.loc 1 667 7 is_stmt 0 view .LVU583
 2050 0022 FFF7FEFF 		bl	HAL_UART_Init
 2051              	.LVL151:
 667:../Core/Src/main.c ****   {
 2052              		.loc 1 667 6 view .LVU584
 2053 0026 00B9     		cbnz	r0, .L93
 675:../Core/Src/main.c **** 
 2054              		.loc 1 675 1 view .LVU585
 2055 0028 08BD     		pop	{r3, pc}
 2056              	.L93:
 669:../Core/Src/main.c ****   }
 2057              		.loc 1 669 5 is_stmt 1 view .LVU586
 2058 002a FFF7FEFF 		bl	Error_Handler
 2059              	.LVL152:
 2060              	.L95:
 2061 002e 00BF     		.align	2
 2062              	.L94:
 2063 0030 00000000 		.word	huart1
 2064 0034 00380140 		.word	1073821696
 2065              		.cfi_endproc
 2066              	.LFE92:
 2068              		.section	.text.MX_RNG_Init,"ax",%progbits
 2069              		.align	1
 2070              		.syntax unified
 2071              		.thumb
 2072              		.thumb_func
 2074              	MX_RNG_Init:
ARM GAS  Build/main.s 			page 64


 2075              	.LFB91:
 622:../Core/Src/main.c **** 
 2076              		.loc 1 622 1 view -0
 2077              		.cfi_startproc
 2078              		@ args = 0, pretend = 0, frame = 0
 2079              		@ frame_needed = 0, uses_anonymous_args = 0
 2080 0000 08B5     		push	{r3, lr}
 2081              	.LCFI33:
 2082              		.cfi_def_cfa_offset 8
 2083              		.cfi_offset 3, -8
 2084              		.cfi_offset 14, -4
 631:../Core/Src/main.c ****   if (HAL_RNG_Init(&hrng) != HAL_OK)
 2085              		.loc 1 631 3 view .LVU588
 631:../Core/Src/main.c ****   if (HAL_RNG_Init(&hrng) != HAL_OK)
 2086              		.loc 1 631 17 is_stmt 0 view .LVU589
 2087 0002 0448     		ldr	r0, .L100
 2088 0004 044B     		ldr	r3, .L100+4
 2089 0006 0360     		str	r3, [r0]
 632:../Core/Src/main.c ****   {
 2090              		.loc 1 632 3 is_stmt 1 view .LVU590
 632:../Core/Src/main.c ****   {
 2091              		.loc 1 632 7 is_stmt 0 view .LVU591
 2092 0008 FFF7FEFF 		bl	HAL_RNG_Init
 2093              	.LVL153:
 632:../Core/Src/main.c ****   {
 2094              		.loc 1 632 6 view .LVU592
 2095 000c 00B9     		cbnz	r0, .L99
 640:../Core/Src/main.c **** 
 2096              		.loc 1 640 1 view .LVU593
 2097 000e 08BD     		pop	{r3, pc}
 2098              	.L99:
 634:../Core/Src/main.c ****   }
 2099              		.loc 1 634 5 is_stmt 1 view .LVU594
 2100 0010 FFF7FEFF 		bl	Error_Handler
 2101              	.LVL154:
 2102              	.L101:
 2103              		.align	2
 2104              	.L100:
 2105 0014 00000000 		.word	hrng
 2106 0018 00080650 		.word	1342572544
 2107              		.cfi_endproc
 2108              	.LFE91:
 2110              		.section	.text.SystemClock_Config,"ax",%progbits
 2111              		.align	1
 2112              		.global	SystemClock_Config
 2113              		.syntax unified
 2114              		.thumb
 2115              		.thumb_func
 2117              	SystemClock_Config:
 2118              	.LFB89:
 534:../Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 2119              		.loc 1 534 1 view -0
 2120              		.cfi_startproc
 2121              		@ args = 0, pretend = 0, frame = 88
 2122              		@ frame_needed = 0, uses_anonymous_args = 0
 2123 0000 00B5     		push	{lr}
 2124              	.LCFI34:
ARM GAS  Build/main.s 			page 65


 2125              		.cfi_def_cfa_offset 4
 2126              		.cfi_offset 14, -4
 2127 0002 97B0     		sub	sp, sp, #92
 2128              	.LCFI35:
 2129              		.cfi_def_cfa_offset 96
 535:../Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 2130              		.loc 1 535 3 view .LVU596
 535:../Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 2131              		.loc 1 535 22 is_stmt 0 view .LVU597
 2132 0004 4422     		movs	r2, #68
 2133 0006 0021     		movs	r1, #0
 2134 0008 05A8     		add	r0, sp, #20
 2135 000a FFF7FEFF 		bl	memset
 2136              	.LVL155:
 536:../Core/Src/main.c **** 
 2137              		.loc 1 536 3 is_stmt 1 view .LVU598
 536:../Core/Src/main.c **** 
 2138              		.loc 1 536 22 is_stmt 0 view .LVU599
 2139 000e 0023     		movs	r3, #0
 2140 0010 0093     		str	r3, [sp]
 2141 0012 0193     		str	r3, [sp, #4]
 2142 0014 0293     		str	r3, [sp, #8]
 2143 0016 0393     		str	r3, [sp, #12]
 2144 0018 0493     		str	r3, [sp, #16]
 540:../Core/Src/main.c ****   {
 2145              		.loc 1 540 3 is_stmt 1 view .LVU600
 540:../Core/Src/main.c ****   {
 2146              		.loc 1 540 7 is_stmt 0 view .LVU601
 2147 001a 4FF40070 		mov	r0, #512
 2148 001e FFF7FEFF 		bl	HAL_PWREx_ControlVoltageScaling
 2149              	.LVL156:
 540:../Core/Src/main.c ****   {
 2150              		.loc 1 540 6 view .LVU602
 2151 0022 0028     		cmp	r0, #0
 2152 0024 31D1     		bne	.L107
 547:../Core/Src/main.c ****   __HAL_RCC_LSEDRIVE_CONFIG(RCC_LSEDRIVE_LOW);
 2153              		.loc 1 547 3 is_stmt 1 view .LVU603
 2154 0026 FFF7FEFF 		bl	HAL_PWR_EnableBkUpAccess
 2155              	.LVL157:
 548:../Core/Src/main.c **** 
 2156              		.loc 1 548 3 view .LVU604
 2157 002a 1B4A     		ldr	r2, .L110
 2158 002c D2F89030 		ldr	r3, [r2, #144]
 2159 0030 23F01803 		bic	r3, r3, #24
 2160 0034 C2F89030 		str	r3, [r2, #144]
 555:../Core/Src/main.c ****   RCC_OscInitStruct.MSIState = RCC_MSI_ON;
 2161              		.loc 1 555 3 view .LVU605
 555:../Core/Src/main.c ****   RCC_OscInitStruct.MSIState = RCC_MSI_ON;
 2162              		.loc 1 555 36 is_stmt 0 view .LVU606
 2163 0038 1023     		movs	r3, #16
 2164 003a 0593     		str	r3, [sp, #20]
 556:../Core/Src/main.c ****   RCC_OscInitStruct.MSIClockRange = RCC_MSIRANGE_6;
 2165              		.loc 1 556 3 is_stmt 1 view .LVU607
 556:../Core/Src/main.c ****   RCC_OscInitStruct.MSIClockRange = RCC_MSIRANGE_6;
 2166              		.loc 1 556 30 is_stmt 0 view .LVU608
 2167 003c 0123     		movs	r3, #1
 2168 003e 0B93     		str	r3, [sp, #44]
ARM GAS  Build/main.s 			page 66


 557:../Core/Src/main.c ****   RCC_OscInitStruct.MSICalibrationValue = RCC_MSICALIBRATION_DEFAULT;
 2169              		.loc 1 557 3 is_stmt 1 view .LVU609
 557:../Core/Src/main.c ****   RCC_OscInitStruct.MSICalibrationValue = RCC_MSICALIBRATION_DEFAULT;
 2170              		.loc 1 557 35 is_stmt 0 view .LVU610
 2171 0040 6022     		movs	r2, #96
 2172 0042 0D92     		str	r2, [sp, #52]
 558:../Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 2173              		.loc 1 558 3 is_stmt 1 view .LVU611
 558:../Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 2174              		.loc 1 558 41 is_stmt 0 view .LVU612
 2175 0044 0022     		movs	r2, #0
 2176 0046 0C92     		str	r2, [sp, #48]
 559:../Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_MSI;
 2177              		.loc 1 559 3 is_stmt 1 view .LVU613
 559:../Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_MSI;
 2178              		.loc 1 559 34 is_stmt 0 view .LVU614
 2179 0048 0222     		movs	r2, #2
 2180 004a 0F92     		str	r2, [sp, #60]
 560:../Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 1;
 2181              		.loc 1 560 3 is_stmt 1 view .LVU615
 560:../Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 1;
 2182              		.loc 1 560 35 is_stmt 0 view .LVU616
 2183 004c 1093     		str	r3, [sp, #64]
 561:../Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 40;
 2184              		.loc 1 561 3 is_stmt 1 view .LVU617
 561:../Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 40;
 2185              		.loc 1 561 30 is_stmt 0 view .LVU618
 2186 004e 1193     		str	r3, [sp, #68]
 562:../Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 2187              		.loc 1 562 3 is_stmt 1 view .LVU619
 562:../Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 2188              		.loc 1 562 30 is_stmt 0 view .LVU620
 2189 0050 2823     		movs	r3, #40
 2190 0052 1293     		str	r3, [sp, #72]
 563:../Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = 7;
 2191              		.loc 1 563 3 is_stmt 1 view .LVU621
 563:../Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = 7;
 2192              		.loc 1 563 30 is_stmt 0 view .LVU622
 2193 0054 1592     		str	r2, [sp, #84]
 564:../Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 2194              		.loc 1 564 3 is_stmt 1 view .LVU623
 564:../Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 2195              		.loc 1 564 30 is_stmt 0 view .LVU624
 2196 0056 0723     		movs	r3, #7
 2197 0058 1393     		str	r3, [sp, #76]
 565:../Core/Src/main.c ****   if(HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 2198              		.loc 1 565 3 is_stmt 1 view .LVU625
 565:../Core/Src/main.c ****   if(HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 2199              		.loc 1 565 30 is_stmt 0 view .LVU626
 2200 005a 0423     		movs	r3, #4
 2201 005c 1493     		str	r3, [sp, #80]
 566:../Core/Src/main.c ****   {
 2202              		.loc 1 566 3 is_stmt 1 view .LVU627
 566:../Core/Src/main.c ****   {
 2203              		.loc 1 566 6 is_stmt 0 view .LVU628
 2204 005e 05A8     		add	r0, sp, #20
 2205 0060 FFF7FEFF 		bl	HAL_RCC_OscConfig
ARM GAS  Build/main.s 			page 67


 2206              	.LVL158:
 566:../Core/Src/main.c ****   {
 2207              		.loc 1 566 5 view .LVU629
 2208 0064 98B9     		cbnz	r0, .L108
 573:../Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 2209              		.loc 1 573 3 is_stmt 1 view .LVU630
 573:../Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 2210              		.loc 1 573 31 is_stmt 0 view .LVU631
 2211 0066 0F23     		movs	r3, #15
 2212 0068 0093     		str	r3, [sp]
 574:../Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 2213              		.loc 1 574 3 is_stmt 1 view .LVU632
 574:../Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 2214              		.loc 1 574 34 is_stmt 0 view .LVU633
 2215 006a 0323     		movs	r3, #3
 2216 006c 0193     		str	r3, [sp, #4]
 575:../Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 2217              		.loc 1 575 3 is_stmt 1 view .LVU634
 575:../Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 2218              		.loc 1 575 35 is_stmt 0 view .LVU635
 2219 006e 0023     		movs	r3, #0
 2220 0070 0293     		str	r3, [sp, #8]
 576:../Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 2221              		.loc 1 576 3 is_stmt 1 view .LVU636
 576:../Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 2222              		.loc 1 576 36 is_stmt 0 view .LVU637
 2223 0072 0393     		str	r3, [sp, #12]
 577:../Core/Src/main.c ****   if(HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_4) != HAL_OK)
 2224              		.loc 1 577 3 is_stmt 1 view .LVU638
 577:../Core/Src/main.c ****   if(HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_4) != HAL_OK)
 2225              		.loc 1 577 36 is_stmt 0 view .LVU639
 2226 0074 0493     		str	r3, [sp, #16]
 578:../Core/Src/main.c ****   {
 2227              		.loc 1 578 3 is_stmt 1 view .LVU640
 578:../Core/Src/main.c ****   {
 2228              		.loc 1 578 6 is_stmt 0 view .LVU641
 2229 0076 0421     		movs	r1, #4
 2230 0078 6846     		mov	r0, sp
 2231 007a FFF7FEFF 		bl	HAL_RCC_ClockConfig
 2232              	.LVL159:
 578:../Core/Src/main.c ****   {
 2233              		.loc 1 578 5 view .LVU642
 2234 007e 40B9     		cbnz	r0, .L109
 586:../Core/Src/main.c **** }
 2235              		.loc 1 586 3 is_stmt 1 view .LVU643
 2236 0080 FFF7FEFF 		bl	HAL_RCCEx_EnableMSIPLLMode
 2237              	.LVL160:
 587:../Core/Src/main.c **** 
 2238              		.loc 1 587 1 is_stmt 0 view .LVU644
 2239 0084 17B0     		add	sp, sp, #92
 2240              	.LCFI36:
 2241              		.cfi_remember_state
 2242              		.cfi_def_cfa_offset 4
 2243              		@ sp needed
 2244 0086 5DF804FB 		ldr	pc, [sp], #4
 2245              	.L107:
 2246              	.LCFI37:
ARM GAS  Build/main.s 			page 68


 2247              		.cfi_restore_state
 542:../Core/Src/main.c ****   }
 2248              		.loc 1 542 5 is_stmt 1 view .LVU645
 2249 008a FFF7FEFF 		bl	Error_Handler
 2250              	.LVL161:
 2251              	.L108:
 569:../Core/Src/main.c ****   }
 2252              		.loc 1 569 4 view .LVU646
 2253 008e FFF7FEFF 		bl	Error_Handler
 2254              	.LVL162:
 2255              	.L109:
 581:../Core/Src/main.c ****   }
 2256              		.loc 1 581 4 view .LVU647
 2257 0092 FFF7FEFF 		bl	Error_Handler
 2258              	.LVL163:
 2259              	.L111:
 2260 0096 00BF     		.align	2
 2261              	.L110:
 2262 0098 00100240 		.word	1073876992
 2263              		.cfi_endproc
 2264              	.LFE89:
 2266              		.section	.text.PeriphCommonClock_Config,"ax",%progbits
 2267              		.align	1
 2268              		.global	PeriphCommonClock_Config
 2269              		.syntax unified
 2270              		.thumb
 2271              		.thumb_func
 2273              	PeriphCommonClock_Config:
 2274              	.LFB90:
 594:../Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 2275              		.loc 1 594 1 view -0
 2276              		.cfi_startproc
 2277              		@ args = 0, pretend = 0, frame = 136
 2278              		@ frame_needed = 0, uses_anonymous_args = 0
 2279 0000 00B5     		push	{lr}
 2280              	.LCFI38:
 2281              		.cfi_def_cfa_offset 4
 2282              		.cfi_offset 14, -4
 2283 0002 A3B0     		sub	sp, sp, #140
 2284              	.LCFI39:
 2285              		.cfi_def_cfa_offset 144
 595:../Core/Src/main.c **** 
 2286              		.loc 1 595 3 view .LVU649
 595:../Core/Src/main.c **** 
 2287              		.loc 1 595 28 is_stmt 0 view .LVU650
 2288 0004 8822     		movs	r2, #136
 2289 0006 0021     		movs	r1, #0
 2290 0008 6846     		mov	r0, sp
 2291 000a FFF7FEFF 		bl	memset
 2292              	.LVL164:
 599:../Core/Src/main.c ****   PeriphClkInit.UsbClockSelection = RCC_USBCLKSOURCE_PLLSAI1;
 2293              		.loc 1 599 3 is_stmt 1 view .LVU651
 599:../Core/Src/main.c ****   PeriphClkInit.UsbClockSelection = RCC_USBCLKSOURCE_PLLSAI1;
 2294              		.loc 1 599 38 is_stmt 0 view .LVU652
 2295 000e 4FF48423 		mov	r3, #270336
 2296 0012 0093     		str	r3, [sp]
 600:../Core/Src/main.c ****   PeriphClkInit.RngClockSelection = RCC_RNGCLKSOURCE_PLLSAI1;
ARM GAS  Build/main.s 			page 69


 2297              		.loc 1 600 3 is_stmt 1 view .LVU653
 600:../Core/Src/main.c ****   PeriphClkInit.RngClockSelection = RCC_RNGCLKSOURCE_PLLSAI1;
 2298              		.loc 1 600 35 is_stmt 0 view .LVU654
 2299 0014 4FF08063 		mov	r3, #67108864
 2300 0018 1B93     		str	r3, [sp, #108]
 601:../Core/Src/main.c ****   PeriphClkInit.PLLSAI1.PLLSAI1Source = RCC_PLLSOURCE_MSI;
 2301              		.loc 1 601 3 is_stmt 1 view .LVU655
 601:../Core/Src/main.c ****   PeriphClkInit.PLLSAI1.PLLSAI1Source = RCC_PLLSOURCE_MSI;
 2302              		.loc 1 601 35 is_stmt 0 view .LVU656
 2303 001a 1D93     		str	r3, [sp, #116]
 602:../Core/Src/main.c ****   PeriphClkInit.PLLSAI1.PLLSAI1M = 1;
 2304              		.loc 1 602 3 is_stmt 1 view .LVU657
 602:../Core/Src/main.c ****   PeriphClkInit.PLLSAI1.PLLSAI1M = 1;
 2305              		.loc 1 602 39 is_stmt 0 view .LVU658
 2306 001c 0123     		movs	r3, #1
 2307 001e 0193     		str	r3, [sp, #4]
 603:../Core/Src/main.c ****   PeriphClkInit.PLLSAI1.PLLSAI1N = 24;
 2308              		.loc 1 603 3 is_stmt 1 view .LVU659
 603:../Core/Src/main.c ****   PeriphClkInit.PLLSAI1.PLLSAI1N = 24;
 2309              		.loc 1 603 34 is_stmt 0 view .LVU660
 2310 0020 0293     		str	r3, [sp, #8]
 604:../Core/Src/main.c ****   PeriphClkInit.PLLSAI1.PLLSAI1P = RCC_PLLP_DIV7;
 2311              		.loc 1 604 3 is_stmt 1 view .LVU661
 604:../Core/Src/main.c ****   PeriphClkInit.PLLSAI1.PLLSAI1P = RCC_PLLP_DIV7;
 2312              		.loc 1 604 34 is_stmt 0 view .LVU662
 2313 0022 1823     		movs	r3, #24
 2314 0024 0393     		str	r3, [sp, #12]
 605:../Core/Src/main.c ****   PeriphClkInit.PLLSAI1.PLLSAI1Q = RCC_PLLQ_DIV2;
 2315              		.loc 1 605 3 is_stmt 1 view .LVU663
 605:../Core/Src/main.c ****   PeriphClkInit.PLLSAI1.PLLSAI1Q = RCC_PLLQ_DIV2;
 2316              		.loc 1 605 34 is_stmt 0 view .LVU664
 2317 0026 0723     		movs	r3, #7
 2318 0028 0493     		str	r3, [sp, #16]
 606:../Core/Src/main.c ****   PeriphClkInit.PLLSAI1.PLLSAI1R = RCC_PLLR_DIV2;
 2319              		.loc 1 606 3 is_stmt 1 view .LVU665
 606:../Core/Src/main.c ****   PeriphClkInit.PLLSAI1.PLLSAI1R = RCC_PLLR_DIV2;
 2320              		.loc 1 606 34 is_stmt 0 view .LVU666
 2321 002a 0223     		movs	r3, #2
 2322 002c 0593     		str	r3, [sp, #20]
 607:../Core/Src/main.c ****   PeriphClkInit.PLLSAI1.PLLSAI1ClockOut = RCC_PLLSAI1_48M2CLK;
 2323              		.loc 1 607 3 is_stmt 1 view .LVU667
 607:../Core/Src/main.c ****   PeriphClkInit.PLLSAI1.PLLSAI1ClockOut = RCC_PLLSAI1_48M2CLK;
 2324              		.loc 1 607 34 is_stmt 0 view .LVU668
 2325 002e 0693     		str	r3, [sp, #24]
 608:../Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 2326              		.loc 1 608 3 is_stmt 1 view .LVU669
 608:../Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 2327              		.loc 1 608 41 is_stmt 0 view .LVU670
 2328 0030 4FF48013 		mov	r3, #1048576
 2329 0034 0793     		str	r3, [sp, #28]
 609:../Core/Src/main.c ****   {
 2330              		.loc 1 609 3 is_stmt 1 view .LVU671
 609:../Core/Src/main.c ****   {
 2331              		.loc 1 609 7 is_stmt 0 view .LVU672
 2332 0036 6846     		mov	r0, sp
 2333 0038 FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 2334              	.LVL165:
ARM GAS  Build/main.s 			page 70


 609:../Core/Src/main.c ****   {
 2335              		.loc 1 609 6 view .LVU673
 2336 003c 10B9     		cbnz	r0, .L115
 613:../Core/Src/main.c **** 
 2337              		.loc 1 613 1 view .LVU674
 2338 003e 23B0     		add	sp, sp, #140
 2339              	.LCFI40:
 2340              		.cfi_remember_state
 2341              		.cfi_def_cfa_offset 4
 2342              		@ sp needed
 2343 0040 5DF804FB 		ldr	pc, [sp], #4
 2344              	.L115:
 2345              	.LCFI41:
 2346              		.cfi_restore_state
 611:../Core/Src/main.c ****   }
 2347              		.loc 1 611 5 is_stmt 1 view .LVU675
 2348 0044 FFF7FEFF 		bl	Error_Handler
 2349              	.LVL166:
 2350              		.cfi_endproc
 2351              	.LFE90:
 2353              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 2354              		.align	2
 2355              	.LC26:
 2356 0000 1B5B303B 		.ascii	"\033[0;31mERROR: %s:%d:%s(): \"TEEC_InitializeConte"
 2356      33316D45 
 2356      52524F52 
 2356      3A202573 
 2356      3A25643A 
 2357 002f 78742066 		.ascii	"xt failed with code 0x%x\\r\\n\"\015\012\000"
 2357      61696C65 
 2357      64207769 
 2357      74682063 
 2357      6F646520 
 2358 004f 00       		.align	2
 2359              	.LC27:
 2360 0050 1B5B303B 		.ascii	"\033[0;31mERROR: %s:%d:%s(): \"TEEC_Opensession fai"
 2360      33316D45 
 2360      52524F52 
 2360      3A202573 
 2360      3A25643A 
 2361 007f 6C656420 		.ascii	"led with code 0x%x origin 0x%x\\r\\n\"\015\012\000"
 2361      77697468 
 2361      20636F64 
 2361      65203078 
 2361      2578206F 
 2362 00a5 000000   		.align	2
 2363              	.LC28:
 2364 00a8 1B5B303B 		.ascii	"\033[0;31mERROR: %s:%d:%s(): \"Error during the exe"
 2364      33316D45 
 2364      52524F52 
 2364      3A202573 
 2364      3A25643A 
 2365 00d7 63757469 		.ascii	"cution of Bitcoin Wallet client\\r\\n\"\015\012\000"
 2365      6F6E206F 
 2365      66204269 
 2365      74636F69 
 2365      6E205761 
ARM GAS  Build/main.s 			page 71


 2366 00fe 0000     		.align	2
 2367              	.LC25:
 2368 0100 48656C6C 		.ascii	"Hello world from Trento!\000"
 2368      6F20776F 
 2368      726C6420 
 2368      66726F6D 
 2368      20547265 
 2369              		.section	.text.main,"ax",%progbits
 2370              		.align	1
 2371              		.global	main
 2372              		.syntax unified
 2373              		.thumb
 2374              		.thumb_func
 2376              	main:
 2377              	.LFB88:
 361:../Core/Src/main.c **** 
 2378              		.loc 1 361 1 view -0
 2379              		.cfi_startproc
 2380              		@ args = 0, pretend = 0, frame = 280
 2381              		@ frame_needed = 0, uses_anonymous_args = 0
 2382 0000 10B5     		push	{r4, lr}
 2383              	.LCFI42:
 2384              		.cfi_def_cfa_offset 8
 2385              		.cfi_offset 4, -8
 2386              		.cfi_offset 14, -4
 2387 0002 CAB0     		sub	sp, sp, #296
 2388              	.LCFI43:
 2389              		.cfi_def_cfa_offset 304
 370:../Core/Src/main.c **** 
 2390              		.loc 1 370 3 view .LVU677
 2391 0004 FFF7FEFF 		bl	HAL_Init
 2392              	.LVL167:
 377:../Core/Src/main.c **** 
 2393              		.loc 1 377 3 view .LVU678
 2394 0008 FFF7FEFF 		bl	SystemClock_Config
 2395              	.LVL168:
 380:../Core/Src/main.c **** 
 2396              		.loc 1 380 3 view .LVU679
 2397 000c FFF7FEFF 		bl	PeriphCommonClock_Config
 2398              	.LVL169:
 387:../Core/Src/main.c ****   MX_USART1_UART_Init();
 2399              		.loc 1 387 3 view .LVU680
 2400 0010 FFF7FEFF 		bl	MX_GPIO_Init
 2401              	.LVL170:
 388:../Core/Src/main.c ****   MX_RNG_Init();
 2402              		.loc 1 388 3 view .LVU681
 2403 0014 FFF7FEFF 		bl	MX_USART1_UART_Init
 2404              	.LVL171:
 389:../Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 2405              		.loc 1 389 3 view .LVU682
 2406 0018 FFF7FEFF 		bl	MX_RNG_Init
 2407              	.LVL172:
 393:../Core/Src/main.c **** 
 2408              		.loc 1 393 3 view .LVU683
 2409 001c FFF7FEFF 		bl	rng_init
 2410              	.LVL173:
 396:../Core/Src/main.c ****   TEEC_Context ctx;
ARM GAS  Build/main.s 			page 72


 2411              		.loc 1 396 3 view .LVU684
 397:../Core/Src/main.c ****   TEEC_Session sess;
 2412              		.loc 1 397 3 view .LVU685
 398:../Core/Src/main.c ****   TEEC_UUID uuid = TA_BITCOIN_WALLET_UUID;
 2413              		.loc 1 398 3 view .LVU686
 399:../Core/Src/main.c **** 
 2414              		.loc 1 399 3 view .LVU687
 399:../Core/Src/main.c **** 
 2415              		.loc 1 399 13 is_stmt 0 view .LVU688
 2416 0020 42AC     		add	r4, sp, #264
 2417 0022 5D4B     		ldr	r3, .L136
 2418 0024 0FCB     		ldm	r3, {r0, r1, r2, r3}
 2419 0026 84E80F00 		stm	r4, {r0, r1, r2, r3}
 401:../Core/Src/main.c ****   //uint32_t cmd_id;
 2420              		.loc 1 401 3 is_stmt 1 view .LVU689
 403:../Core/Src/main.c ****   uint32_t account_id = 0;
 2421              		.loc 1 403 3 view .LVU690
 404:../Core/Src/main.c ****   char mnemonic[MNEMONIC_LENGTH] = "Hello world from Trento!";
 2422              		.loc 1 404 3 view .LVU691
 2423              	.LVL174:
 405:../Core/Src/main.c **** 
 2424              		.loc 1 405 3 view .LVU692
 405:../Core/Src/main.c **** 
 2425              		.loc 1 405 8 is_stmt 0 view .LVU693
 2426 002a 5C4C     		ldr	r4, .L136+4
 2427 002c 0DF1140C 		add	ip, sp, #20
 2428 0030 2068     		ldr	r0, [r4]	@ unaligned
 2429 0032 6168     		ldr	r1, [r4, #4]	@ unaligned
 2430 0034 A268     		ldr	r2, [r4, #8]	@ unaligned
 2431 0036 E368     		ldr	r3, [r4, #12]	@ unaligned
 2432 0038 ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 2433 003c 2069     		ldr	r0, [r4, #16]	@ unaligned
 2434 003e 6169     		ldr	r1, [r4, #20]	@ unaligned
 2435 0040 ACE80300 		stmia	ip!, {r0, r1}
 2436 0044 237E     		ldrb	r3, [r4, #24]	@ zero_extendqisi2
 2437 0046 8CF80030 		strb	r3, [ip]
 2438 004a D722     		movs	r2, #215
 2439 004c 0021     		movs	r1, #0
 2440 004e 0DF12D00 		add	r0, sp, #45
 2441 0052 FFF7FEFF 		bl	memset
 2442              	.LVL175:
 455:../Core/Src/main.c **** 
 2443              		.loc 1 455 3 is_stmt 1 view .LVU694
 458:../Core/Src/main.c ****   if (res != TEEC_SUCCESS) {
 2444              		.loc 1 458 3 view .LVU695
 458:../Core/Src/main.c ****   if (res != TEEC_SUCCESS) {
 2445              		.loc 1 458 9 is_stmt 0 view .LVU696
 2446 0056 48A9     		add	r1, sp, #288
 2447 0058 0020     		movs	r0, #0
 2448 005a FFF7FEFF 		bl	TEEC_InitializeContext
 2449              	.LVL176:
 459:../Core/Src/main.c **** 	  ERR_MSG("TEEC_InitializeContext failed with code 0x%x\r\n", res);
 2450              		.loc 1 459 3 is_stmt 1 view .LVU697
 459:../Core/Src/main.c **** 	  ERR_MSG("TEEC_InitializeContext failed with code 0x%x\r\n", res);
 2451              		.loc 1 459 6 is_stmt 0 view .LVU698
 2452 005e B0B9     		cbnz	r0, .L134
 465:../Core/Src/main.c ****   if (res != TEEC_SUCCESS) {
ARM GAS  Build/main.s 			page 73


 2453              		.loc 1 465 3 is_stmt 1 view .LVU699
 465:../Core/Src/main.c ****   if (res != TEEC_SUCCESS) {
 2454              		.loc 1 465 9 is_stmt 0 view .LVU700
 2455 0060 41AB     		add	r3, sp, #260
 2456 0062 0293     		str	r3, [sp, #8]
 2457 0064 0023     		movs	r3, #0
 2458 0066 0193     		str	r3, [sp, #4]
 2459 0068 0093     		str	r3, [sp]
 2460 006a 42AA     		add	r2, sp, #264
 2461 006c 46A9     		add	r1, sp, #280
 2462 006e 48A8     		add	r0, sp, #288
 2463              	.LVL177:
 465:../Core/Src/main.c ****   if (res != TEEC_SUCCESS) {
 2464              		.loc 1 465 9 view .LVU701
 2465 0070 FFF7FEFF 		bl	TEEC_OpenSession
 2466              	.LVL178:
 466:../Core/Src/main.c **** 	  ERR_MSG("TEEC_Opensession failed with code 0x%x origin 0x%x\r\n", res, err_origin);
 2467              		.loc 1 466 3 is_stmt 1 view .LVU702
 466:../Core/Src/main.c **** 	  ERR_MSG("TEEC_Opensession failed with code 0x%x origin 0x%x\r\n", res, err_origin);
 2468              		.loc 1 466 6 is_stmt 0 view .LVU703
 2469 0074 0446     		mov	r4, r0
 2470 0076 68B3     		cbz	r0, .L119
 467:../Core/Src/main.c **** 	  goto error;
 2471              		.loc 1 467 4 is_stmt 1 view .LVU704
 467:../Core/Src/main.c **** 	  goto error;
 2472              		.loc 1 467 4 view .LVU705
 2473 0078 419B     		ldr	r3, [sp, #260]
 2474 007a 0193     		str	r3, [sp, #4]
 2475 007c 0090     		str	r0, [sp]
 2476 007e 484B     		ldr	r3, .L136+8
 2477 0080 40F2D312 		movw	r2, #467
 2478 0084 4749     		ldr	r1, .L136+12
 2479 0086 4848     		ldr	r0, .L136+16
 2480              	.LVL179:
 467:../Core/Src/main.c **** 	  goto error;
 2481              		.loc 1 467 4 is_stmt 0 view .LVU706
 2482 0088 FFF7FEFF 		bl	printf
 2483              	.LVL180:
 467:../Core/Src/main.c **** 	  goto error;
 2484              		.loc 1 467 4 is_stmt 1 view .LVU707
 467:../Core/Src/main.c **** 	  goto error;
 2485              		.loc 1 467 86 view .LVU708
 468:../Core/Src/main.c ****   }
 2486              		.loc 1 468 4 view .LVU709
 2487 008c 07E0     		b	.L129
 2488              	.LVL181:
 2489              	.L134:
 460:../Core/Src/main.c ****   	goto error;
 2490              		.loc 1 460 4 view .LVU710
 460:../Core/Src/main.c ****   	goto error;
 2491              		.loc 1 460 4 view .LVU711
 2492 008e 0090     		str	r0, [sp]
 2493 0090 434B     		ldr	r3, .L136+8
 2494 0092 4FF4E672 		mov	r2, #460
 2495 0096 4349     		ldr	r1, .L136+12
 2496 0098 4448     		ldr	r0, .L136+20
 2497              	.LVL182:
ARM GAS  Build/main.s 			page 74


 460:../Core/Src/main.c ****   	goto error;
 2498              		.loc 1 460 4 is_stmt 0 view .LVU712
 2499 009a FFF7FEFF 		bl	printf
 2500              	.LVL183:
 460:../Core/Src/main.c ****   	goto error;
 2501              		.loc 1 460 4 is_stmt 1 view .LVU713
 460:../Core/Src/main.c ****   	goto error;
 2502              		.loc 1 460 68 view .LVU714
 461:../Core/Src/main.c ****   }
 2503              		.loc 1 461 4 view .LVU715
 2504              	.L129:
 515:../Core/Src/main.c ****   {
 2505              		.loc 1 515 3 discriminator 1 view .LVU716
 518:../Core/Src/main.c **** 	 HAL_GPIO_TogglePin(LED3_WIFI__LED4_BLE_GPIO_Port, LED3_WIFI__LED4_BLE_Pin);
 2506              		.loc 1 518 3 discriminator 1 view .LVU717
 518:../Core/Src/main.c **** 	 HAL_GPIO_TogglePin(LED3_WIFI__LED4_BLE_GPIO_Port, LED3_WIFI__LED4_BLE_Pin);
 2507              		.loc 1 518 3 discriminator 1 view .LVU718
 2508 009e 404B     		ldr	r3, .L136+8
 2509 00a0 40F20622 		movw	r2, #518
 2510 00a4 3F49     		ldr	r1, .L136+12
 2511 00a6 4248     		ldr	r0, .L136+24
 2512 00a8 FFF7FEFF 		bl	printf
 2513              	.LVL184:
 518:../Core/Src/main.c **** 	 HAL_GPIO_TogglePin(LED3_WIFI__LED4_BLE_GPIO_Port, LED3_WIFI__LED4_BLE_Pin);
 2514              		.loc 1 518 3 discriminator 1 view .LVU719
 518:../Core/Src/main.c **** 	 HAL_GPIO_TogglePin(LED3_WIFI__LED4_BLE_GPIO_Port, LED3_WIFI__LED4_BLE_Pin);
 2515              		.loc 1 518 69 discriminator 1 view .LVU720
 519:../Core/Src/main.c **** 	 HAL_Delay(1000);
 2516              		.loc 1 519 3 discriminator 1 view .LVU721
 2517 00ac 4FF40071 		mov	r1, #512
 2518 00b0 4048     		ldr	r0, .L136+28
 2519 00b2 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 2520              	.LVL185:
 520:../Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 2521              		.loc 1 520 3 discriminator 1 view .LVU722
 2522 00b6 4FF47A70 		mov	r0, #1000
 2523 00ba FFF7FEFF 		bl	HAL_Delay
 2524              	.LVL186:
 515:../Core/Src/main.c ****   {
 2525              		.loc 1 515 9 discriminator 1 view .LVU723
 2526 00be EEE7     		b	.L129
 2527              	.LVL187:
 2528              	.L126:
 2529              	.LBB15:
 2530              	.LBB16:
 477:../Core/Src/main.c ****         break;
 2531              		.loc 1 477 9 view .LVU724
 2532 00c0 419B     		ldr	r3, [sp, #260]
 2533 00c2 0093     		str	r3, [sp]
 2534 00c4 0123     		movs	r3, #1
 2535 00c6 40F2D242 		movw	r2, #1234
 2536 00ca 4799     		ldr	r1, [sp, #284]
 2537 00cc 4698     		ldr	r0, [sp, #280]
 2538 00ce FFF7FEFF 		bl	ta_bitcoin_cmd_check_masterkey
 2539              	.LVL188:
 478:../Core/Src/main.c ****       case TA_BITCOIN_WALLET_CMD_2: // Generate new master key
 2540              		.loc 1 478 9 view .LVU725
ARM GAS  Build/main.s 			page 75


 2541              	.L127:
 2542              	.LBE16:
 472:../Core/Src/main.c ****   {
 2543              		.loc 1 472 36 discriminator 2 view .LVU726
 2544 00d2 0134     		adds	r4, r4, #1
 2545              	.LVL189:
 2546              	.L119:
 472:../Core/Src/main.c ****   {
 2547              		.loc 1 472 17 discriminator 1 view .LVU727
 2548 00d4 052C     		cmp	r4, #5
 2549 00d6 4FDC     		bgt	.L135
 2550              	.LBB17:
 474:../Core/Src/main.c ****     switch(command){
 2551              		.loc 1 474 4 view .LVU728
 474:../Core/Src/main.c ****     switch(command){
 2552              		.loc 1 474 29 is_stmt 0 view .LVU729
 2553 00d8 374B     		ldr	r3, .L136+32
 2554 00da 53F82430 		ldr	r3, [r3, r4, lsl #2]
 2555              	.LVL190:
 475:../Core/Src/main.c ****       case TA_BITCOIN_WALLET_CMD_1: // Check master key
 2556              		.loc 1 475 5 is_stmt 1 view .LVU730
 2557 00de 013B     		subs	r3, r3, #1
 2558              	.LVL191:
 475:../Core/Src/main.c ****       case TA_BITCOIN_WALLET_CMD_1: // Check master key
 2559              		.loc 1 475 5 is_stmt 0 view .LVU731
 2560 00e0 052B     		cmp	r3, #5
 2561 00e2 DCD8     		bhi	.L129
 2562 00e4 01A2     		adr	r2, .L121
 2563 00e6 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 2564 00ea 00BF     		.p2align 2
 2565              	.L121:
 2566 00ec C1000000 		.word	.L126+1
 2567 00f0 05010000 		.word	.L125+1
 2568 00f4 1D010000 		.word	.L124+1
 2569 00f8 35010000 		.word	.L123+1
 2570 00fc 49010000 		.word	.L122+1
 2571 0100 61010000 		.word	.L120+1
 2572              		.p2align 1
 2573              	.L125:
 480:../Core/Src/main.c ****         break;
 2574              		.loc 1 480 9 is_stmt 1 view .LVU732
 2575 0104 05AB     		add	r3, sp, #20
 2576 0106 0193     		str	r3, [sp, #4]
 2577 0108 419B     		ldr	r3, [sp, #260]
 2578 010a 0093     		str	r3, [sp]
 2579 010c 0223     		movs	r3, #2
 2580 010e 40F2D242 		movw	r2, #1234
 2581 0112 4799     		ldr	r1, [sp, #284]
 2582 0114 4698     		ldr	r0, [sp, #280]
 2583 0116 FFF7FEFF 		bl	ta_bitcoin_cmd_generate_new_masterkey
 2584              	.LVL192:
 481:../Core/Src/main.c ****       case TA_BITCOIN_WALLET_CMD_3: // Mnemonic to master key
 2585              		.loc 1 481 9 view .LVU733
 2586 011a DAE7     		b	.L127
 2587              	.LVL193:
 2588              	.L124:
 483:../Core/Src/main.c ****         break;
ARM GAS  Build/main.s 			page 76


 2589              		.loc 1 483 9 view .LVU734
 2590 011c 05AB     		add	r3, sp, #20
 2591 011e 0193     		str	r3, [sp, #4]
 2592 0120 419B     		ldr	r3, [sp, #260]
 2593 0122 0093     		str	r3, [sp]
 2594 0124 0323     		movs	r3, #3
 2595 0126 40F2D242 		movw	r2, #1234
 2596 012a 4799     		ldr	r1, [sp, #284]
 2597 012c 4698     		ldr	r0, [sp, #280]
 2598 012e FFF7FEFF 		bl	ta_bitcoin_cmd_mnemonic_to_masterkey
 2599              	.LVL194:
 484:../Core/Src/main.c ****       case TA_BITCOIN_WALLET_CMD_4: // Erase master key
 2600              		.loc 1 484 9 view .LVU735
 2601 0132 CEE7     		b	.L127
 2602              	.LVL195:
 2603              	.L123:
 486:../Core/Src/main.c ****         break;
 2604              		.loc 1 486 9 view .LVU736
 2605 0134 419B     		ldr	r3, [sp, #260]
 2606 0136 0093     		str	r3, [sp]
 2607 0138 0423     		movs	r3, #4
 2608 013a 40F2D242 		movw	r2, #1234
 2609 013e 4799     		ldr	r1, [sp, #284]
 2610 0140 4698     		ldr	r0, [sp, #280]
 2611 0142 FFF7FEFF 		bl	ta_bitcoin_cmd_erase_masterkey
 2612              	.LVL196:
 487:../Core/Src/main.c ****       case TA_BITCOIN_WALLET_CMD_5: // Issue transactions
 2613              		.loc 1 487 9 view .LVU737
 2614 0146 C4E7     		b	.L127
 2615              	.LVL197:
 2616              	.L122:
 489:../Core/Src/main.c ****         break;
 2617              		.loc 1 489 9 view .LVU738
 2618 0148 0023     		movs	r3, #0
 2619 014a 0193     		str	r3, [sp, #4]
 2620 014c 419B     		ldr	r3, [sp, #260]
 2621 014e 0093     		str	r3, [sp]
 2622 0150 0523     		movs	r3, #5
 2623 0152 40F2D242 		movw	r2, #1234
 2624 0156 4799     		ldr	r1, [sp, #284]
 2625 0158 4698     		ldr	r0, [sp, #280]
 2626 015a FFF7FEFF 		bl	ta_bitcoin_cmd_issue_transactions
 2627              	.LVL198:
 490:../Core/Src/main.c ****       case TA_BITCOIN_WALLET_CMD_6: // Get bitcoin address
 2628              		.loc 1 490 9 view .LVU739
 2629 015e B8E7     		b	.L127
 2630              	.LVL199:
 2631              	.L120:
 492:../Core/Src/main.c ****         break;
 2632              		.loc 1 492 8 view .LVU740
 2633 0160 0023     		movs	r3, #0
 2634 0162 0193     		str	r3, [sp, #4]
 2635 0164 419B     		ldr	r3, [sp, #260]
 2636 0166 0093     		str	r3, [sp]
 2637 0168 0623     		movs	r3, #6
 2638 016a 40F2D242 		movw	r2, #1234
 2639 016e 4799     		ldr	r1, [sp, #284]
ARM GAS  Build/main.s 			page 77


 2640 0170 4698     		ldr	r0, [sp, #280]
 2641 0172 FFF7FEFF 		bl	ta_bitcoin_cmd_get_bitcoin_address
 2642              	.LVL200:
 493:../Core/Src/main.c ****       default:
 2643              		.loc 1 493 9 view .LVU741
 2644 0176 ACE7     		b	.L127
 2645              	.LVL201:
 2646              	.L135:
 493:../Core/Src/main.c ****       default:
 2647              		.loc 1 493 9 is_stmt 0 view .LVU742
 2648              	.LBE17:
 2649              	.LBE15:
 500:../Core/Src/main.c **** 
 2650              		.loc 1 500 3 is_stmt 1 view .LVU743
 2651 0178 46A8     		add	r0, sp, #280
 2652 017a FFF7FEFF 		bl	TEEC_CloseSession
 2653              	.LVL202:
 503:../Core/Src/main.c **** 
 2654              		.loc 1 503 3 view .LVU744
 2655 017e 48A8     		add	r0, sp, #288
 2656 0180 FFF7FEFF 		bl	TEEC_FinalizeContext
 2657              	.LVL203:
 506:../Core/Src/main.c **** 
 2658              		.loc 1 506 3 view .LVU745
 2659 0184 FFF7FEFF 		bl	rng_deinit
 2660              	.LVL204:
 508:../Core/Src/main.c **** 
 2661              		.loc 1 508 3 view .LVU746
 2662              	.LDL1:
 525:../Core/Src/main.c ****   /* USER CODE END 3 */
 2663              		.loc 1 525 2 view .LVU747
 2664 0188 4FF48041 		mov	r1, #16384
 2665 018c 0B48     		ldr	r0, .L136+36
 2666 018e FFF7FEFF 		bl	HAL_GPIO_TogglePin
 2667              	.LVL205:
 527:../Core/Src/main.c **** 
 2668              		.loc 1 527 1 is_stmt 0 view .LVU748
 2669 0192 0020     		movs	r0, #0
 2670 0194 4AB0     		add	sp, sp, #296
 2671              	.LCFI44:
 2672              		.cfi_def_cfa_offset 8
 2673              		@ sp needed
 2674 0196 10BD     		pop	{r4, pc}
 2675              	.LVL206:
 2676              	.L137:
 527:../Core/Src/main.c **** 
 2677              		.loc 1 527 1 view .LVU749
 2678              		.align	2
 2679              	.L136:
 2680 0198 28000000 		.word	.LANCHOR0+40
 2681 019c 00010000 		.word	.LC25
 2682 01a0 00000000 		.word	__func__.6
 2683 01a4 2C000000 		.word	.LC2
 2684 01a8 50000000 		.word	.LC27
 2685 01ac 00000000 		.word	.LC26
 2686 01b0 A8000000 		.word	.LC28
 2687 01b4 00080048 		.word	1207961600
ARM GAS  Build/main.s 			page 78


 2688 01b8 00000000 		.word	command_ids
 2689 01bc 00040048 		.word	1207960576
 2690              		.cfi_endproc
 2691              	.LFE88:
 2693              		.section	.rodata.__func__.0,"a"
 2694              		.align	2
 2697              	__func__.0:
 2698 0000 74615F62 		.ascii	"ta_bitcoin_cmd_get_bitcoin_address\000"
 2698      6974636F 
 2698      696E5F63 
 2698      6D645F67 
 2698      65745F62 
 2699              		.section	.rodata.__func__.1,"a"
 2700              		.align	2
 2703              	__func__.1:
 2704 0000 74615F62 		.ascii	"ta_bitcoin_cmd_issue_transactions\000"
 2704      6974636F 
 2704      696E5F63 
 2704      6D645F69 
 2704      73737565 
 2705              		.section	.rodata.__func__.2,"a"
 2706              		.align	2
 2709              	__func__.2:
 2710 0000 74615F62 		.ascii	"ta_bitcoin_cmd_erase_masterkey\000"
 2710      6974636F 
 2710      696E5F63 
 2710      6D645F65 
 2710      72617365 
 2711              		.section	.rodata.__func__.3,"a"
 2712              		.align	2
 2715              	__func__.3:
 2716 0000 74615F62 		.ascii	"ta_bitcoin_cmd_mnemonic_to_masterkey\000"
 2716      6974636F 
 2716      696E5F63 
 2716      6D645F6D 
 2716      6E656D6F 
 2717              		.section	.rodata.__func__.4,"a"
 2718              		.align	2
 2721              	__func__.4:
 2722 0000 74615F62 		.ascii	"ta_bitcoin_cmd_generate_new_masterkey\000"
 2722      6974636F 
 2722      696E5F63 
 2722      6D645F67 
 2722      656E6572 
 2723              		.section	.rodata.__func__.5,"a"
 2724              		.align	2
 2727              	__func__.5:
 2728 0000 74615F62 		.ascii	"ta_bitcoin_cmd_check_masterkey\000"
 2728      6974636F 
 2728      696E5F63 
 2728      6D645F63 
 2728      6865636B 
 2729              		.section	.rodata.__func__.6,"a"
 2730              		.align	2
 2733              	__func__.6:
 2734 0000 6D61696E 		.ascii	"main\000"
 2734      00
ARM GAS  Build/main.s 			page 79


 2735              		.global	command_ids
 2736              		.section	.data.command_ids,"aw"
 2737              		.align	2
 2740              	command_ids:
 2741 0000 02000000 		.word	2
 2742 0004 01000000 		.word	1
 2743 0008 03000000 		.word	3
 2744 000c 05000000 		.word	5
 2745 0010 06000000 		.word	6
 2746 0014 04000000 		.word	4
 2747              		.global	huart1
 2748              		.section	.bss.huart1,"aw",%nobits
 2749              		.align	2
 2752              	huart1:
 2753 0000 00000000 		.space	136
 2753      00000000 
 2753      00000000 
 2753      00000000 
 2753      00000000 
 2754              		.global	hrng
 2755              		.section	.bss.hrng,"aw",%nobits
 2756              		.align	2
 2759              	hrng:
 2760 0000 00000000 		.space	16
 2760      00000000 
 2760      00000000 
 2760      00000000 
 2761              		.section	.rodata
 2762              		.align	2
 2763              		.set	.LANCHOR0,. + 0
 2764              	.LC18:
 2765 0000 DF0B6AFA 		.ascii	"\337\013j\372\360\336\315\000'\200\262\221\026<\255"
 2765      F0DECD00 
 2765      2780B291 
 2765      163CAD
 2766 000f DB76575F 		.ascii	"\333vW_\365_b\261\031\242\017\332\007/,G\271"
 2766      F55F62B1 
 2766      19A20FDA 
 2766      072F2C47 
 2766      B9
 2767              	.LC20:
 2768 0020 B3150000 		.ascii	"\263\025\000\000\000\000\000\000"
 2768      00000000 
 2769              	.LC0:
 2770 0028 00F2AA8A 		.word	-1968508416
 2771 002c 5024     		.short	9296
 2772 002e E411     		.short	4580
 2773 0030 ABE20002 		.ascii	"\253\342\000\002\245\325\305\033"
 2773      A5D5C51B 
 2774              		.text
 2775              	.Letext0:
 2776              		.file 3 "../Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l475xx.h"
 2777              		.file 4 "/home/emanuele/st/stm32cubeide_1.15.0/plugins/com.st.stm32cube.ide.mcu.externaltools.gnu-
 2778              		.file 5 "/home/emanuele/st/stm32cubeide_1.15.0/plugins/com.st.stm32cube.ide.mcu.externaltools.gnu-
 2779              		.file 6 "/home/emanuele/st/stm32cubeide_1.15.0/plugins/com.st.stm32cube.ide.mcu.externaltools.gnu-
 2780              		.file 7 "../Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_def.h"
 2781              		.file 8 "../Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_rcc.h"
ARM GAS  Build/main.s 			page 80


 2782              		.file 9 "../Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_rcc_ex.h"
 2783              		.file 10 "../Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_gpio.h"
 2784              		.file 11 "../Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_dma.h"
 2785              		.file 12 "../Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_rng.h"
 2786              		.file 13 "../Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_uart.h"
 2787              		.file 14 "../Core/Inc/tee_common.h"
 2788              		.file 15 "../Core/Inc/tx.h"
 2789              		.file 16 "../Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_pwr.h"
 2790              		.file 17 "../Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_pwr_ex.h"
 2791              		.file 18 "/home/emanuele/st/stm32cubeide_1.15.0/plugins/com.st.stm32cube.ide.mcu.externaltools.gnu
 2792              		.file 19 "/home/emanuele/st/stm32cubeide_1.15.0/plugins/com.st.stm32cube.ide.mcu.externaltools.gnu
 2793              		.file 20 "../Core/Inc/tee_client_api.h"
 2794              		.file 21 "../Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_cortex.h"
 2795              		.file 22 "../Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal.h"
 2796              		.file 23 "/home/emanuele/st/stm32cubeide_1.15.0/plugins/com.st.stm32cube.ide.mcu.externaltools.gnu
 2797              		.file 24 "<built-in>"
ARM GAS  Build/main.s 			page 81


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
        Build/main.s:19     .text.MX_GPIO_Init:00000000 $t
        Build/main.s:24     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
        Build/main.s:556    .text.MX_GPIO_Init:0000029c $d
        Build/main.s:565    .rodata.ta_bitcoin_cmd_check_masterkey.str1.4:00000000 $d
        Build/main.s:586    .text.ta_bitcoin_cmd_check_masterkey:00000000 $t
        Build/main.s:591    .text.ta_bitcoin_cmd_check_masterkey:00000000 ta_bitcoin_cmd_check_masterkey
        Build/main.s:720    .text.ta_bitcoin_cmd_check_masterkey:00000078 $d
        Build/main.s:2727   .rodata.__func__.5:00000000 __func__.5
        Build/main.s:731    .rodata.ta_bitcoin_cmd_erase_masterkey.str1.4:00000000 $d
        Build/main.s:738    .text.ta_bitcoin_cmd_erase_masterkey:00000000 $t
        Build/main.s:743    .text.ta_bitcoin_cmd_erase_masterkey:00000000 ta_bitcoin_cmd_erase_masterkey
        Build/main.s:872    .text.ta_bitcoin_cmd_erase_masterkey:00000078 $d
        Build/main.s:2709   .rodata.__func__.2:00000000 __func__.2
        Build/main.s:883    .rodata.ta_bitcoin_cmd_mnemonic_to_masterkey.str1.4:00000000 $d
        Build/main.s:890    .text.ta_bitcoin_cmd_mnemonic_to_masterkey:00000000 $t
        Build/main.s:895    .text.ta_bitcoin_cmd_mnemonic_to_masterkey:00000000 ta_bitcoin_cmd_mnemonic_to_masterkey
        Build/main.s:1031   .text.ta_bitcoin_cmd_mnemonic_to_masterkey:0000007c $d
        Build/main.s:2715   .rodata.__func__.3:00000000 __func__.3
        Build/main.s:1041   .rodata.ta_bitcoin_cmd_generate_new_masterkey.str1.4:00000000 $d
        Build/main.s:1051   .text.ta_bitcoin_cmd_generate_new_masterkey:00000000 $t
        Build/main.s:1056   .text.ta_bitcoin_cmd_generate_new_masterkey:00000000 ta_bitcoin_cmd_generate_new_masterkey
        Build/main.s:1239   .text.ta_bitcoin_cmd_generate_new_masterkey:000000ac $d
        Build/main.s:2721   .rodata.__func__.4:00000000 __func__.4
        Build/main.s:1250   .rodata.print_uint8.str1.4:00000000 $d
        Build/main.s:1254   .text.print_uint8:00000000 $t
        Build/main.s:1259   .text.print_uint8:00000000 print_uint8
        Build/main.s:1308   .text.print_uint8:00000020 $d
        Build/main.s:1313   .rodata.ta_bitcoin_cmd_get_bitcoin_address.str1.4:00000000 $d
        Build/main.s:1325   .text.ta_bitcoin_cmd_get_bitcoin_address:00000000 $t
        Build/main.s:1330   .text.ta_bitcoin_cmd_get_bitcoin_address:00000000 ta_bitcoin_cmd_get_bitcoin_address
        Build/main.s:1464   .text.ta_bitcoin_cmd_get_bitcoin_address:00000084 $d
        Build/main.s:2697   .rodata.__func__.0:00000000 __func__.0
        Build/main.s:1473   .rodata.ta_bitcoin_cmd_issue_transactions.str1.4:00000000 $d
        Build/main.s:1491   .text.ta_bitcoin_cmd_issue_transactions:00000000 $t
        Build/main.s:1496   .text.ta_bitcoin_cmd_issue_transactions:00000000 ta_bitcoin_cmd_issue_transactions
        Build/main.s:1772   .text.ta_bitcoin_cmd_issue_transactions:00000130 $d
        Build/main.s:2703   .rodata.__func__.1:00000000 __func__.1
        Build/main.s:1786   .text.__io_putchar:00000000 $t
        Build/main.s:1792   .text.__io_putchar:00000000 __io_putchar
        Build/main.s:1828   .text.__io_putchar:0000001c $d
        Build/main.s:2752   .bss.huart1:00000000 huart1
        Build/main.s:1833   .text.rng_init:00000000 $t
        Build/main.s:1839   .text.rng_init:00000000 rng_init
        Build/main.s:1881   .text.rng_init:00000024 $d
        Build/main.s:1887   .text.rng_deinit:00000000 $t
        Build/main.s:1893   .text.rng_deinit:00000000 rng_deinit
        Build/main.s:1918   .text.rng_deinit:0000001c $d
        Build/main.s:1923   .text.rng_get:00000000 $t
        Build/main.s:1929   .text.rng_get:00000000 rng_get
        Build/main.s:1953   .text.rng_get:00000010 $d
        Build/main.s:1958   .text.Error_Handler:00000000 $t
        Build/main.s:1964   .text.Error_Handler:00000000 Error_Handler
        Build/main.s:1997   .text.MX_USART1_UART_Init:00000000 $t
        Build/main.s:2002   .text.MX_USART1_UART_Init:00000000 MX_USART1_UART_Init
        Build/main.s:2063   .text.MX_USART1_UART_Init:00000030 $d
ARM GAS  Build/main.s 			page 82


        Build/main.s:2069   .text.MX_RNG_Init:00000000 $t
        Build/main.s:2074   .text.MX_RNG_Init:00000000 MX_RNG_Init
        Build/main.s:2105   .text.MX_RNG_Init:00000014 $d
        Build/main.s:2759   .bss.hrng:00000000 hrng
        Build/main.s:2111   .text.SystemClock_Config:00000000 $t
        Build/main.s:2117   .text.SystemClock_Config:00000000 SystemClock_Config
        Build/main.s:2262   .text.SystemClock_Config:00000098 $d
        Build/main.s:2267   .text.PeriphCommonClock_Config:00000000 $t
        Build/main.s:2273   .text.PeriphCommonClock_Config:00000000 PeriphCommonClock_Config
        Build/main.s:2354   .rodata.main.str1.4:00000000 $d
        Build/main.s:2370   .text.main:00000000 $t
        Build/main.s:2376   .text.main:00000000 main
        Build/main.s:2566   .text.main:000000ec $d
        Build/main.s:2572   .text.main:00000104 $t
        Build/main.s:2680   .text.main:00000198 $d
        Build/main.s:2733   .rodata.__func__.6:00000000 __func__.6
        Build/main.s:2740   .data.command_ids:00000000 command_ids
        Build/main.s:2694   .rodata.__func__.0:00000000 $d
        Build/main.s:2700   .rodata.__func__.1:00000000 $d
        Build/main.s:2706   .rodata.__func__.2:00000000 $d
        Build/main.s:2712   .rodata.__func__.3:00000000 $d
        Build/main.s:2718   .rodata.__func__.4:00000000 $d
        Build/main.s:2724   .rodata.__func__.5:00000000 $d
        Build/main.s:2730   .rodata.__func__.6:00000000 $d
        Build/main.s:2737   .data.command_ids:00000000 $d
        Build/main.s:2749   .bss.huart1:00000000 $d
        Build/main.s:2756   .bss.hrng:00000000 $d
        Build/main.s:2762   .rodata:00000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
memset
puts
TEEC_InvokeCommand
printf
strlen
malloc
putchar
new_intx
new_outtx
new_tx
new_txbuf
serialize_tx
get_txbuf_data
get_txbuf_next
free_tx
free_txbuf
HAL_UART_Transmit
HAL_UART_Init
HAL_RNG_Init
HAL_PWREx_ControlVoltageScaling
HAL_PWR_EnableBkUpAccess
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
ARM GAS  Build/main.s 			page 83


HAL_RCCEx_EnableMSIPLLMode
HAL_RCCEx_PeriphCLKConfig
HAL_Init
TEEC_InitializeContext
TEEC_OpenSession
HAL_GPIO_TogglePin
HAL_Delay
TEEC_CloseSession
TEEC_FinalizeContext
